[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Dynamic Prediction in Clinical Survival Analysis",
    "section": "",
    "text": "Preface\nThis is the code companion website to this book.\nA chapter with errata is also provided."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Dynamic Prediction in Clinical Survival Analysis",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nSincerely thanks to A and B"
  },
  {
    "objectID": "chapters/chapter_01.html#figure-1.1-probability-of-death-or-relapse-within-the-next-5-years-in-data-set-6-all",
    "href": "chapters/chapter_01.html#figure-1.1-probability-of-death-or-relapse-within-the-next-5-years-in-data-set-6-all",
    "title": "1  The special nature of survival data",
    "section": "Figure 1.1: Probability of death or relapse within the next 5 years in Data Set 6 (ALL)",
    "text": "Figure 1.1: Probability of death or relapse within the next 5 years in Data Set 6 (ALL)\n\n\nCode\nrequire(dynpred)\ndata(ALL)\n\nyear &lt;- 365.25\n\n# Define relapse-free survival as the earliest of relapse and death\n# Time to relapse (rel) and time to death (srv) are in days\n# RFS will be in years\nALL$rfs &lt;- pmin(ALL$rel,ALL$srv)/year\nALL$rfs.s &lt;- pmax(ALL$rel.s,ALL$srv.s)\n\n# The function Fwindow (from dynpred) is used; it takes a survfit\n# object\nc0 &lt;- coxph(Surv(rfs,rfs.s) ~ 1, data=ALL, method=\"breslow\")\nsf0 &lt;- survfit(c0)\nFw &lt;- Fwindow(sf0,5)\n\n# Plot first 10 years\nFw &lt;- Fw[Fw$time&lt;=10,]\nplot(Fw$time,Fw$Fw,type=\"s\",ylim=c(0,max(Fw$up)),xlab=\"Years surviving\",ylab=\"Probability of dying within window\",lwd=2)\nlines(Fw$time,Fw$low,type=\"s\",lty=3)\nlines(Fw$time,Fw$up,type=\"s\",lty=3)"
  },
  {
    "objectID": "chapters/chapter_01.html#figure-1.2-probability-of-dying-within-the-next-4-years-in-data-set-2-cml-data",
    "href": "chapters/chapter_01.html#figure-1.2-probability-of-dying-within-the-next-4-years-in-data-set-2-cml-data",
    "title": "1  The special nature of survival data",
    "section": "Figure 1.2: Probability of dying within the next 4 years in Data Set 2 (CML data)",
    "text": "Figure 1.2: Probability of dying within the next 4 years in Data Set 2 (CML data)\n\n\nCode\ndata(wbc1)\n\nc0 &lt;- coxph(Surv(tyears, d) ~ 1, data = wbc1, method=\"breslow\")\nsf0 &lt;- survfit(c0)\nFw &lt;- Fwindow(sf0,4)\n\n# Plot first 4 years\nFw &lt;- Fw[Fw$time&lt;=4,]\nplot(Fw$time,Fw$Fw,type=\"s\",ylim=c(0,max(Fw$up)),xlab=\"Years surviving\",ylab=\"Probability of dying within window\",lwd=2)\nlines(Fw$time,Fw$low,type=\"s\",lty=3)\nlines(Fw$time,Fw$up,type=\"s\",lty=3)"
  },
  {
    "objectID": "chapters/chapter_01.html#figure-1.3-data-unfortunately-not-available",
    "href": "chapters/chapter_01.html#figure-1.3-data-unfortunately-not-available",
    "title": "1  The special nature of survival data",
    "section": "Figure 1.3 (data unfortunately not available)",
    "text": "Figure 1.3 (data unfortunately not available)\n\n\nCode\nlibrary(foreign)\n\nd1d2 &lt;- read.spss(\"D1d2.sav\",to.data.frame=TRUE)\nnames(d1d2) &lt;- casefold(names(d1d2))\n\nd1d2 &lt;- d1d2[d1d2$instud==\"curative\",]\nd1d2 &lt;- d1d2[,c(4,5,11,12,22,27,31,34,38,46:49,51,59,71,72,86,88,90,91)]\nd1d2$patid &lt;- row.names(d1d2)\n\nd1d2$status &lt;- as.numeric(d1d2$status)-2\n\n# Separately for D1 vs D2-dissection\nc1 &lt;- coxph(Surv(survyo, status) ~ 1, data=d1d2, subset=(randgr==\"D1\"), method=\"breslow\")\nsf1 &lt;- survfit(c1)\nFw1 &lt;- Fwindow(sf1,4,variance=FALSE)\nc2 &lt;- coxph(Surv(survyo, status) ~ 1, data=d1d2, subset=(randgr==\"D2\"), method=\"breslow\")\nsf2 &lt;- survfit(c2)\nFw2 &lt;- Fwindow(sf2,4,variance=FALSE)\n\n# Plot first 6 years\nFw1 &lt;- Fw1[Fw1$time&lt;=6,]\nFw2 &lt;- Fw2[Fw2$time&lt;=6,]\n\nplot(Fw1$time,Fw1$Fw,type=\"s\",ylim=c(0,max(c(Fw1$Fw,Fw2$Fw))),xlab=\"Years surviving\",ylab=\"Probability of dying within window\",lwd=2)\nlines(Fw2$time,Fw2$Fw,type=\"s\",lwd=2,col=8)\nlegend(\"topright\",c(\"D1\",\"D2\"),lwd=2,col=c(1,8),bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_02.html#figure-2.1-nelson-aalen-estimates-of-data-sets-6-and-2",
    "href": "chapters/chapter_02.html#figure-2.1-nelson-aalen-estimates-of-data-sets-6-and-2",
    "title": "2  Cox regression model",
    "section": "Figure 2.1: Nelson-Aalen estimates of Data Sets 6 and 2",
    "text": "Figure 2.1: Nelson-Aalen estimates of Data Sets 6 and 2\n\nData set 6\n\n\nCode\nrequire(dynpred)\ndata(ALL)\nyear &lt;- 365.25\n\n# Define relapse-free survival as the earliest of relapse and death\n# Time to relapse (rel) and time to death (srv) are in days\n# RFS will be in years\nALL$rfs &lt;- pmin(ALL$rel,ALL$srv)/365.25\nALL$rfs.s &lt;- pmax(ALL$rel.s,ALL$srv.s)\n\nc0 &lt;- coxph(Surv(rfs,rfs.s) ~ 1, data=ALL, method=\"breslow\")\nsf0 &lt;- survfit(c0)\nsf0 &lt;- data.frame(time=c(0,sf0$time),surv=c(1,sf0$surv))\nsf0$Haz &lt;- -log(sf0$surv)\nsf0 &lt;- sf0[sf0$time&lt;12,]\nplot(sf0$time,sf0$Haz,type=\"s\",xlab=\"Time (years)\",ylab=\"Cumulative hazard\",lwd=2)\n\n\n\n\nData set 2\n\n\nCode\ndata(wbc1)\n\nc0 &lt;- coxph(Surv(tyears, d) ~ 1, data = wbc1, method=\"breslow\")\nsf0 &lt;- survfit(c0)\nsf0 &lt;- data.frame(time=c(0,sf0$time),surv=c(1,sf0$surv))\nsf0$Haz &lt;- -log(sf0$surv)\nsf0 &lt;- sf0[sf0$time&lt;8,]\nplot(sf0$time,sf0$Haz,type=\"s\",xlab=\"Time (years)\",ylab=\"Cumulative hazard\",lwd=2)"
  },
  {
    "objectID": "chapters/chapter_02.html#figure-2.2-effect-of-the-hazard-ratio-on-the-death-risk",
    "href": "chapters/chapter_02.html#figure-2.2-effect-of-the-hazard-ratio-on-the-death-risk",
    "title": "2  Cox regression model",
    "section": "Figure 2.2: Effect of the hazard ratio on the death risk",
    "text": "Figure 2.2: Effect of the hazard ratio on the death risk\n\n\nCode\nF1seq &lt;- seq(0,1,by=0.005) # this will be 1-S1\nF2seq &lt;- F1seq # this will be 1-S2; for HR=1 they are the same\nplot(F1seq,F2seq,type=\"l\",lwd=2,xlab=\"F1\",ylab=\"F2\")\nHRs &lt;- c(1,1.2,1.5,2,3)\nfor (i in 1:length(HRs)) {\n    HR &lt;- HRs[i]\n    F2seq &lt;- 1 - (1-F1seq)^HR\n    lines(F1seq,F2seq,lwd=2,lty=i)\n}\nlegend(\"topleft\",paste(\"HR =\",HRs),lwd=2,lty=1:5,bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_02.html#figure-2.3-comparing-the-effect-of-hr1.5-dotted-versus-solid-for-different-types-of-hazards",
    "href": "chapters/chapter_02.html#figure-2.3-comparing-the-effect-of-hr1.5-dotted-versus-solid-for-different-types-of-hazards",
    "title": "2  Cox regression model",
    "section": "Figure 2.3: Comparing the effect of HR=1.5 (dotted versus solid) for different types of hazards",
    "text": "Figure 2.3: Comparing the effect of HR=1.5 (dotted versus solid) for different types of hazards\n\n\nCode\ntt &lt;- seq(0,10,by=0.05)\nHR &lt;- 1.5 # Hazard ratio\n\noldpar &lt;- par(no.readonly=TRUE) # save old graphical parameters\n# Two plots\nlayout(matrix(1:2, 1, 2),widths=c(10.25,9))\n# On the left, Weibull with shape=0.5, scale=5 (according to the\n# parametrization used in R); this is a decreasing hazard\npar(mar= c(5, 4, 4, 0.1) + 0.1)\nsig &lt;- 2\n# The cumulative hazard is obtained using -log(survival)\nH0 &lt;- -pweibull(tt, 1/sig, 5, lower = FALSE, log = TRUE)\nH1 &lt;- H0 * HR\n# Survival is obtained using reverse relation exp(-cumulative hazard)\nplot(tt,exp(-H0),ylim=c(0,1),type=\"l\",lwd=2,xlab=\"Time\",ylab=\"Survival\")\nlines(tt,exp(-H1),type=\"l\",lwd=2,lty=2)\ntitle(main=\"Decreasing hazard\")\n# On the right, Weibull with shape=2, scale=5 (according to the\n# parametrization used in R); this is an increasing hazard\npar(mar= c(5, 0.1, 4, 1) + 0.1)\nsig &lt;- 0.5\nH0 &lt;- -pweibull(tt, 1/sig, 5, lower = FALSE, log = TRUE)\nH1 &lt;- H0 * HR\nplot(tt,exp(-H0),ylim=c(0,1),type=\"l\",lwd=2,xlab=\"Time\",ylab=\"Survival\",axes=FALSE)\nlines(tt,exp(-H1),type=\"l\",lwd=2,lty=2)\naxis(1)\nbox()\ntitle(main=\"Increasing hazard\")\npar(oldpar) # reset graphical parameters"
  },
  {
    "objectID": "chapters/chapter_02.html#example-breast-cancer-ii",
    "href": "chapters/chapter_02.html#example-breast-cancer-ii",
    "title": "2  Cox regression model",
    "section": "Example: Breast cancer II",
    "text": "Example: Breast cancer II\nRead in data (and provide labels); both data (“bc.txt” in tab delimited txt format and syntax should be in working directory for this to work\n\n\nCode\nsource(\"bc syntax.R\")"
  },
  {
    "objectID": "chapters/chapter_02.html#table-2.1-the-cox-model-for-the-eortc-breast-cancer-data-data-set-5-including-all-risk-factors",
    "href": "chapters/chapter_02.html#table-2.1-the-cox-model-for-the-eortc-breast-cancer-data-data-set-5-including-all-risk-factors",
    "title": "2  Cox regression model",
    "section": "Table 2.1: The Cox model for the EORTC breast cancer data (Data Set 5), including all risk factors",
    "text": "Table 2.1: The Cox model for the EORTC breast cancer data (Data Set 5), including all risk factors\n\n\nCode\ncfull &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal + age50 +\n  adjchem + tam + periop, data=bc, method=\"breslow\")\ncfull\n\nXbeta &lt;- bc$Xbeta &lt;- cfull$linear.predictors\nmean(bc$Xbeta) # is 0\nsd(bc$Xbeta)"
  },
  {
    "objectID": "chapters/chapter_02.html#figure-2.4-histogram-of-the-prognostic-index-pi-in-dark-grey-patients-at-risk-after-eight-years-in-light-grey-patients-who-died-or-were-lost-to-follow-up-within-eight-years",
    "href": "chapters/chapter_02.html#figure-2.4-histogram-of-the-prognostic-index-pi-in-dark-grey-patients-at-risk-after-eight-years-in-light-grey-patients-who-died-or-were-lost-to-follow-up-within-eight-years",
    "title": "2  Cox regression model",
    "section": "Figure 2.4: Histogram of the prognostic index PI; in dark-grey patients at risk after eight years, in light-grey patients who died or were lost-to-follow-up within eight years",
    "text": "Figure 2.4: Histogram of the prognostic index PI; in dark-grey patients at risk after eight years, in light-grey patients who died or were lost-to-follow-up within eight years\n\n\nCode\ncuts &lt;- seq(-2,2,by=0.5)\nbc$risk8 &lt;- 1\nbc$risk8[bc$survyrs&gt;=8] &lt;- 0\ntbl &lt;- table(bc$risk8,cut(bc$Xbeta,cuts))\nbarplot(tbl,space=0,ylim=c(0,1000),xlab=\"Prognostic index\",ylab=\"Frequency\",axes=FALSE,axisnames=FALSE)\naxis(1,at=0:8,labels=cuts)\naxis(2)\nbox()"
  },
  {
    "objectID": "chapters/chapter_02.html#distribution-of-prognostic-index-after-8-years",
    "href": "chapters/chapter_02.html#distribution-of-prognostic-index-after-8-years",
    "title": "2  Cox regression model",
    "section": "Distribution of prognostic index after 8 years",
    "text": "Distribution of prognostic index after 8 years\n\n\nCode\ntable(bc$risk8) # bc$risk8=0 means at risk\n# Those still at risk\nmean(bc$Xbeta[bc$risk8==0])\nsd(bc$Xbeta[bc$risk8==0])\n# Those no longer at risk\nmean(bc$Xbeta[bc$risk8==1])\nsd(bc$Xbeta[bc$risk8==1])"
  },
  {
    "objectID": "chapters/chapter_02.html#figure-2.5-predicted-survival-curves-for-different-values-of-the-prognostic-index",
    "href": "chapters/chapter_02.html#figure-2.5-predicted-survival-curves-for-different-values-of-the-prognostic-index",
    "title": "2  Cox regression model",
    "section": "Figure 2.5: Predicted survival curves for different values of the prognostic index",
    "text": "Figure 2.5: Predicted survival curves for different values of the prognostic index\n\n\nCode\n# Rerun a Cox model with the prognostic index\n# This should have an estimated coefficient of exactly 1 (check)\ncXbeta &lt;- coxph(Surv(survyrs,survstat) ~ Xbeta, data=bc, method=\"breslow\")\n\n# The survfit function from the survival library can take a \"newdata\"\n# argument, in which the value(s) of the covariate(s) is/are specified\nnd &lt;- data.frame(Xbeta=-2*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nplot(sf,lwd=2,conf.int=FALSE,mark.time=FALSE,lty=2,xlab=\"Time in years\",ylab=\"Survival function\")\nnd &lt;- data.frame(Xbeta=-1*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,mark.time=FALSE,lty=3)\nnd &lt;- data.frame(Xbeta=0)\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,mark.time=FALSE,lty=1)\nnd &lt;- data.frame(Xbeta=sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,mark.time=FALSE,lty=4)\nnd &lt;- data.frame(Xbeta=2*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,mark.time=FALSE,lty=5)\n\n# Add Kaplan-Meier plot\nc.km &lt;- coxph(Surv(survyrs,survstat) ~ 1, data=bc, method=\"breslow\")\nsf &lt;- survfit(c.km)\nlines(sf,lwd=2,conf.int=FALSE,mark.time=FALSE,col=8)\nlegend(\"bottomleft\",c(\"Mean-2sd\",\"Mean-sd\",\"Mean\",\"Mean+sd\",\"Mean+2sd\",\"Kaplan-Meier\"),lwd=2,col=c(1,1,1,1,1,8),lty=c(2,3,1,4,5,1),bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_02.html#figure-2.6-dynamic-prediction-curves-for-different-values-of-the-prognostic-index",
    "href": "chapters/chapter_02.html#figure-2.6-dynamic-prediction-curves-for-different-values-of-the-prognostic-index",
    "title": "2  Cox regression model",
    "section": "Figure 2.6: Dynamic prediction curves for different values of the prognostic index",
    "text": "Figure 2.6: Dynamic prediction curves for different values of the prognostic index\n\n\nCode\nnd &lt;- data.frame(Xbeta=2*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nFw &lt;- Fwindow(sf,5)\n# Plot first 8 years only\nFw &lt;- Fw[Fw$time&lt;=8,]\nplot(Fw$time,Fw$Fw,type=\"s\",ylim=c(0,0.5),xlab=\"Years surviving\",ylab=\"Probability of dying within window\",lwd=2,lty=5)\nnd &lt;- data.frame(Xbeta=sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nFw &lt;- Fwindow(sf,5)\nFw &lt;- Fw[Fw$time&lt;=8,]\nlines(Fw$time,Fw$Fw,type=\"s\",lwd=2,lty=4)\nnd &lt;- data.frame(Xbeta=0)\nsf &lt;- survfit(cXbeta,newdata=nd)\nFw &lt;- Fwindow(sf,5)\nFw &lt;- Fw[Fw$time&lt;=8,]\nlines(Fw$time,Fw$Fw,type=\"s\",lwd=2,lty=1)\nnd &lt;- data.frame(Xbeta=-sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nFw &lt;- Fwindow(sf,5)\nFw &lt;- Fw[Fw$time&lt;=8,]\nlines(Fw$time,Fw$Fw,type=\"s\",lwd=2,lty=3)\nnd &lt;- data.frame(Xbeta=-2*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nFw &lt;- Fwindow(sf,5)\nFw &lt;- Fw[Fw$time&lt;=8,]\nlines(Fw$time,Fw$Fw,type=\"s\",lwd=2,lty=2)\nc.km &lt;- coxph(Surv(survyrs,survstat) ~ 1, data=bc, method=\"breslow\")\nsf &lt;- survfit(c.km)\nFw &lt;- Fwindow(sf,5)\nFw &lt;- Fw[Fw$time&lt;=8,]\nlines(Fw$time,Fw$Fw,type=\"s\",lwd=2,col=8)\nlegend(\"topright\",c(\"Mean-2sd\",\"Mean-sd\",\"Mean\",\"Mean+sd\",\"Mean+2sd\",\"Kaplan-Meier\"),lwd=2,col=c(1,1,1,1,1,8),lty=c(2,3,1,4,5,1),bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_02.html#delayed-entry-code-and-data-is-availabe-upon-request",
    "href": "chapters/chapter_02.html#delayed-entry-code-and-data-is-availabe-upon-request",
    "title": "2  Cox regression model",
    "section": "Delayed entry (code and data is availabe upon request)",
    "text": "Delayed entry (code and data is availabe upon request)"
  },
  {
    "objectID": "chapters/chapter_03.html#table-3.1-the-fitted-cox-model-for-data-set-1-ovarian-cancer",
    "href": "chapters/chapter_03.html#table-3.1-the-fitted-cox-model-for-data-set-1-ovarian-cancer",
    "title": "3  Measuring the predictive value of a Cox model",
    "section": "Table 3.1: The fitted Cox model for Data Set 1 (ovarian cancer)",
    "text": "Table 3.1: The fitted Cox model for Data Set 1 (ovarian cancer)\n\n\nCode\nrequire(dynpred)\ndata(ova)\n\ncfull &lt;- coxph(Surv(tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn,\n  data = ova, method=\"breslow\")\ncfull\n\n# The prognostic index\nXbeta &lt;- ova$Xbeta &lt;- cfull$linear.predictors\nmean(ova$Xbeta)\nsqrt(var(ova$Xbeta))"
  },
  {
    "objectID": "chapters/chapter_03.html#figure-3.1-predicted-survival-curves-for-different-values-of-the-prognostic-index",
    "href": "chapters/chapter_03.html#figure-3.1-predicted-survival-curves-for-different-values-of-the-prognostic-index",
    "title": "3  Measuring the predictive value of a Cox model",
    "section": "Figure 3.1: Predicted survival curves for different values of the prognostic index",
    "text": "Figure 3.1: Predicted survival curves for different values of the prognostic index\n\n\nCode\ncXbeta &lt;- coxph(Surv(tyears, d) ~ Xbeta, data=ova, method=\"breslow\")\nnd &lt;- data.frame(Xbeta=-2*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nplot(sf,lwd=2,conf.int=FALSE,mark.time=FALSE,lty=2,xlab=\"Time in years\",ylab=\"Survival function\")\nnd &lt;- data.frame(Xbeta=-1*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,lty=3,mark.time=FALSE)\nnd &lt;- data.frame(Xbeta=0)\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,lty=1,mark.time=FALSE)\nnd &lt;- data.frame(Xbeta=sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,lty=4,mark.time=FALSE)\nnd &lt;- data.frame(Xbeta=2*sd(Xbeta))\nsf &lt;- survfit(cXbeta,newdata=nd)\nlines(sf,lwd=2,conf.int=FALSE,lty=5,mark.time=FALSE)\nlegend(\"topright\",c(\"Mean-2sd\",\"Mean-sd\",\"Mean\",\"Mean+sd\",\"Mean+2sd\"),lwd=2,col=c(1,1,1,1,1),lty=c(2,3,1,4,5),bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_03.html#figure-3.2-censored-80-tolerance-intervals-for-different-values-of-the-prognostic-index",
    "href": "chapters/chapter_03.html#figure-3.2-censored-80-tolerance-intervals-for-different-values-of-the-prognostic-index",
    "title": "3  Measuring the predictive value of a Cox model",
    "section": "Figure 3.2: (Censored) 80% tolerance intervals for different values of the prognostic index",
    "text": "Figure 3.2: (Censored) 80% tolerance intervals for different values of the prognostic index\n\n\nCode\n# This causes warnings when the right hand side of the tolerance interval\n# cannot always be determined (see text book). These warnings can be safely\n# ignored.\ntmp &lt;- toleranceplot(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova, horizon = 8, xlab = \"Prognostic index\")"
  },
  {
    "objectID": "chapters/chapter_03.html#the-rest-to-be-divided",
    "href": "chapters/chapter_03.html#the-rest-to-be-divided",
    "title": "3  Measuring the predictive value of a Cox model",
    "section": "The rest (to be divided)",
    "text": "The rest (to be divided)\n\n\nCode\n###############################################################################\n### Figure 3.3: Partly imputed survival time versus prognostic index\n### (Royston scatterplot)\n###############################################################################\n\n# The imputations of the censored data are random; this seed exactly reproduces\n# the results of the book, different seeds will give slightly different results\nset.seed(20100301)\ntmp &lt;- scatterplot(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova, horizon = 8, xlab = \"Prognostic index\")\n\n###############################################################################\n### Figure 3.4: AUC(t) for the Cox model of the ovarian cancer data\n###############################################################################\n\nAUC(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam, data = ova)\n\n###############################################################################\n### Figure 3.5: Cw(t) with w = 2 for the Cox model of Table 3.1\n###############################################################################\n\nAUCw.ova &lt;- AUCw(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova, width = 2)\nAUCw.ova &lt;- AUCw.ova[AUCw.ova$time&lt;=4,]\nplot(AUCw.ova$time,AUCw.ova$AUCw,type=\"s\",lwd=2,ylim=c(0.5,1),\n  xlab=\"Time t (years)\",ylab=\"Dynamic C\")\n\n###############################################################################\n### Prediction error curves\n###############################################################################\n\n# The function pecox from dynpred calculates these\n# See the documentation for details\nErrBrier1 &lt;- pecox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"Brier\")\nErrBrier0 &lt;- pecox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"Brier\")\nErrKL1 &lt;- pecox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"KL\")\nErrKL0 &lt;- pecox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"KL\")\nErrBrier &lt;- data.frame(time=ErrBrier1$time, Err0=ErrBrier0$Err, Err1=ErrBrier1$Err)\nErrBrier$ErrRed &lt;- (ErrBrier$Err0-ErrBrier$Err1)/ErrBrier$Err0\nErrKL &lt;- data.frame(time=ErrKL1$time, Err0=ErrKL0$Err, Err1=ErrKL1$Err)\nErrKL$ErrRed &lt;- (ErrKL$Err0-ErrKL$Err1)/ErrKL$Err0\nErrKL[1,2:3] &lt;- 0\nErrBrier &lt;- subset(ErrBrier, time&lt;=6)\nErrKL &lt;- subset(ErrKL, time&lt;=6)\n\n###############################################################################\n### Figure 3.6: Prediction error curves\n###############################################################################\n\n### Note: small differences with the plots in the book are possible for\n### two reasons. First because by default the prediction error functions\n### in dynpred are calculated at event AND censoring time points, while\n### those in the book were calculated only at the event time points. The\n### second reason is that the (dynamic) prediction error functions use\n### slightly different censoring estimates than those used in the book.\n### Especially at the end of follow-up this might lead to visible differences.\n\nplot(ErrBrier$time,ErrBrier$Err1,type=\"s\",ylim=c(0,max(ErrKL[,c(\"Err0\",\"Err1\")])),\n    lwd=2,xlab=\"Time (years)\",ylab=\"Prediction error\")\nlines(ErrBrier$time,ErrBrier$Err0,type=\"s\",lwd=2,lty=2)\nlines(ErrKL$time,ErrKL$Err1,type=\"s\",lwd=2)\nlines(ErrKL$time,ErrKL$Err0,type=\"s\",lwd=2,lty=2)\nlegend(\"topright\",c(\"Null model (KM)\",\"Covariate model\"),lwd=2,lty=2:1,bty=\"n\")\ntext(6,0.43,\"Kullback-Leibler\",adj=1)\ntext(6,0.20,\"Brier\",adj=1)\n\n###############################################################################\n### Figure 3.7: Relative error reduction curves\n###############################################################################\n\nplot(ErrBrier$time,ErrBrier$ErrRed,type=\"s\",ylim=range(c(0,ErrBrier$ErrRed,ErrKL$ErrRed),na.rm=TRUE),lwd=2,col=8,\n    xlab=\"Time (years)\",ylab=\"Prediction error reduction\")\nlines(ErrKL$time,ErrKL$ErrRed,type=\"s\",lwd=2)\nlegend(\"topright\",c(\"Kullback-Leibler\",\"Brier\"),lwd=2,col=c(1,8),bty=\"n\")\n\n###############################################################################\n### Figure 3.8: Dynamic prediction error curves (w = 2) for Kullback-Leibler\n### and Brier scores\n###############################################################################\n\ndynpe1.KL &lt;- pewcox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"KL\")\ndynpe0.KL &lt;- pewcox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"KL\")\ndynpe1.Brier &lt;- pewcox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"Brier\")\ndynpe0.Brier &lt;- pewcox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"Brier\")\n\ndynpe.Brier &lt;- data.frame(time=dynpe1.Brier$time, Err0=dynpe0.Brier$Err, Err1=dynpe1.Brier$Err)\ndynpe.Brier$ErrRed &lt;- (dynpe.Brier$Err0-dynpe.Brier$Err1)/dynpe.Brier$Err0\ndynpe.KL &lt;- data.frame(time=dynpe1.KL$time, Err0=dynpe0.KL$Err, Err1=dynpe1.KL$Err)\ndynpe.KL$ErrRed &lt;- (dynpe.KL$Err0-dynpe.KL$Err1)/dynpe.KL$Err0\n\n# Cut off last part\nnt &lt;- length(dynpe.Brier$time)\ndynpe.Brier &lt;- subset(dynpe.Brier,time&lt;=5.25)\ndynpe.KL &lt;- subset(dynpe.KL,time&lt;=5.25)\n\n###############################################################################\n### Figure 3.8, left panel\n###############################################################################\n\nplot(dynpe.Brier$time,dynpe.Brier$Err1,type=\"s\",xlim=c(0,5.25),ylim=c(0,max(cbind(dynpe.Brier[,c(\"Err0\",\"Err1\")],dynpe.KL[,c(\"Err0\",\"Err1\")]))),\n    lwd=2,xlab=\"Time (years)\",ylab=\"Prediction error\")\nlines(dynpe.Brier$time,dynpe.Brier$Err0,type=\"s\",lwd=2,lty=2)\nlines(dynpe.KL$time,dynpe.KL$Err1,type=\"s\",lwd=2)\nlines(dynpe.KL$time,dynpe.KL$Err0,type=\"s\",lwd=2,lty=2)\nlegend(\"topright\",c(\"Null model (KM)\",\"Covariate model\"),lwd=2,lty=2:1,bty=\"n\")\ntext(5.4,0.6,\"Kullback-Leibler\",adj=1)\ntext(5.4,0.12,\"Brier\",adj=1)\n\n###############################################################################\n### Figure 3.8, right panel\n###############################################################################\n\nplot(dynpe.Brier$time,dynpe.Brier$ErrRed,type=\"s\",xlim=range(dynpe.KL$time),\n  ylim=range(c(dynpe.Brier$ErrRed,dynpe.KL$ErrRed)),lwd=2,col=8,\n  xlab=\"Time (years)\",ylab=\"Prediction error reduction\")\nlines(dynpe.KL$time,dynpe.KL$ErrRed,type=\"s\",lwd=2)\nlegend(\"topright\",c(\"Kullback-Leibler\",\"Brier\"),lwd=2,col=c(1,8),bty=\"n\")\n\n###############################################################################\n### Table 3.2: Interval-specific and total prediction errors\n###############################################################################\n\ndynpe1.KL1 &lt;- pewcox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 1, FUN = \"KL\")\ndynpe0.KL1 &lt;- pewcox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 1, FUN = \"KL\")\ndynpe1.Brier1 &lt;- pewcox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 1, FUN = \"Brier\")\ndynpe0.Brier1 &lt;- pewcox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 1, FUN = \"Brier\")\n\ndynpe.Brier1 &lt;- data.frame(time=dynpe1.Brier1$time, Err0=dynpe0.Brier1$Err, Err1=dynpe1.Brier1$Err)\ndynpe.Brier1$ErrRed &lt;- (dynpe.Brier1$Err0-dynpe.Brier1$Err1)/dynpe.Brier1$Err0\ndynpe.KL1 &lt;- data.frame(time=dynpe1.KL1$time, Err0=dynpe0.KL1$Err, Err1=dynpe1.KL1$Err)\ndynpe.KL1$ErrRed &lt;- (dynpe.KL1$Err0-dynpe.KL1$Err1)/dynpe.KL1$Err0\n\nova.km &lt;- survfit(formula = Surv(tyears, d) ~ 1, data = ova)\nKMstart &lt;- evalstep(ova.km$time,ova.km$surv,0:6,subst=1)\n\nres &lt;- data.frame(Interval=c(\"0-1\",\"1-2\",\"2-3\",\"3-4\",\"4-5\",\"5-6\"),\n  KMstart=KMstart[1:6],\n  Hazard=NA,\n  BrierKM=c(dynpe.Brier1$Err0[1],evalstep(dynpe.Brier1$time,dynpe.Brier1$Err0,1:5)),\n  BrierModel=c(dynpe.Brier1$Err1[1],evalstep(dynpe.Brier1$time,dynpe.Brier1$Err1,1:5)),\n  BrierRed=c(dynpe.Brier1$ErrRed[1],evalstep(dynpe.Brier1$time,dynpe.Brier1$ErrRed,1:5)),\n  KLKM=c(dynpe.KL1$Err0[1],evalstep(dynpe.KL1$time,dynpe.KL1$Err0,1:5)),\n  KLModel=c(dynpe.KL1$Err1[1],evalstep(dynpe.KL1$time,dynpe.KL1$Err1,1:5)),\n  KLRed=c(dynpe.KL1$ErrRed[1],evalstep(dynpe.KL1$time,dynpe.KL1$ErrRed,1:5)))\nres$Hazard &lt;- 1 - KMstart[-1]/KMstart[-7]\n\n# Append totals\nres &lt;- rbind(res,data.frame(Interval=\"Total\",KMstart=NA,Hazard=NA,\n            BrierKM=sum(res$KMstart*res$BrierKM),\n            BrierModel=sum(res$KMstart*res$BrierModel),\n            BrierRed=1-sum(res$KMstart*res$BrierModel)/sum(res$KMstart*res$BrierKM),\n            KLKM=sum(res$KMstart*res$KLKM),\n            KLModel=sum(res$KMstart*res$KLModel),\n            KLRed=1-sum(res$KMstart*res$KLModel)/sum(res$KMstart*res$KLKM)))\nres\n# For book, round to three decimals\nres[,2:9] &lt;- round(res[,2:9],3)\nres\n\n###############################################################################\n### Cross-validated C-index\n###############################################################################\n\ndate()\nCVcindex(Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam, data = ova)\ndate()\nCVcindex(Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam, data = ova, type=\"pair\")\ndate()\nCVcindex(Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam, data = ova, type=\"fullpairs\")\ndate()\n\n###############################################################################\n### Cross-validated prediction error curves\n###############################################################################\n\nErrBrierCV &lt;- pecox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, FUN=\"Brier\", CV=TRUE, progress=TRUE)\nErrKLCV &lt;- pecox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, FUN=\"KL\", CV=TRUE, progress=TRUE)\n\n### The following is copied from above, no need to run it if ErrBrier and ErrKL are known\n# ErrBrier1 &lt;- pecox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n#   Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"Brier\")\n# ErrBrier0 &lt;- pecox(Surv(tyears, d) ~ 1,\n#   Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"Brier\")\n# ErrKL1 &lt;- pecox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n#   Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"KL\")\n# ErrKL0 &lt;- pecox(Surv(tyears, d) ~ 1,\n#   Surv(tyears, 1-d) ~ 1, data = ova, FUN = \"KL\")\n# ErrBrier &lt;- data.frame(time=ErrBrier1$time, Err0=ErrBrier0$Err, Err1=ErrBrier1$Err)\n# ErrBrier$ErrRed &lt;- (ErrBrier$Err0-ErrBrier$Err1)/ErrBrier$Err0\n# ErrKL &lt;- data.frame(time=ErrKL1$time, Err0=ErrKL0$Err, Err1=ErrKL1$Err)\n# ErrKL$ErrRed &lt;- (ErrKL$Err0-ErrKL$Err1)/ErrKL$Err0\n\nErrBrier1 &lt;- subset(ErrBrier1, time&lt;=6)\nErrBrier0 &lt;- subset(ErrBrier0, time&lt;=6)\nErrKL1 &lt;- subset(ErrKL1, time&lt;=6)\nErrKL0 &lt;- subset(ErrKL0, time&lt;=6)\nErrBrierCV &lt;- subset(ErrBrierCV, time&lt;=6)\nErrKLCV &lt;- subset(ErrKLCV, time&lt;=6)\n\n###############################################################################\n### Figure 3.9: Prediction errors with cross-validation\n###############################################################################\n\nplot(ErrBrier1$time,ErrBrier1$Err,type=\"s\",xlim=c(0,6),ylim=c(0,max(cbind(ErrBrier[,c(\"Err0\",\"Err1\")],ErrKL[,c(\"Err0\",\"Err1\")]))+0.015),\n    lwd=2,xlab=\"Time (years)\",ylab=\"Prediction error\")\nlines(ErrBrierCV$time,ErrBrierCV$Err,type=\"s\",lwd=2,col=8)\nlines(ErrBrier0$time,ErrBrier0$Err,type=\"s\",lwd=2,lty=2)\nlines(ErrKL1$time,ErrKL1$Err,type=\"s\",lwd=2)\nlines(ErrKLCV$time,ErrKLCV$Err,type=\"s\",lwd=2,col=8)\nlines(ErrKL0$time,ErrKL0$Err,type=\"s\",lwd=2,lty=2)\nlegend(\"topright\",c(\"Null model (KM)\",\"Covariate model (CV)\",\"Covariate model\"),lwd=2,lty=c(2,1,1),col=c(1,8,1),bty=\"n\")\ntext(6,0.425,\"Kullback-Leibler\",adj=1)\ntext(6,0.20,\"Brier\",adj=1)\n\n###############################################################################\n### Table 3.3: Partial log-likelihoods with and without cross-validation\n###############################################################################\n\ncfull &lt;- coxph(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova)\n\nCVPLKM &lt;- CVPL(Surv(tyears, d) ~ 1, data = ova)\nCVPLCox &lt;- CVPL(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova, overall=TRUE)\nCVPLCVCox &lt;- CVPL(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova)\n\ncfull$loglik\ndiff(cfull$loglik)\nCVPLKM\nCVPLCox\nCVPLCVCox\nCVPLCox - CVPLKM\nCVPLCVCox - CVPLKM"
  },
  {
    "objectID": "chapters/chapter_04.html",
    "href": "chapters/chapter_04.html",
    "title": "4  Calibration and revision of Cox models",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 4 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\nrequire(dynpred)\ndata(ova)\n\n###############################################################################\n###############################################################################\n### Internal calibration by shrinkage\n###############################################################################\n###############################################################################\n\nCVPL(Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova) # no shrinkage\nCVPL(Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova, shrink = 0)\ncseq &lt;- seq(0,1.05,by=0.01)\ncvplseq &lt;- rep(NA,length(cseq))\nfor (i in 1:length(cseq))\n  cvplseq[i] &lt;- CVPL(formula = Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam,\n    data = ova, shrink = cseq[i], progress=FALSE)\n\ncvplf &lt;- function(shrink)\n  CVPL(formula=Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam,\n    data=ova, shrink=shrink, progress=FALSE)\nopt &lt;- optimize(f = cvplf, lower = 0.001, upper = 2, maximum = TRUE)\nopt\nshr &lt;- opt$maximum # save for plot\n\n### Cox regression with the cross-validated prognostic index\n## Call CVcindex to get cross-validated prognostic index\nxc &lt;- CVcindex(Surv(tyears,d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova, matrix=TRUE)\novaa &lt;- ova\novaa$PIx &lt;- diag(xc$matrix)\ncPIx &lt;- coxph(Surv(tyears,d) ~ PIx, data=ovaa)\nplPIx &lt;- rep(NA,length(cseq))\nord &lt;- order(ovaa$tyears,-ovaa$d)\novaa &lt;- ovaa[ord,]\nfor (i in 1:length(cseq)) {\n    ovaa$rat &lt;- exp(cseq[i] * ovaa$PIx)\n    ovaa$rcsrat &lt;- rev(cumsum(rev(ovaa$rat)))\n    ovaa1 &lt;- ovaa[ovaa$d==1,]\n    plPIx[i] &lt;- sum(log(ovaa1$rat) - log(ovaa1$rcsrat))\n}\n\n###############################################################################\n### Figure 4.1: Log-likelihood as function of the shrinkage factor\n###############################################################################\n\nshift &lt;- cvplseq[1]-plPIx[1]\nplPIxshift &lt;- plPIx + shift\npar(oma=c(1,1,0,1.5),mgp=c(2.5,1,0))\nplot(cseq,plPIxshift,type=\"l\",lwd=2,lty=2,xlab=\"Shrinkage factor\",ylab=\"Cross-validated log partial likelihood\",axes=FALSE)\nmtext(\"Log partial likelihood\",side=4,line=2)\nabline(v=shr,lty=3)\nlines(cseq,cvplseq,type=\"l\",lwd=2)\nabline(v=cPIx$coef,lty=4)\naxis(1)\naxis(2)\naxis(4,at=seq(-1415,-1390,by=5)+shift,labels=seq(-1415,-1390,by=5))\nbox()\nlegend(\"topleft\",c(\"CVPL\",\"PL (cross-validated PI)\"),lwd=2,lty=1:2,bty=\"n\")\n\n# Difference between CVPL at 1 and maximized at \\hat{c}\nimprovement &lt;- opt$objective -\n  CVPL(formula = Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n    data = ova)\nimprovement\n# p-value\n(1-pchisq(2*improvement,df=1))/2\n\n###############################################################################\n###############################################################################\n### External calibration (ALL data)\n###############################################################################\n###############################################################################\n\nrequire(dynpred)\ndata(ALL)\n\n# RFS is endpoint\nALL$rfs &lt;- pmin(ALL$rel,ALL$srv)\nALL$rfs.s &lt;- pmax(ALL$rel.s,ALL$srv.s)\n# ALL has cohort effect, first cohort is different from 2 and 3\nALL$cohort &lt;- as.numeric(ALL$year)\nALL$cohort[ALL$cohort==3] &lt;- 2\ncoxph(Surv(rfs, rfs.s) ~  year, data = ALL, method=\"breslow\")\ncoxph(Surv(rfs, rfs.s) ~  cohort, data = ALL, method=\"breslow\")\n\n###############################################################################\n### Figure 4.2: Relapse-free survival curves for each of the three ALL cohorts\n###############################################################################\n\n# Three Kaplan-Meiers\nkm1 &lt;- survfit(Surv(rfs, rfs.s) ~ 1, data = ALL[ALL$year==\"1985-1989\",])\nkm2 &lt;- survfit(Surv(rfs, rfs.s) ~ 1, data = ALL[ALL$year==\"1990-1994\",])\nkm3 &lt;- survfit(Surv(rfs, rfs.s) ~ 1, data = ALL[ALL$year==\"1995-1998\",])\nidx &lt;- which(km1$time&lt;=10*365.25)\n\nplot(c(0,km1$time[idx])/365.25,c(1,km1$surv[idx]),type=\"s\",xlim=c(0,10),ylim=c(0,1),lwd=2,xlab=\"Years since transplantation\",ylab=\"Relapse-free survival\")\nidx &lt;- which(km2$time&lt;=10*365.25)\nlines(c(0,km2$time[idx])/365.25,c(1,km2$surv[idx]),type=\"s\",lwd=2,lty=2)\nidx &lt;- which(km3$time&lt;=10*365.25)\nlines(c(0,km3$time[idx])/365.25,c(1,km3$surv[idx]),type=\"s\",lwd=2,lty=3)\nlegend(\"topright\",c(\"1985-1989\",\"1990-1994\",\"1995-1998\"),lwd=2,lty=1:3,bty=\"n\")\n\n###############################################################################\n### Table 4.1: Prognostic index for relapse-free survival based on cohort 1\n### of the ALL data\n###############################################################################\n\n# Prognostic model on first cohort\nALL1 &lt;- ALL[ALL$cohort==1,]\nn1 &lt;- nrow(ALL1)\nc1 &lt;- coxph(Surv(rfs, rfs.s) ~  agecl + proph + match, data = ALL1, method=\"breslow\")\nc1\nX &lt;- model.matrix(Surv(rfs, rfs.s) ~  agecl + proph + match, data = ALL)[,-1]\nPI &lt;- ALL$PI &lt;- as.vector(X %*% c1$coef)\nALL1 &lt;- ALL[ALL$cohort==1,]\nmean(PI)\nsqrt(var(PI))\n\n# Baseline hazard, using survfit and newdata with baseline values\n# Not with basehaz() because I don't want the censored time points\nndata &lt;- data.frame(agecl=1, proph=1, match=1)\nndata$agecl &lt;- factor(ndata$agecl, levels=1:3, labels=levels(ALL1$agecl))\nndata$proph &lt;- factor(ndata$proph, levels=1:2, labels=levels(ALL1$proph))\nndata$match &lt;- factor(ndata$match, levels=1:2, labels=levels(ALL1$match))\n\nH0 &lt;- survfit(c1, newdata=ndata, censor=FALSE)\nH0 &lt;- data.frame(time=H0$time/365.25, hazard=-log(H0$surv)) # time in years\n\n###############################################################################\n### Figure 4.3: Estimated cumulative baseline hazard of the prediction model\n###############################################################################\n\nplot(c(0,H0$time), c(0,H0$hazard), type=\"s\", lwd=2, xlab=\"Years since transplantation\", ylab=\"Cumulative hazard\")\n\n### Concordance index\ncindex(Surv(rfs, rfs.s) ~ agecl + proph + match, data=ALL1)\nCVcindex(Surv(rfs, rfs.s) ~ agecl + proph + match, data=ALL1)\n\n###############################################################################\n### Figure 4.4 Dynamic prediction errors (window width w = 0.5)\n### with cross-validation for the prognostic index of Table 4.1 in the first\n### cohort of the ALL data\n###############################################################################\n\n### Kullback-Leibler\ndynpe1.KL.ALL &lt;- pewcox(Surv(rfs, rfs.s) ~ agecl + proph + match,\n  Surv(rfs, 1-rfs.s) ~ 1, data = ALL1, width = 183, FUN = \"KL\")\ndynpe0.KL.ALL &lt;- pewcox(Surv(rfs, rfs.s) ~ 1,\n  Surv(rfs, 1-rfs.s) ~ 1, data = ALL1, width = 183, FUN = \"KL\")\ndynpe1.Brier.ALL &lt;- pewcox(Surv(rfs, rfs.s) ~ agecl + proph + match,\n  Surv(rfs, 1-rfs.s) ~ 1, data = ALL1, width = 183, FUN = \"Brier\")\n\n### Breier\ndynpe0.Brier.ALL &lt;- pewcox(Surv(rfs, rfs.s) ~ 1,\n  Surv(rfs, 1-rfs.s) ~ 1, data = ALL1, width = 183, FUN = \"Brier\")\nCVdynpe1.KL.ALL &lt;- pewcox(Surv(rfs, rfs.s) ~ agecl + proph + match,\n  Surv(rfs, 1-rfs.s) ~ 1, data = ALL1, width = 183, FUN = \"KL\", CV = TRUE)\nCVdynpe1.Brier.ALL &lt;- pewcox(Surv(rfs, rfs.s) ~ agecl + proph + match,\n  Surv(rfs, 1-rfs.s) ~ 1, data = ALL1, width = 183, FUN = \"Brier\", CV = TRUE)\n\n# Fix the NA's\nrequire(mstate)\ndynpe0.KL.ALL$Err &lt;- mstate:::NAfix(dynpe0.KL.ALL$Err,subst=0)\ndynpe1.KL.ALL$Err &lt;- mstate:::NAfix(dynpe1.KL.ALL$Err,subst=0)\ndynpe0.Brier.ALL$Err &lt;- mstate:::NAfix(dynpe0.Brier.ALL$Err,subst=0)\ndynpe1.Brier.ALL$Err &lt;- mstate:::NAfix(dynpe1.Brier.ALL$Err,subst=0)\nCVdynpe1.KL.ALL$Err[is.infinite(CVdynpe1.KL.ALL$Err)] &lt;- NA\nCVdynpe1.KL.ALL$Err &lt;- mstate:::NAfix(CVdynpe1.KL.ALL$Err,subst=0)\nCVdynpe1.Brier.ALL$Err[is.infinite(CVdynpe1.Brier.ALL$Err)] &lt;- NA\nCVdynpe1.Brier.ALL$Err &lt;- mstate:::NAfix(CVdynpe1.Brier.ALL$Err,subst=0)\n\nplot(dynpe0.KL.ALL$time/365.25,dynpe0.KL.ALL$Err,type=\"s\",xlim=c(0,2.5),ylim=c(0,max(dynpe0.KL.ALL$Err,na.rm=TRUE)),lwd=2,lty=2,\n    xlab=\"Time in years\",ylab=\"Prediction error\")\nlines(dynpe1.KL.ALL$time/365.25,dynpe1.KL.ALL$Err,type=\"s\",lwd=2)\nlines(CVdynpe1.KL.ALL$time/365.25,CVdynpe1.KL.ALL$Err,type=\"s\",col=8)\nlines(dynpe0.Brier.ALL$time/365.25,dynpe0.Brier.ALL$Err,type=\"s\",lwd=2,lty=2)\nlines(dynpe1.Brier.ALL$time/365.25,dynpe1.Brier.ALL$Err,type=\"s\",lwd=2)\nlines(CVdynpe1.Brier.ALL$time/365.25,CVdynpe1.Brier.ALL$Err,type=\"s\",col=8)\ntext(1,0.31,\"Kullback-Leibler\",cex=0.8)\ntext(1,0.09,\"Breier\",cex=0.8)\nlegend(\"topright\",c(\"Null model\",\"Covariate model\",\"Covariate model (CV)\"),lwd=2,col=c(1,1,8),lty=c(2,1,1),bty=\"n\")\n\n\n### Evaluated on second cohort\nALL2 &lt;- ALL[ALL$cohort==2,]\nn2 &lt;- nrow(ALL2)\n\nX &lt;- model.matrix(Surv(rfs, rfs.s) ~  agecl + proph + match, data = ALL)[,-1]\n\n# Recall H0 from the code below Table 4.1\nn0 &lt;- nrow(H0)\n\n###############################################################################\n### Figure 4.5 Linear interpolation of the cumulative hazard illustrated\n### graphically for the first six event times\n###############################################################################\n\nplot(c(0,H0$time*365.25),c(0,H0$hazard),type=\"s\",lwd=2,lty=4,xlim=c(0,16),ylim=c(0,0.01),xlab=\"Days from transplant\",ylab=\"Cumulative hazard\")\nH0$smoothed &lt;- apply(data.frame(c(0,H0$hazard[-n0]),H0$hazard),1,mean)\nlines(c(0,H0$time*365.25),c(0,H0$smoothed),lwd=2,type=\"b\")\nlegend(\"topleft\",c(\"Breslow estimate\",\"Interpolation\"),lwd=2,lty=c(4,1),pch=c(NA,1),bty=\"n\")\n\ninterstep &lt;- function (time, stepf, newtime, to.data.frame = FALSE) \n{\n### NOTE: only works for cumulative hazards; time starts at 0, argument time should not contain 0, only positive finite values\n    n &lt;- length(time)\n    if (length(stepf) != n) \n        stop(\"arguments 'time' and 'stepf' should have the same length\")\n    if (any(!(order(time) == 1:n))) \n        stop(\"argument 'time' should be ordered\")\n    if (any(duplicated(time))) \n        stop(\"argument 'time' should not contain duplicates\")\n    if (any(is.infinite(time))) \n        stop(\"(-) infinity not allowed in 'time'\")\n    if (any(time&lt;=0)) \n        stop(\"0 or negative values not allowed in 'time'\")\n    ### Keep last value and replace values of stepfunction by values halfway the step\n    lastval &lt;- stepf[n]\n    stepf &lt;- apply(data.frame(c(0,stepf[-n]),stepf),1,mean)\n\n    time &lt;- c(0, time, Inf)\n    idx &lt;- cut(newtime, time, right = FALSE)\n    idx &lt;- as.numeric(idx)\n    res1 &lt;- c(0, stepf)[idx]\n    res2 &lt;- c(0, stepf, Inf)[idx+1]\n    time1 &lt;- time[idx]\n    time2 &lt;- time[idx+1]\n    rho &lt;- 1-(newtime-time1)/(time2-time1)\n    res &lt;- rho*res1 + (1-rho)*res2\n    dfr &lt;- data.frame(newtime=newtime,idx=idx,res1=res1,res2=res2,time1=time1,time2=time2,rho=rho,res=res)\n\n    ### Values of newtime that are beyond (or exactly at) the last point of 'time'\n    ### should be replaced by the last value of the original stepfunction (saved in lastval)\n    wh &lt;- which(idx==n+1)\n    res[wh] &lt;- lastval\n    if (to.data.frame) \n        return(data.frame(newtime = newtime, res = res))\n    else return(res)\n}\n\nALL$H0 &lt;- interstep(H0$time,H0$hazard,ALL$rfs/365.25)\nALL$logH0 &lt;- log(ALL$H0)\nALL$H &lt;- ALL$H0*exp(ALL$PI)\nALL$logH &lt;- ALL$logH0 + ALL$PI\n\n# Recall\nALL1 &lt;- ALL[ALL$cohort==1,]\nALL2 &lt;- ALL[ALL$cohort==2,]\n\n## Poisson regression\n\n# Check on ALL1 data (these should be giving 0's and 1's approximately)\nfit1 &lt;- glm(rfs.s ~ offset(logH), family=\"poisson\", data=ALL1)\nfit2 &lt;- glm(rfs.s ~ PI + offset(logH0), family=\"poisson\", data=ALL1)\nfit3 &lt;- glm(rfs.s ~ PI + offset(logH), family=\"poisson\", data=ALL1)\nsummary(fit1)\nsummary(fit2)\nsummary(fit3)\n\n# Now for real on ALL2 data\nfit1 &lt;- glm(rfs.s ~ offset(logH), family=\"poisson\", data=ALL2)\nfit2 &lt;- glm(rfs.s ~ PI + offset(logH0), family=\"poisson\", data=ALL2)\nfit3 &lt;- glm(rfs.s ~ PI + offset(logH), family=\"poisson\", data=ALL2)\nsummary(fit1)\nsummary(fit2)\nsummary(fit3)\n\n###############################################################################\n### Table 4.2: Calibration and revision of the prognostic index (left column)\n###############################################################################\n\n### Weibull regression with H_0^*(t_i) as outcome\nsr &lt;- survreg(Surv(H0, rfs.s) ~ PI, ALL2, dist='weibull')\nsummary(sr)\n## theta0 and theta1\n-sr$coef/sr$scale # gives (theta_0,theta_1)\n## standard errors using delta method\nsr$var # covariance matrix of (beta0,beta1,log(scale))\nder &lt;- matrix(c(1,0,0,1,-sr$coef),2,3) # derivative\nvarr &lt;- der %*% sr$var %*% t(der)\nsqrt(diag(varr))\n\n##############################################################################\n### Figure 4.6: Calibrated relapse-free survival curves for three selected\n### patients\n###############################################################################\n\nth0 &lt;- -sr$coef[1]/sr$scale\nth1 &lt;- -sr$coef[2]/sr$scale\nth2 &lt;- 1/sr$scale\npat &lt;- H0[,c(2,1)]\npat$H0 &lt;- pat$hazard\npat$logH0 &lt;- log(pat$H0)\n\npar(mfrow=c(1,3))\n# Baseline\nPI &lt;- 0\npat$logHcal &lt;- th0 + th1*PI + th2*pat$logH0\npat$Hcal &lt;- exp(pat$logHcal)\n\nplot(pat$time,exp(-pat$H0*exp(PI)),type=\"s\",lwd=2,ylim=c(0,1),xlab=\"Years since transplantation\",ylab=\"Relapse-free survival\")\nlines(pat$time,exp(-pat$Hcal),type=\"s\",lwd=2,lty=2)\ntitle(main=\"Baseline\")\n\n# Average\nPI &lt;- mean(ALL$PI)\npat$logHcal &lt;- th0 + th1*PI + th2*pat$logH0\npat$Hcal &lt;- exp(pat$logHcal)\n\nplot(pat$time,exp(-pat$H0*exp(PI)),type=\"s\",lwd=2,ylim=c(0,1),xlab=\"Years since transplantation\",ylab=\"Relapse-free survival\")\nlines(pat$time,exp(-pat$Hcal),type=\"s\",lwd=2,lty=2)\ntitle(main=\"Average PI\")\n\n# Largest\nPI &lt;- max(ALL$PI)\npat$logHcal &lt;- th0 + th1*PI + th2*pat$logH0\npat$Hcal &lt;- exp(pat$logHcal)\n\nplot(pat$time,exp(-pat$H0*exp(PI)),type=\"s\",lwd=2,ylim=c(0,1),xlab=\"Years since transplantation\",ylab=\"Relapse-free survival\")\nlines(pat$time,exp(-pat$Hcal),type=\"s\",lwd=2,lty=2)\ntitle(main=\"Largest PI\")\n\n###############################################################################\n###############################################################################\n### Model revision\n###############################################################################\n###############################################################################\n\n###############################################################################\n### Table 4.2: Calibration and revision of the prognostic index (right column)\n###############################################################################\n\n# Weibull regression with H_0^*(t_i) as outcome, PI + single covariates\nsummary(survreg(Surv(H0, rfs.s) ~ PI + match, ALL2, dist='weibull'))\nsummary(survreg(Surv(H0, rfs.s) ~ PI + proph, ALL2, dist='weibull'))\nsummary(survreg(Surv(H0, rfs.s) ~ PI + agecl, ALL2, dist='weibull'))"
  },
  {
    "objectID": "chapters/chapter_05.html",
    "href": "chapters/chapter_05.html",
    "title": "5  Mechanisms explaining violation of the Cox model",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 5 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\n###############################################################################\n### Figure 5.1: Hazard ratio for simple model for gamma and mixture\n### frailty distribution\n###############################################################################\n\nHR &lt;- 2\nh0 &lt;- function(t) 1\nH0 &lt;- function(t) t\nh1 &lt;- function(t) HR*h0(t)\nH1 &lt;- function(t) HR*H0(t)\n\n# Gamma frailty (abbreviation g)\nth &lt;- 4\nh0g &lt;- function(t) (th*h0(t))/(th + H0(t))\nh1g &lt;- function(t) (th*h1(t))/(th + H1(t))\n# Two-point mixture frailty (abbreviation m)\np &lt;- 0.5; xi0 &lt;- 0.5; xi1 &lt;- 1.5\nEZ0 &lt;- function(t) ((1-p)*xi0+p*xi1*exp(-(xi1-xi0)*H0(t)))/((1-p)+p*exp(-(xi1-xi0)*H0(t)))\nEZ1 &lt;- function(t) ((1-p)*xi0+p*xi1*exp(-(xi1-xi0)*H1(t)))/((1-p)+p*exp(-(xi1-xi0)*H1(t)))\nh0m &lt;- function(t) EZ0(t)*h0(t)\nh1m &lt;- function(t) EZ1(t)*h1(t)\n\ntseq &lt;- seq(0,5,by=0.05)\nHRgseq &lt;- h1g(tseq)/h0g(tseq)\nHRmseq &lt;- h1m(tseq)/h0m(tseq)\n\nplot(tseq,HRgseq,type=\"l\",lwd=2,xlab=\"Time t\",ylab=\"Hazard ratio\")\nlines(tseq,HRmseq,type=\"l\",lwd=2,col=8)\nlegend(\"bottomleft\",c(\"Gamma\",\"Two point mixture\"),lwd=2,col=c(1,8),bty=\"n\")\n\n\n\n\n\nCode\n###############################################################################\n### Figure 5.2: Marginal survival in the two groups under the two models\n###############################################################################\n\nnseq &lt;- length(tseq)\nS0g &lt;- S1g &lt;- S0m &lt;- S1m &lt;- rep(NA,nseq)\nfor (j in 1:nseq) {\n    S0g[j] &lt;- integrate(h0g, 0, tseq[j])$value\n    S1g[j] &lt;- integrate(h1g, 0, tseq[j])$value\n    S0m[j] &lt;- integrate(h0m, 0, tseq[j])$value\n    S1m[j] &lt;- integrate(h1m, 0, tseq[j])$value\n}\n\nplot(tseq,exp(-S0g),type=\"l\",lwd=2,ylim=c(0,1),xlab=\"Time t\",ylab=\"Survival\")\nlines(tseq,exp(-S1g),type=\"l\",lwd=2,lty=2)\nlines(tseq,exp(-S0m),type=\"l\",lwd=2,col=8)\nlines(tseq,exp(-S1m),type=\"l\",lwd=2,lty=2,col=8)\nlegend(\"topright\",c(\"Gamma (x=0)\",\"Gamma (x=1)\",\"Mixture (x=0)\",\"Mixture (x=1)\"),lwd=2,col=c(1,1,8,8),lty=c(1,2,1,2),bty=\"n\")\n\n\n\n\n\nCode\n###############################################################################\n### Figure 5.3: Hazard ratio for ?imitation? of Data Set 5\n###############################################################################\n\nHR1 &lt;- exp(1)\nHR2 &lt;- exp(-0.5)\nh10 &lt;- function(t) 0.2*exp(-t)\nh20 &lt;- function(t) 0.1\nh0 &lt;- function(t) h10(t) + h20(t)\nh11 &lt;- function(t) h10(t)*HR1\nh21 &lt;- function(t) h20(t)*HR2\nh1 &lt;- function(t) h11(t) + h21(t)\nHR &lt;- function(t) h1(t)/h0(t)\ntseq &lt;- seq(0,10,by=0.05)\nHRseq &lt;- HR(tseq)\n\nplot(tseq,HRseq,type=\"l\",lwd=2,ylim=c(0.4,2.2),xlab=\"Time\",ylab=\"Hazard ratio\")\nabline(h=1,lty=3)\n\n\n\n\n\nCode\n###############################################################################\n### Figure 5.4: Hazard ratio for the marginal cause-specific hazard of cause 1,\n### for the shared gamma frailty model with variance 0.5\n###############################################################################\n\nHR1 &lt;- 1\nHR2 &lt;- 2\nth &lt;- 0.5\nh10 &lt;- function(t) 1\nh20 &lt;- function(t) 1\nH10 &lt;- function(t) t\nH20 &lt;- function(t) t\n\nh10g &lt;- function(t) h10(t)/(1 + th*(H10(t)+H20(t)))\nh11g &lt;- function(t) (h10(t)*HR1)/(1 + th*(HR1*H10(t)+HR2*H20(t)))\ntseq &lt;- seq(0,5,by=0.05)\nHRgseq &lt;- h11g(tseq)/h10g(tseq)\n\nplot(tseq,HRgseq,type=\"l\",lwd=2,ylim=c(0.6,1),xlab=\"Time t\",ylab=\"Hazard ratio\")\nlines(tseq,HRmseq,type=\"l\",lwd=2,col=8)"
  },
  {
    "objectID": "chapters/chapter_06.html",
    "href": "chapters/chapter_06.html",
    "title": "6  Non-proportional hazards models",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 6 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\n###############################################################################\n###############################################################################\n### Cox model with time-varying coefficients\n###############################################################################\n###############################################################################\n\n# Ed: because of timefix\n#coxph &lt;- function(...) survival::coxph(..., control = coxph.control(timefix = FALSE))\n\nrequire(dynpred)\ndata(ova, package=\"dynpred\") # to aviod confusion with ova in package coxvc\nova$id &lt;- 1:nrow(ova)\n\ntt &lt;- ova$tyears[ova$d==1]\ntt &lt;- sort(unique(tt))\n\n# Cox model with time-fixed coefficients (see also Chapter 3)\ncfixed &lt;- coxph(Surv(tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn,\n  data = ova)\ncfixed\n\n# Prepare data for Cox regression analysis with time-varying coefficients\nova2 &lt;- survSplit(data=ova, cut=tt, end=\"tyears\", start=\"Tstart\", event=\"d\")\n\n# The same Cox model is obtained in the longer data set ova2\ncfixed &lt;- coxph(Surv(Tstart, tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn,\n  data = ova2)\ncfixed\nova2$lnt &lt;- log(ova2$tyears+1)\nctime &lt;- coxph(Surv(Tstart, tyears, d) ~\n    FIGO + Diam + Broders + Ascites + Karn +\n    FIGO:lnt + Diam:lnt + Broders:lnt + Ascites:lnt + Karn:lnt, data = ova2)\nctime\nanova(cfixed,ctime)\nloglik.fixed &lt;- cfixed$loglik[2]\nloglik.timefull &lt;- ctime$loglik[2]\n\n###############################################################################\n### Figure 6.2: The time-varying prognostic indices Z(t) for each of the\n### patients in the ovarian cancer data\n###############################################################################\n\n# First center\nmm &lt;- model.matrix(Surv(tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn,\n  data = ova)[,-1]\nmm &lt;- mm - matrix(apply(mm,2,mean),nrow(mm),ncol(mm),byrow=TRUE)\ntseq &lt;- seq(0,6,by=0.05)\nnseq &lt;- length(tseq)\nov &lt;- cbind(ova[,-(3:7)],mm)\nov &lt;- as.data.frame(ov)\nov2 &lt;- survSplit(data=ov, cut=tt, end=\"tyears\", start=\"Tstart\", event=\"d\")\nov2$lnt &lt;- log(ov2$tyears+1)\n\n# This gives the same model as ctime above\nctime &lt;- coxph(Surv(Tstart, tyears, d) ~\n    FIGOIV + Diam.1cm + Diam1.2cm + Diam2.5cm + Diam.5cm +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn +\n    FIGOIV:lnt + Diam.1cm:lnt + Diam1.2cm:lnt + Diam2.5cm:lnt + Diam.5cm:lnt +\n    Broders2:lnt + Broders3:lnt + Broders4:lnt + Brodersunknown:lnt +\n    Ascitespresent:lnt + Ascitesunknown:lnt + Karn:lnt, data = ov2)\nctime\n\nzfixed &lt;- as.numeric(matrix(cfixed$coef,1,12) %*% t(mm))\nz1 &lt;- as.numeric(matrix(ctime$coef[1:12],1,12) %*% t(mm))\nz2 &lt;- as.numeric(matrix(ctime$coef[13:24],1,12) %*% t(mm))\ncor(zfixed,z1)\nz &lt;- outer(z2,log(tseq+1),\"*\")\nz &lt;- z + matrix(z1,nrow(z),ncol(z))\napply(z,2,sd)\napply(z,2,cor,y=z1)\n\noldpar &lt;- par(no.readonly=TRUE) # save graphical parameters\nlayout(matrix(c(1,2),1,2,byrow=TRUE), widths=c(3,1))\npar(mar=c(5,5,1,1))\nplot(tseq,z[1,],type=\"l\",ylim=c(-3,3),xlab=\"Time in years\",ylab=\"Prognostic index\",col=8,lwd=0.5)\nfor (i in 2:nrow(z)) lines(tseq,z[i,],type=\"l\",lwd=0.5,col=8)\nabline(h=0,lty=3)\npar(mar=c(5,0,1,1))\nyhist &lt;- hist(zfixed, breaks=seq(-3,3,0.25), plot=FALSE)\ntop &lt;- max(yhist$counts)\nbarplot(yhist$counts, axes=FALSE, xlim=c(0, top), space=0, horiz=TRUE)\npar(oldpar) # reset graphical parameters\n\n# Step-wise procedure\n# Step 1\nctime1 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Karn:lnt, data = ova2)\nanova(cfixed,ctime1)\nctime1 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Broders:lnt, data = ova2)\nanova(cfixed,ctime1)\nctime1 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    FIGO:lnt, data = ova2)\nanova(cfixed,ctime1)\nctime1 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Ascites:lnt, data = ova2)\nanova(cfixed,ctime1)\nctime1 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Diam:lnt, data = ova2)\nanova(cfixed,ctime1)\n# Karn selected\nctime1 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Karn:lnt, data = ova2)\nloglik.time1 &lt;- ctime1$loglik[2]\n\n# Step 2\nctime2 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Karn:lnt + Broders:lnt, data = ova2)\nanova(ctime1,ctime2)\nctime2 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Karn:lnt + FIGO:lnt, data = ova2)\nanova(ctime1,ctime2)\nctime2 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Karn:lnt + Ascites:lnt, data = ova2)\nanova(ctime1,ctime2)\nctime2 &lt;- coxph(Surv(Tstart, tyears, d) ~\n    Karn + Broders + FIGO + Ascites + Diam +\n    Karn:lnt + Diam:lnt, data = ova2)\nanova(ctime1,ctime2)\n\ntseq &lt;- seq(0,6,by=0.05)\nbseq &lt;- matrix(NA,length(tseq),12)\nfor (j in 1:12) {\n    bseq[,j] &lt;- ctime$coef[j] + log(tseq+1)*ctime$coef[j+12]\n}\n\n###############################################################################\n### Figure 6.1: The time-varying coefficients of the model of Table 6.1\n###############################################################################\n\nnms &lt;- c(\"FIGO IV\",\"Diameter &lt;1 cm\",\"Diameter 1-2 cm\",\"Diameter 2-5 cm\",\n  \"Diameter &gt;5 cm\",\"Broders 2\",\"Broders 3\",\"Broders 4\",\"Broders unknown\",\n  \"Ascites present\",\"Ascites unknown\",\"Karnofsky\")\nvdist &lt;- hdist &lt;- 0.2\nltys &lt;- c(1,1,2,3,4,1,2,3,4,1,2,2)\nylim &lt;- range(bseq)\nylim[2] &lt;- ylim[2]+0.2\nlayout(matrix(1:4, 2, 2, byrow=TRUE),widths=c(10,10),heights=c(10,10))\n# topleft; KARN and FIGO (1 and 6)\nwh &lt;- c(1,12)\npar(mar= c(vdist, 4, 3, hdist))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"\",ylab=\"Regression coefficient\",\n  axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lwd=1,lty=5)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(2); axis(3); box()\n# topright; Broders (6-9)\nwh &lt;- 6:9\npar(mar= c(vdist, hdist, 3, 4))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"\",ylab=\"\",axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lwd=1,lty=5)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(3); axis(4); box()\n# bottomleft; Diameter (2-5)\nwh &lt;- 2:5\npar(mar= c(5, 4, vdist, hdist))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"Time (years)\",\n  ylab=\"Regression coefficient\",axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lwd=1,lty=5)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(1); axis(2); box()\n# bottomright; Ascites (10-11)\nwh &lt;- 10:11\npar(mar= c(5, hdist, vdist, 4))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"Time (years)\",ylab=\"\",axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lwd=1,lty=5)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(1); axis(4); box()\nlayout(matrix(1, 1, 1))\npar(oldpar) # reset graphical parameters\n\n###############################################################################\n###############################################################################\n### Dynamic prediction with time-varying effects\n###############################################################################\n###############################################################################\n\n###############################################################################\n### Figure 6.3: Model-based failure functions (left) and dynamic fixed width\n### failure functions with w = 2 (right) for two patients with Karnofsky\n### scores 7 and 10, other covariates at mean values\n###############################################################################\n\n# Recall cfixed and ctime\ncfixed &lt;- coxph(Surv(Tstart, tyears, d) ~\n    FIGOIV + Diam.1cm + Diam1.2cm + Diam2.5cm + Diam.5cm +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn, data = ov2)\ncfixed\nctime &lt;- coxph(Surv(Tstart, tyears, d) ~\n    FIGOIV + Diam.1cm + Diam1.2cm + Diam2.5cm + Diam.5cm +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn +\n    FIGOIV:lnt + Diam.1cm:lnt + Diam1.2cm:lnt + Diam2.5cm:lnt + Diam.5cm:lnt +\n    Broders2:lnt + Broders3:lnt + Broders4:lnt + Brodersunknown:lnt +\n    Ascitespresent:lnt + Ascitesunknown:lnt + Karn:lnt, data = ov2)\nctime\n\n# Again use ov2, centered version of ova2\n# Baseline\nndata &lt;- data.frame(Karn = c(7,10)-mean(ova$Karn),\n  Broders2 = 0, Broders3 = 0, Broders4 = 0, Brodersunknown = 0,\n  FIGOIV = 0, Ascitespresent = 0, Ascitesunknown = 0,\n  Diam.1cm = 0, Diam1.2cm = 0, Diam2.5cm = 0, Diam.5cm = 0)\nsf &lt;- survfit(cfixed, newdata=ndata, censor=FALSE)\nsurva &lt;- sf$surv[,1]\nsurvb &lt;- sf$surv[,2]\n# Same ctime, now baseline (Karn=7 and =10 to be done later)\nndata &lt;- data.frame(Karn = 0,\n  Broders2 = 0, Broders3 = 0, Broders4 = 0, Brodersunknown = 0,\n  FIGOIV = 0, Ascitespresent = 0, Ascitesunknown = 0,\n  Diam.1cm = 0, Diam1.2cm = 0, Diam2.5cm = 0, Diam.5cm = 0, lnt = 0)\nsf0 &lt;- survfit(ctime, newdata=ndata, censor=FALSE)\ntt &lt;- sf0$time; nt &lt;- length(tt)\n# H is now baseline centered at mean of covariates\nH0 &lt;- data.frame(time=sf0$time, H0=-log(sf0$surv))\nH0$h0 &lt;- diff(c(0,H0$H0))\nf2 &lt;- function(t) log(t+1)\nmma &lt;- mmb &lt;- rep(0,12)\nmma[12] &lt;- 7 - mean(ova$Karn)\nz1 &lt;- as.numeric(mma %*% ctime$coef[1:12])\nz2 &lt;- as.numeric(mma %*% ctime$coef[13:24])\nsurvtda &lt;- exp(-cumsum(exp(z1 + z2*f2(tt)) * H0$h0))\nmmb[12] &lt;- 10 - mean(ova$Karn)\nz1 &lt;- as.numeric(mmb %*% ctime$coef[1:12])\nz2 &lt;- as.numeric(mmb %*% ctime$coef[13:24])\nsurvtdb &lt;- exp(-cumsum(exp(z1 + z2*f2(tt)) * H0$h0))\n\nplot(c(0,tt),1-c(1,survtda),type=\"s\",lwd=2,ylim=c(0,1),xlab=\"Time in years\",ylab=\"Death probability\")\nlines(c(0,tt),1-c(1,survtdb),type=\"s\",lwd=2,lty=2)\nlines(c(0,tt),1-c(1,surva),type=\"s\",lwd=2,col=8)\nlines(c(0,tt),1-c(1,survb),type=\"s\",lwd=2,col=8,lty=2)\nlegend(\"topleft\",\n  c(\"Karn=7, time-fixed\",\"Karn=10, time-fixed\",\"Karn=7, time-varying\",\"Karn=10, time-varying\"),\n  lwd=2,col=c(8,8,1,1),lty=c(1,2,1,2),bty=\"n\")\n\nFwa &lt;- Fwindow(data.frame(time=tt,surv=surva),w=2,variance=FALSE)\nFwb &lt;- Fwindow(data.frame(time=tt,surv=survb),w=2,variance=FALSE)\nFwtda &lt;- Fwindow(data.frame(time=tt,surv=survtda),w=2,variance=FALSE)\nFwtdb &lt;- Fwindow(data.frame(time=tt,surv=survtdb),w=2,variance=FALSE)\nFwa &lt;- Fwa[Fwa$time&lt;=5,]\nFwb &lt;- Fwb[Fwb$time&lt;=5,]\nFwtda &lt;- Fwtda[Fwtda$time&lt;=5,]\nFwtdb &lt;- Fwtdb[Fwtdb$time&lt;=5,]\nplot(Fwtda$time,Fwtda$Fw,type=\"s\",lwd=2,xlim=c(0,5),ylim=c(0,1),xlab=\"Time in years\",ylab=\"Death within window probability\")\nlines(Fwtdb$time,Fwtdb$Fw,type=\"s\",lwd=2,lty=2)\nlines(Fwa$time,Fwa$Fw,type=\"s\",lwd=2,col=8)\nlines(Fwb$time,Fwb$Fw,type=\"s\",lwd=2,col=8,lty=2)\nlegend(\"topright\",\n  c(\"Karn=7, time-fixed\",\"Karn=10, time-fixed\",\"Karn=7, time-varying\",\"Karn=10, time-varying\"),\n  lwd=2,col=c(8,8,1,1),lty=c(1,2,1,2),bty=\"n\")\n\n###############################################################################\n### Figure 6.4: Dynamic prediction error curves, with and without cross-validation,\n### of the time-fixed and the time-varying models\n###############################################################################\n\n### Three basic models compared: null model, time-fixed model (Ch 3), and full\n### time-varying model. Because of time-varying aspects, standard calls of pecox\n### and pewcox are not possible (a direct call to pewcox with CV=TRUE will\n### cross-validate based on rows of the data, not on individuals). So instead we\n### construct (cross-validated) survival matrices ourselves and call pew\n\n# Recall cfixed and ctime\nw &lt;- 2\nmm &lt;- model.matrix(Surv(tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn, data = ova)[,-1]\nov &lt;- cbind(ova[,-(3:7)],mm)\nov &lt;- as.data.frame(ov)\nn &lt;- nrow(ov)\nov$id &lt;- 1:n\nov2 &lt;- survSplit(data=ov, cut=tt, end=\"tyears\", start=\"Tstart\", event=\"d\")\nov2$lnt &lt;- log(ov2$tyears+1)\n\nctime\nctime &lt;- coxph(Surv(Tstart, tyears, d) ~\n    FIGOIV + Diam.1cm + Diam1.2cm + Diam2.5cm + Diam.5cm +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn +\n    FIGOIV:lnt + Diam.1cm:lnt + Diam1.2cm:lnt + Diam2.5cm:lnt + Diam.5cm:lnt +\n    Broders2:lnt + Broders3:lnt + Broders4:lnt + Brodersunknown:lnt +\n    Ascitespresent:lnt + Ascitesunknown:lnt + Karn:lnt, data = ov2)\nctime\n# Same ctime, now baseline\nndata &lt;- data.frame(Karn=0,Broders2=0,Broders3=0,Broders4=0,Brodersunknown=0,\n  FIGOIV=0,Ascitespresent=0,Ascitesunknown=0,Diam.1cm=0,Diam1.2cm=0,\n  Diam2.5cm=0,Diam.5cm=0,lnt=0)\nsf0 &lt;- survfit(ctime,newdata=ndata,censor=FALSE)\ntt &lt;- sf0$time; nt &lt;- length(tt)\nH0 &lt;- data.frame(time=sf0$time,H0=-log(sf0$surv))\nH0$h0 &lt;- diff(c(0,H0$H0))\nf2 &lt;- function(t) log(t+1)\nsurv &lt;- matrix(NA,nt,n)\nfor (i in 1:nrow(ova)) {\n  z1 &lt;- as.numeric(mm[i,] %*% ctime$coef[1:12])\n  z2 &lt;- as.numeric(mm[i,] %*% ctime$coef[13:24])\n  surv[,i] &lt;- exp(-cumsum(exp(z1 + z2*f2(tt)) * H0$h0))\n}\n## Cross-validated version\nCVsurv &lt;- matrix(NA,nt,n)\n# This is to monitor progress\nm &lt;- floor(log10(nrow(ova))) + 1\npre &lt;- rep(\"\\b\", 2 * m + 1)\nfor (i in 1:nrow(ova)) {\n  cat(pre, i, \"/\", nrow(ova), sep = \"\"); flush.console()\n  ov2mini &lt;- ov2[ov2$id != i,]\n  ctmini &lt;- coxph(Surv(Tstart, tyears, d) ~\n    FIGOIV + Diam.1cm + Diam1.2cm + Diam2.5cm + Diam.5cm +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn +\n    FIGOIV:lnt + Diam.1cm:lnt + Diam1.2cm:lnt + Diam2.5cm:lnt + Diam.5cm:lnt +\n    Broders2:lnt + Broders3:lnt + Broders4:lnt + Brodersunknown:lnt +\n    Ascitespresent:lnt + Ascitesunknown:lnt + Karn:lnt,\n    data = ov2mini)\n  sf0mini &lt;- survfit(ctmini,newdata=ndata,censor=FALSE)\n  H0mini &lt;- data.frame(time=tt,\n      H0=-log(evalstep(sf0mini$time,sf0mini$surv,tt,subst=w)))\n  H0mini$h0 &lt;- diff(c(0,H0mini$H0))\n  z1mini &lt;- as.numeric(mm[i,] %*% ctmini$coef[1:12])\n  z2mini &lt;- as.numeric(mm[i,] %*% ctmini$coef[13:24])\n  CVsurv[,i] &lt;- exp(-cumsum(exp(z1mini + z2mini*f2(tt)) * H0mini$h0))\n}\n\nn &lt;- nrow(ova)\ntt &lt;- sort(unique(ova$tyears[ova$d==1]))\nttw &lt;- c(0,tt,tt-w)\nttw &lt;- ttw[ttw&gt;=0]\nttw &lt;- sort(unique(ttw))\nntw &lt;- length(ttw)\n\n# Similar matrix containing censoring probabilities\ncoxcens &lt;- coxph(Surv(tyears, 1-d) ~ 1, data=ova)\nycens &lt;- coxcens[[\"y\"]]\np &lt;- ncol(ycens)\ntcens &lt;- ycens[,p-1]\ndcens &lt;- ycens[,p]\nxcens &lt;- coxcens$linear.predictors\ncoxcens &lt;- coxph(Surv(tcens, dcens) ~ xcens)\nsfcens &lt;- survfit(coxcens,newdata=data.frame(xcens=xcens),censor=FALSE)\nsurvcens &lt;- sfcens$surv\ntcens &lt;- sfcens$time\n\ndynpe1td.KL.ova &lt;- pew(time = ova$tyears, status = ova$d, tsurv = tt,\n  survmat = surv, tcens = tcens, censmat = survcens, width = w, FUN = \"KL\",\n  tout = ttw)\ndynpe1tdCV.KL.ova &lt;- pew(time = ova$tyears, status = ova$d, tsurv = tt,\n  survmat = CVsurv, tcens = tcens, censmat = survcens, width = w, FUN = \"KL\",\n  tout = ttw)\ndynpe1td.Brier.ova &lt;- pew(time = ova$tyears, status = ova$d, tsurv = tt,\n  survmat = surv, tcens = tcens, censmat = survcens, width = w, FUN = \"Brier\",\n  tout = ttw)\ndynpe1tdCV.Brier.ova &lt;- pew(time = ova$tyears, status = ova$d, tsurv = tt,\n  survmat = CVsurv, tcens = tcens, censmat = survcens, width = w, FUN = \"Brier\",\n  tout = ttw)\n\ndynpe1td.KL.ova$Err[is.infinite(dynpe1td.KL.ova$Err)] &lt;- NA\ndynpe1tdCV.KL.ova$Err[is.infinite(dynpe1tdCV.KL.ova$Err)] &lt;- NA\ndynpe1td.Brier.ova$Err[is.infinite(dynpe1td.Brier.ova$Err)] &lt;- NA\ndynpe1tdCV.Brier.ova$Err[is.infinite(dynpe1tdCV.Brier.ova$Err)] &lt;- NA\n# Need to fix the NA's, use NAfix() from mstate\nrequire(mstate)\ndynpe1td.KL.ova$Err &lt;- mstate:::NAfix(dynpe1td.KL.ova$Err)\ndynpe1tdCV.KL.ova$Err &lt;- mstate:::NAfix(dynpe1tdCV.KL.ova$Err)\ndynpe1td.Brier.ova$Err &lt;- mstate:::NAfix(dynpe1td.Brier.ova$Err)\ndynpe1tdCV.Brier.ova$Err &lt;- mstate:::NAfix(dynpe1tdCV.Brier.ova$Err)\n\n# These were also calculated in Chapter 3\ndynpe1.KL &lt;- pewcox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"KL\")\ndynpe0.KL &lt;- pewcox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"KL\")\ndynpe1.Brier &lt;- pewcox(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"Brier\")\ndynpe0.Brier &lt;- pewcox(Surv(tyears, d) ~ 1,\n  Surv(tyears, 1-d) ~ 1, data = ova, width = 2, FUN = \"Brier\")\n\ndynpe.Brier &lt;- data.frame(time=dynpe1.Brier$time, Err0=dynpe0.Brier$Err, Err1=dynpe1.Brier$Err)\ndynpe.Brier$ErrRed &lt;- (dynpe.Brier$Err0-dynpe.Brier$Err1)/dynpe.Brier$Err0\ndynpe.KL &lt;- data.frame(time=dynpe1.KL$time, Err0=dynpe0.KL$Err, Err1=dynpe1.KL$Err)\ndynpe.KL$ErrRed &lt;- (dynpe.KL$Err0-dynpe.KL$Err1)/dynpe.KL$Err0\n\n# Show until 5 years\ndynpe1td.KL.ova &lt;- subset(dynpe1td.KL.ova,time&lt;=5)\ndynpe1tdCV.KL.ova &lt;- subset(dynpe1tdCV.KL.ova,time&lt;=5)\ndynpe.KL &lt;- subset(dynpe.KL,time&lt;=5)\ndynpe1td.Brier.ova &lt;- subset(dynpe1td.Brier.ova,time&lt;=5)\ndynpe1tdCV.Brier.ova &lt;- subset(dynpe1tdCV.Brier.ova,time&lt;=5)\ndynpe.Brier &lt;- subset(dynpe.Brier,time&lt;=5)\n\n# Finally, the actual plot\nplot(dynpe1td.KL.ova$time,dynpe1td.KL.ova$Err,type=\"s\",xlim=c(0,5),ylim=c(0,0.9),lwd=2,\n    xlab=\"Time in years\",ylab=\"Prediction error\",axes=FALSE)\nlines(dynpe1tdCV.KL.ova$time,dynpe1tdCV.KL.ova$Err,type=\"s\",lwd=2,col=8)\nlines(dynpe.KL$time,dynpe.KL$Err0,type=\"s\",lwd=2,lty=2)\nlines(dynpe.KL$time,dynpe.KL$Err1,type=\"s\",lwd=2,lty=3)\nlines(dynpe1td.Brier.ova$time,dynpe1td.Brier.ova$Err,type=\"s\",lwd=2)\nlines(dynpe1tdCV.Brier.ova$time,dynpe1tdCV.Brier.ova$Err,type=\"s\",lwd=2,col=8)\nlines(dynpe.Brier$time,dynpe.Brier$Err0,type=\"s\",lwd=2,lty=2)\nlines(dynpe.Brier$time,dynpe.Brier$Err1,type=\"s\",lwd=2,lty=3)\naxis(1)\naxis(2,at=seq(0,0.8,by=0.1))\nbox()\ntext(0,0.72,\"Kullback-Leibler\",adj=0)\ntext(0,0.275,\"Breier\",adj=0)\nlegend(\"topright\",c(\"Null model\",\"Time-fixed\",\"Time-varying\",\"Time-varying (CV)\"),lwd=2,lty=c(2,3,1,1),col=c(1,1,1,8),bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Models inspired by the frailty concept\n###############################################################################\n###############################################################################\n\n### Gamma frailty using coxph of the survival package (add + frailty(id) to formula)\nova$id &lt;- 1:nrow(ova)\ncfrailty &lt;- coxph(Surv(tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn + frailty(id), data = ova)\ncfrailty\ncfrailty &lt;- coxph(Surv(tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn + frailty.gamma(id, eps = 1e-05, method=\"em\"), data = ova)\ncfrailty # same\nloglik.frailty &lt;- cfrailty$history[[1]]$c.loglik\n\n### Relaxed Burr model\nX &lt;- model.matrix(Surv(tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn, data = ova)[,-1]\nX &lt;- t(t(X) - apply(X,2,mean)) # center covariates\ndd &lt;- data.frame(time=ova$tyears,status=ova$d)\n## Define simple function to fit relaxed Burr model\n## (returns minus the relaxed Burr partial likelihood)\nBurrpl &lt;- function(pars,dd,X) {\n# pars contains first the beta's, then theta\n# uncomment the deb statements to monitor progress within optim()\n    ord &lt;- order(dd$time,-dd$status)\n    dd &lt;- dd[ord,]\n    X &lt;- X[ord,,drop=FALSE]\n    p1 &lt;- ncol(X)\n    beta &lt;- pars[1:p1]\n# deb(beta, method=\"cat\")\n    theta &lt;- exp(pars[p1+1]) # only scalar for now\n# deb(theta, method=\"cat\")\n    Xbeta &lt;- as.numeric(X %*% beta)\n    # not optimized for speed\n    d1 &lt;- dd[dd$status==1,]\n    wh &lt;- which(dd$status==1)\n    nt &lt;- nrow(d1)\n    res &lt;- 0\n    for (i in 1:nt) {\n        dd$rat &lt;- exp(Xbeta)/(1+theta*d1$time[i]*exp(Xbeta))\n        dd$rcsrat &lt;- rev(cumsum(rev(dd$rat)))\n        res &lt;- res + log(dd$rat[wh[i]]) - log(dd$rcsrat[wh[i]])\n    }\n# deb(res, method=\"cat\")\n    return(-res)\n}\nbth &lt;- c(0.4,rep(0,ncol(X)-1),0)\nopt &lt;- optim(bth, Burrpl, method=\"BFGS\", hessian=TRUE, dd=dd, X=X)\n# Parameters\nopt$par\n# Standard errors\nround(sqrt(diag(solve(opt$hessian))),3)\n# The variance theta and its standard error\nth &lt;- exp(opt$par[13])\nth\n# Variance of log(theta) is diag(solve(opt$hessian))[13]\n# By delta method, SE of theta is theta*SE(log(theta))\nsqrt(diag(solve(opt$hessian))[13])*th\n\n###############################################################################\n### Cure models\n###############################################################################\n\n# Put file \"semicure.s\" in your working directory, then read in file\nsource(\"semicure.s\")\n# Pure cure\nsc1 &lt;- semicure(Surv(tyears, d) ~ 1,\n  cureform = ~ Karn + Broders + FIGO + Ascites + Diam, data = ova)\nsummary(sc1) # Note that semicure models probability of \"uncure\"\n# Cure + Cox\nsc2 &lt;- semicure(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  cureform = ~ Karn + Broders + FIGO + Ascites + Diam, data = ova)\nsummary(sc2)\n\n###############################################################################\n###############################################################################\n### Reduced rank models\n###############################################################################\n###############################################################################\n\nrequire(coxvc)\n# Package coxvc fits the reduced rank models; careful, it also contains\n# a data set ova, with small differences (at least in the names of the time\n# and status variables). Be sure to take the ova data from dynpred\ndata(ova, package=\"dynpred\")\n# Somehow, for the functions of coxvc to work, the names of 'time' and 'status'\n# need to be \"time\" and \"death\", and these need to be ordered\nnames(ova)[1:2] &lt;- c(\"time\",\"death\")\nova &lt;- ova[order(ova$time,-ova$death),]\n\n# Software works only with categorical covariates, so code explicitly\nmm &lt;- model.matrix(Surv(time, death) ~ FIGO + Diam + Broders + Ascites + Karn, data=ova)[,-1]\nova &lt;- cbind(ova,mm)\nnames(ova)[10:13] &lt;- c(\"Diamless1\",\"Diam1to2\",\"Diam2to5\",\"Diamgreater5\")\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1))\n# This is not in the book, but a rank=2 model with two time functions\n# (identity and log(t+1)) is of full rank, so this will retain the\n# time-varying model of Table 6.1\nfit.r21 &lt;- coxvc(Surv(time, death) ~ FIGOIV + Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5 + Karn, Ft, rank = 2, data=ova)\nfit.r21\n\n# Two-stage procedure\nmm &lt;- model.matrix(Surv(Tstart, tyears, d) ~ FIGO + Diam + Broders + Ascites + Karn, data=ova2)[,-1]\nova2$Xbeta &lt;- as.numeric(mm %*% cfixed$coef)\ncfixed0 &lt;- coxph(Surv(Tstart, tyears, d) ~ Xbeta, data = ova2)\nctime3 &lt;- coxph(Surv(Tstart, tyears, d) ~ Xbeta + Xbeta:lnt, data = ova2)\nloglik.twostate &lt;- ctime3$loglik[2]\nanova(cfixed0,ctime3)\n\n## Rank 1 model with 1 and log(t+1)\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1))\nfit.r11 &lt;- coxvc(Surv(time, death) ~ Karn + Broders2 + Broders3 + Broders4 + Brodersunknown + FIGOIV +\n    Ascitespresent + Ascitesunknown + Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5, Ft, rank = 1, data=ova)\nfit.r11\n\n# Rescale gamma's so that gamma_1 = 1\ngam11 &lt;- fit.r11$gama[1]\ngam21 &lt;- fit.r11$gama[2]\ngam21 &lt;- gam21/gam11\ngam21 # -0.488\ngam11 &lt;- 1\nloglik.r11 &lt;- fit.r11$logL\n\n# Not in the book; plotcoxvc plots survival or covariate effects. I got it to work\n# only if the data are ordered, names of time and status are \"time\" and \"death\", and\n# data is attached\nattach(ova)\nplotcoxvc(fit.r11, fun=\"survival\")\nplotcoxvc(fit.r11, fun=\"effects\")\n\n## Three time functions, rank=1\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1), log(ova$time+1)^2)\nfit.r12 &lt;- coxvc(Surv(time, death) ~ Karn + Broders2 + Broders3 + Broders4 + Brodersunknown + FIGOIV +\n    Ascitespresent + Ascitesunknown + Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5, Ft, rank = 1, data=ova)\nfit.r12\nloglik.r12 &lt;- fit.r12$logL\n\n# plotcoxvc(fit.r12, fun=\"survival\")\n# plotcoxvc(fit.r12, fun=\"effects\")\n\n## Four time functions, rank=1\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1), log(ova$time+1)^2, log(ova$time+1)^3)\nfit.r13 &lt;- coxvc(Surv(time, death) ~ Karn + Broders2 + Broders3 + Broders4 + Brodersunknown + FIGOIV +\n    Ascitespresent + Ascitesunknown + Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5, Ft, rank = 1, data=ova)\nfit.r13\nloglik.r13 &lt;- fit.r13$logL\n\n# plotcoxvc(fit.r13, fun=\"survival\")\n# plotcoxvc(fit.r13, fun=\"effects\")\n\n###############################################################################\n### Figure 6.5: Shape of the time variation of the rank=1 model for extended\n### bases\n###############################################################################\ngam12 &lt;- fit.r12$gama[1]\ngam22 &lt;- fit.r12$gama[2]\ngam32 &lt;- fit.r12$gama[3]\ngam22 &lt;- gam22/gam12\ngam32 &lt;- gam32/gam12\ngam12 &lt;- 1\ngam13 &lt;- fit.r13$gama[1]\ngam23 &lt;- fit.r13$gama[2]\ngam33 &lt;- fit.r13$gama[3]\ngam43 &lt;- fit.r13$gama[4]\ngam23 &lt;- gam23/gam13\ngam33 &lt;- gam33/gam13\ngam43 &lt;- gam43/gam13\ngam13 &lt;- 1\ntseq &lt;- seq(0,6,by=0.05)\n\nplot(tseq,gam11 + gam21*log(tseq+1),type=\"l\",lwd=2,ylim=c(-0.25,1),xlab=\"Time (years)\",ylab=\"Regression coefficient\")\nlines(tseq,gam12 + gam22*log(tseq+1) + gam32*log(tseq+1)^2,type=\"l\",lwd=2,lty=2)\nlines(tseq,gam13 + gam23*log(tseq+1) + gam33*log(tseq+1)^2 + gam43*log(tseq+1)^3,type=\"l\",lwd=2,lty=3)\nabline(h=0,lty=5,lwd=1)\nlegend(\"topright\",c(\"m=2\",\"m=3\",\"m=4\"),lwd=2,lty=1:3,bty=\"n\")\n\n## Rank 1 model with 1 and log(t+1) for single categorical covariate\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1))\nfit.r00 &lt;- coxph(Surv(time, death) ~ Diam, data=ova)\nfit.r00\nfit.r11 &lt;- coxvc(Surv(time, death) ~ Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5, Ft, rank = 1, data=ova)\nfit.r11\nfit.r11$gama[2]/fit.r11$gama[1] # -0.504\nfit.r00$loglik\nfit.r11$logL\n\n### Rank=2 models\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1))\nfit.r2 &lt;- coxvc(Surv(time, death) ~ FIGOIV + Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5 +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn, Ft, rank = 2, data=ova)\nloglik.r21 &lt;- fit.r2$logL\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1), log(ova$time+1)^2)\nfit.r2 &lt;- coxvc(Surv(time, death) ~ FIGOIV + Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5 +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn, Ft, rank = 2, data=ova)\nloglik.r22 &lt;- fit.r2$logL\nFt &lt;- cbind(rep(1, nrow(ova)), log(ova$time+1), log(ova$time+1)^2, log(ova$time+1)^3)\nfit.r2 &lt;- coxvc(Surv(time, death) ~ FIGOIV + Diamless1 + Diam1to2 + Diam2to5 + Diamgreater5 +\n    Broders2 + Broders3 + Broders4 + Brodersunknown +\n    Ascitespresent + Ascitesunknown + Karn, Ft, rank = 2, data=ova)\nloglik.r23 &lt;- fit.r2$logL\n\nloglik.r23 - loglik.r13\n\n###############################################################################\n### Figure 6.6: Time-dependent regression effects for the rank = 2, m = 4 model\n###############################################################################\n\n# Automatic default picture of effects (not shown in the book)\nplotcoxvc(fit.r2, fun=\"effects\")\n\nf1 &lt;- function(t) 1\nf2 &lt;- function(t) log(t+1)\nf3 &lt;- function(t) log(t+1)^2\nf4 &lt;- function(t) log(t+1)^3\ntseq &lt;- seq(0,6,by=0.05)\nnseq &lt;- length(tseq)\nFtseq &lt;- cbind(rep(1, nseq), f2(tseq), f3(tseq), f4(tseq))\nbseq &lt;- Ftseq %*% t(fit.r2$theta)\n\nnms &lt;- c(\"FIGO IV\",\"Diameter &lt;1 cm\",\"Diameter 1-2 cm\",\"Diameter 2-5 cm\",\n  \"Diameter &gt;5 cm\",\"Broders 2\",\"Broders 3\",\"Broders 4\",\"Broders unknown\",\n  \"Ascites present\",\"Ascites unknown\",\"Karnofsky\")\nvdist &lt;- hdist &lt;- 0.2\nltys &lt;- c(1,1,2,3,4,1,2,3,4,1,2,2)\nylim &lt;- range(bseq)\nylim[2] &lt;- ylim[2]+0.2\nlayout(matrix(1:4, 2, 2, byrow=TRUE),widths=c(10,10),heights=c(10,10))\n# topleft; KARN and FIGO (1 and 12)\nwh &lt;- c(1,12)\npar(mar= c(vdist, 4, 3, hdist))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"\",ylab=\"Regression coefficient\",axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lty=5,lwd=1)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(2); axis(3); box()\n# topright; Broders (6-9)\nwh &lt;- 6:9\npar(mar= c(vdist, hdist, 3, 4))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"\",ylab=\"\",axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lty=5,lwd=1)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(3); axis(4); box()\n# bottomleft; Diameter (2-5)\nwh &lt;- 2:5\npar(mar= c(5, 4, vdist, hdist))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"Time (years)\",ylab=\"Regression coefficient\",axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lty=5,lwd=1)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(1); axis(2); box()\n# bottomright; Ascites (10-11)\nwh &lt;- 10:11\npar(mar= c(5, hdist, vdist, 4))\nplot(tseq,bseq[,1],type=\"n\",ylim=ylim,xlab=\"Time (years)\",ylab=\"\",axes=FALSE)\nfor (j in wh) lines(tseq,bseq[,j],type=\"l\",lwd=2,lty=ltys[j])\nabline(h=0,lty=5,lwd=1)\nlegend(\"topright\",nms[wh],lwd=2,lty=ltys[wh],bty=\"n\")\naxis(1); axis(4); box()\npar(oldpar) # reset graphical parameters\n\n### A summary of all the partial log-likelihoods\nloglik.fixed # time-fixed\n- opt$value # relaxed Burr\nloglik.twostate # two-stage\nloglik.r11 # the reduced rank models\nloglik.r12\nloglik.r13\nloglik.r21 # the log-likelihood of the ful time-varying model (=loglik.timefull)\nloglik.r22\nloglik.r23\n\n## Comparisons mentioned in the text\nloglik.timefull-loglik.fixed\nloglik.time1-loglik.fixed\nloglik.r11 - loglik.twostate\nloglik.r13 - loglik.r11\nloglik.r23 - loglik.r13"
  },
  {
    "objectID": "chapters/chapter_07.html",
    "href": "chapters/chapter_07.html",
    "title": "7  Dealing with non-proportional hazards",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 7 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\nrequire(dynpred)\n\n###############################################################################\n###############################################################################\n### Section 7.1 based on large simulated data set\n###############################################################################\n###############################################################################\n\nS1 &lt;- function(t) exp(-(t/5)^(4/3))\nS2 &lt;- function(t) exp(-(t/5)^(3/4))\n\nset.seed(20100629)\nn &lt;- 50000\nn2 &lt;- n/2\nd1 &lt;- data.frame(id=1:n2,time=5*(-log(runif(n2)))^(3/4),status=1,group=1)\nd2 &lt;- data.frame(id=n2+(1:n2),time=5*(-log(runif(n2)))^(4/3),status=1,group=2)\nd &lt;- rbind(d1,d2)\nd$status[d$time&gt;10] &lt;- 0\nd$time[d$time&gt;10] &lt;- 10\n\n# Simple Cox\nc1 &lt;- coxph(Surv(time,status)~group, data=d)\nc1\nsf &lt;- survfit(c1,newdata=data.frame(group=1:2))\n\n###############################################################################\n###############################################################################\n### Figure 7.1: The survival curves of the example and simple Cox model fit\n###############################################################################\n###############################################################################\n\ntseq &lt;- seq(0,10,by=0.05)\n# Actual figure with stepfunction for Cox fits\nplot(tseq,S1(tseq),type=\"l\",lwd=2,ylim=c(0,1),xlab=\"Time (years)\",ylab=\"Survival\")\nlines(tseq,S2(tseq),type=\"l\",lwd=2,lty=2)\nlines(c(0,sf[1]$time),c(1,sf[1]$surv),type=\"l\",lwd=2,col=8)\nlines(c(0,sf[2]$time),c(1,sf[2]$surv),type=\"l\",lwd=2,col=8,lty=2)\nlegend(\"topright\",c(\"True group 1\",\"True group 2\",\"Cox fit group 1\",\"Cox fit group 2\"),\n  lwd=2,col=c(1,1,8,8),lty=c(1,2,1,2),bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Figure 7.2: Survival predictions based on ?stopped Cox models?\n### for each time-point\n###############################################################################\n###############################################################################\n\ntseq &lt;- seq(0,10,by=0.05)\nnseq &lt;- length(tseq)\n## Cox stopped\nstoppedCox &lt;- matrix(NA,nseq,2)\nstoppedCox[1,] &lt;- c(1,1)\n# This is to monitor progress\nm &lt;- floor(log10(nseq)) + 1\npre &lt;- rep(\"\\b\", 2 * m + 1)\nfor (i in 2:length(tseq)) {\n  cat(pre, i, \"/\", nseq, sep = \"\"); flush.console()\n  thor &lt;- tseq[i]\n  dhor &lt;- d\n  dhor$status[dhor$time&gt;thor] &lt;- 0\n  dhor$time[dhor$time&gt;thor] &lt;- thor\n  chor &lt;- coxph(Surv(time,status)~group, data=dhor)\n  sfhor &lt;- survfit(chor,newdata=data.frame(group=1:2))\n  nhor &lt;- length(sfhor[1]$time)\n  stoppedCox[i,] &lt;- sfhor$surv[nhor,]\n}\n\nplot(tseq,S1(tseq),type=\"l\",lwd=2,ylim=c(0,1),xlab=\"Time (years)\",ylab=\"Survival\")\nlines(tseq,S2(tseq),type=\"l\",lwd=2,lty=2)\nlines(tseq,stoppedCox[,1],type=\"l\",lwd=2,col=8)\nlines(tseq,stoppedCox[,2],type=\"l\",lwd=2,col=8,lty=2)\nlegend(\"topright\",\n  c(\"True group 1\",\"True group 2\",\"Stopped Cox group 1\",\"Stopped Cox group 2\"),\n  lwd=2,col=c(1,1,8,8),lty=c(1,2,1,2),bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Figure 7.3 Dynamic predictions with a window of 3 years comparing\n### a simple Cox model with the true model for the simulation example\n### of Section 7.1\n###############################################################################\n###############################################################################\n\nw &lt;- 3\ntseq &lt;- seq(0,7,by=0.05)\nFw1 &lt;- data.frame(time=tseq,Fw=1-exp(-(((tseq+3)/5)^(4/3) - (tseq/5)^(4/3))))\nFw2 &lt;- data.frame(time=tseq,Fw=1-exp(-(((tseq+3)/5)^(3/4) - (tseq/5)^(3/4))))\n\n## Simple Cox\ndcox &lt;- coxph(Surv(time, status) ~ group, data=d)\nndata &lt;- data.frame(group=1:2)\nsf1 &lt;- survfit(dcox, newdata=ndata[1,,drop=FALSE])\nsf2 &lt;- survfit(dcox, newdata=ndata[2,,drop=FALSE])\nnseq &lt;- length(tseq)\nFwcox1 &lt;- Fwcox2 &lt;- data.frame(time=tseq,Fw=NA)\n# For loop takes a while; this is to monitor progress\nm &lt;- floor(log10(nseq)) + 1\npre &lt;- rep(\"\\b\", 2 * m + 1)\nfor (i in 1:nseq) {\n    cat(pre, i, \"/\", nseq, sep = \"\"); flush.console()\n    ti &lt;- tseq[i]\n    S1 &lt;- evalstep(sf1$time,sf1$surv,c(ti,ti+w),subst=1)\n    S2 &lt;- evalstep(sf2$time,sf2$surv,c(ti,ti+w),subst=1)\n    Fwcox1$Fw[i] &lt;- 1- S1[2]/S1[1]\n    Fwcox2$Fw[i] &lt;- 1- S2[2]/S2[1]\n}\n\nplot(Fw1$time,Fw1$Fw,type=\"l\",lwd=2,xlim=c(0,7),ylim=c(0,1),xlab=\"Time (years)\",ylab=\"Death probability\")\nlines(Fw2$time,Fw2$Fw,type=\"l\",lwd=2,col=8)\nlines(Fwcox1$time,Fwcox1$Fw,type=\"l\",lwd=1,lty=2)\nlines(Fwcox2$time,Fwcox2$Fw,type=\"l\",lwd=1,lty=2,col=8)\nlegend(\"topright\",c(\"True group 1\",\"True group 2\",\"Simple Cox group 1\",\"Simple Cox group 2\"),lwd=2,col=c(1,8,1,8),lty=c(1,1,2,2),bty=\"n\")\n\n\n###############################################################################\n###############################################################################\n### Section 7.2 based on D1/D2 and ovarian data\n### D1/D2 data are NOT publicly available, code is available upon request\n### This document only contains the ovarian cancer analysis\n###############################################################################\n###############################################################################\n\ndata(ova)\n\n# Recall from Chapter 3\ncfull &lt;- coxph(Surv(tyears, d) ~ Karn + Broders + FIGO + Ascites + Diam,\n  data = ova)\ncfull\n\nXbeta &lt;- ova$Xbeta &lt;- cfull$linear.predictors\nmean(ova$Xbeta)\nsqrt(var(ova$Xbeta))\n\ncfull &lt;- coxph(Surv(tyears, d) ~ Xbeta, data = ova)\n\nw &lt;- 3\ntt &lt;- ova$tyears[ova$d==1]\ntt &lt;- sort(unique(c(0,tt,tt-w)))\ntt &lt;- tt[tt&gt;=0]\nnt &lt;- length(tt)\nLMprobs &lt;- data.frame(LM=tt,logHR=NA,lower=NA,upper=NA)\nfor (i in 1:nt) {\n    LMdata &lt;- cutLM(data=ova,outcome=list(time=\"tyears\",status=\"d\"),\n        LM=tt[i],horizon=tt[i]+w,covs=list(fixed=\"Xbeta\",varying=NULL))\n    LMcox &lt;- coxph(Surv(tyears,d) ~ Xbeta, data=LMdata, method=\"breslow\")\n    se &lt;- as.numeric(sqrt(LMcox$var))\n    LMprobs$logHR[i] &lt;- LMcox$coef\n    LMprobs$lower[i] &lt;- LMcox$coef - qnorm(0.975)*se\n    LMprobs$upper[i] &lt;- LMcox$coef + qnorm(0.975)*se\n}\n\n###############################################################################\n###############################################################################\n### Table 7.2: Sliding landmark model for the ovarian cancer data\n###############################################################################\n###############################################################################\n\n# Supermodel based on stacked data sets\nLMs &lt;- seq(0,5,by=0.10)\nLMdata &lt;- cutLM(data=ova,outcome=list(time=\"tyears\",status=\"d\"),\n    LM=0,horizon=w,covs=list(fixed=c(\"id\",\"Xbeta\"),varying=NULL))\nfor (i in 2:length(LMs))\n    LMdata &lt;- rbind(LMdata,cutLM(data=ova,outcome=list(time=\"tyears\",status=\"d\"),\n        LM=LMs[i],horizon=LMs[i]+w,covs=list(fixed=c(\"id\",\"Xbeta\"),varying=NULL)))\n\nf1 &lt;- function(t) 1\nf2 &lt;- function(t) (t/5)\nf3 &lt;- function(t) (t/5)^2\n\n# Explicitly code interactions of treatment with LM\nLMdata$Xbeta1 &lt;- LMdata$Xbeta*f1(LMdata$LM)\nLMdata$Xbeta2 &lt;- LMdata$Xbeta*f2(LMdata$LM)\nLMdata$Xbeta3 &lt;- LMdata$Xbeta*f3(LMdata$LM)\n# Supermodel based only on randomization\nLMsupercox &lt;- coxph(Surv(LM,tyears,d) ~ Xbeta1 + Xbeta2 + Xbeta3 + strata(LM)\n    + cluster(id), data=LMdata, method=\"breslow\")\nLMsupercox\n\nbet &lt;- LMsupercox$coef\nsig &lt;- LMsupercox$var\n\n# Wald test to assess statistical signifiance of Xbeta x landmark interactions\nwh &lt;- 2:3\nwald &lt;- t(bet[wh]) %*% solve(sig[wh,wh]) %*% bet[wh]\npval &lt;- 1-pchisq(wald,df=length(wh))\nprint(data.frame(wald=wald,pval=pval))\n\n###############################################################################\n###############################################################################\n### Figure 7.9: Sliding landmark effects and pointwise 95%-confidence intervals\n### for the prognostic index of Table 3.1 in the ovarian cancer data using\n### a window of width w = 3\n###############################################################################\n###############################################################################\n\nm &lt;- matrix(c(rep(1,length(LMs)),f2(LMs),f3(LMs)),length(LMs),3)\n\nLMsmooth &lt;- data.frame(LM=LMs,logHR=as.numeric(m %*% bet))\nse &lt;- sqrt(diag(m %*% sig %*% t(m)))\nLMsmooth$lower &lt;- LMsmooth$logHR - qnorm(0.975)*se\nLMsmooth$upper &lt;- LMsmooth$logHR + qnorm(0.975)*se\n\nLMprobs &lt;- LMprobs[LMprobs$LM&lt;=5,]\nLMsmooth &lt;- LMsmooth[LMsmooth$LM&lt;=5,]\n\nplot(LMprobs$LM,LMprobs$logHR,type=\"s\",lwd=2,\n  xlim=c(0,5),ylim=range(LMprobs[,2:4]),\n  xlab=\"Time (years)\",ylab=\"Log hazard ratio\")\nlines(LMprobs$LM,LMprobs$lower,type=\"s\")\nlines(LMprobs$LM,LMprobs$upper,type=\"s\")\nlines(LMsmooth$LM,LMsmooth$logHR,type=\"l\",lwd=2,lty=2)\nlines(LMsmooth$LM,LMsmooth$lower,type=\"l\",lty=2)\nlines(LMsmooth$LM,LMsmooth$upper,type=\"l\",lty=2)\nlegend(\"bottomleft\",c(\"Crude\",\"Supermodel\"),lwd=2,lty=1:2,bty=\"n\")\n\n## ipl* model\ng1 &lt;- function(t) f2(t)\ng2 &lt;- function(t) f3(t)\nLMdata$LM1 &lt;- g1(LMdata$LM)\nLMdata$LM2 &lt;- g2(LMdata$LM)\n\nLMsupercox2 &lt;- coxph(Surv(LM,tyears,d) ~ Xbeta1 + Xbeta2 + Xbeta3 + LM1 + LM2\n  + cluster(id), data=LMdata, method=\"breslow\")\nLMsupercox2\n\nbet &lt;- LMsupercox2$coef\nsig &lt;- LMsupercox2$var\n\n# Wald test to assess statistical signifiance of Xbeta x landmark interactions\nwh &lt;- 2:3\nwald &lt;- t(bet[wh]) %*% solve(sig[wh,wh]) %*% bet[wh]\npval &lt;- 1-pchisq(wald,df=length(wh))\nprint(data.frame(wald=wald,pval=pval))\n\n\n###############################################################################\n###############################################################################\n### Figure 7.10: Three year dynamic probabilities of dying based on the\n### proportional baselines landmark supermodel for the ovarian cancer data\n###############################################################################\n###############################################################################\n\nndata &lt;- data.frame(Xbeta1=0,Xbeta2=0,Xbeta3=0,LM1=0,LM2=0)\nsf2 &lt;- survfit(LMsupercox2, newdata=ndata)\n\n# Prediction\ntt &lt;- tt[tt&lt;=5]\n\n## Custom-made function to calculate predictions\nFwpredict &lt;- function(bet, sf, newdata, tt)\n{\n    nt &lt;- length(tt)\n    Xbeta &lt;- newdata$Xbeta\n    sf &lt;- data.frame(time=sf$time,surv=sf$surv,Haz=-log(sf$surv))\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- sf\n        tti &lt;- tt[i]\n        sfi$Haz &lt;- sfi$Haz * exp(Xbeta*bet[1]*f1(tt[i]) + Xbeta*bet[2]*f2(tt[i])\n          + Xbeta*bet[3]*f3(tt[i]) + bet[4]*g1(tt[i]) + bet[5]*g2(tt[i]))\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\n# Mean - 2*sd\nndata &lt;- data.frame(Xbeta = mean(ova$Xbeta) - 2*sd(ova$Xbeta))\nFw1 &lt;- Fwpredict(LMsupercox2$coef, sf2, ndata, tt)\n# Mean - sd\nndata &lt;- data.frame(Xbeta = mean(ova$Xbeta) - sd(ova$Xbeta))\nFw2 &lt;- Fwpredict(LMsupercox2$coef, sf2, ndata, tt)\n# Mean\nndata &lt;- data.frame(Xbeta = mean(ova$Xbeta))\nFw3 &lt;- Fwpredict(LMsupercox2$coef, sf2, ndata, tt)\n# Mean + sd\nndata &lt;- data.frame(Xbeta = mean(ova$Xbeta) + sd(ova$Xbeta))\nFw4 &lt;- Fwpredict(LMsupercox2$coef, sf2, ndata, tt)\n# Mean - 2*sd\nndata &lt;- data.frame(Xbeta = mean(ova$Xbeta) + 2*sd(ova$Xbeta))\nFw5 &lt;- Fwpredict(LMsupercox2$coef, sf2, ndata, tt)\n\n## Plot results\nplot(Fw3$time,1-Fw3$Fw,type=\"s\",lwd=2,xlim=c(0,5),ylim=c(0,1),\n  xlab=\"Time (years)\",ylab=\"Probability of death\")\nlines(Fw1$time,1-Fw1$Fw,type=\"s\",lwd=2,lty=2)\nlines(Fw2$time,1-Fw2$Fw,type=\"s\",lwd=2,lty=3)\nlines(Fw4$time,1-Fw4$Fw,type=\"s\",lwd=2,lty=4)\nlines(Fw5$time,1-Fw5$Fw,type=\"s\",lwd=2,lty=5)\nlegend(\"topright\",c(\"Mean+2sd\",\"Mean+sd\",\"Mean\",\"Mean-sd\",\"Mean-2sd\"),\n  lwd=2,lty=c(5,4,1,3,2),bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_08.html",
    "href": "chapters/chapter_08.html",
    "title": "8  Dynamic predictions using biomarkers",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 8 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\nlibrary(dynpred)\ndata(wbc1)\ndata(wbc2)\nwbc &lt;- merge(wbc1,wbc2,by=\"patnr\")\nnames(wbc)[c(2,6)] &lt;- c(\"survtime\",\"wbctime\")\n\n###############################################################################\n###############################################################################\n### Table 8.1: Number of WBC measurements by year\n###############################################################################\n###############################################################################\n\nwbc$year &lt;- as.numeric(cut(wbc$wbctime,0:9))\nfor (i in 1:8) {\n    wbcyeari &lt;- wbc[wbc$year==i,]\n    ni &lt;- length(unique(wbcyeari$patnr))\n    meani &lt;- nrow(wbcyeari)/ni\n    print(data.frame(ni=ni,meani=round(meani,2)))\n}\n\n###############################################################################\n###############################################################################\n### Figure 8.3: LWBC trajectories of all patients in the Benelux CML data\n###############################################################################\n###############################################################################\n\nrequire(lattice)\nrequire(colorspace)\ncols &lt;- c(sequential_hcl(63),\n  terrain_hcl(63, c = c(65, 0), l = c(45, 95), power = c(1/3, 1.5)),\n  heat_hcl(64, c = c(80, 30), l = c(30, 90), power = c(1/5, 1.5)))\n\nxyplot(lwbc ~ wbctime, group = patnr, data = wbc,\n  xlab = \"Time (years)\", ylab = \"WBC (transformed)\", col = cols, type = \"l\")\n\n### Prepare data for time-dependent Cox regression\n\n## Overall survival\nwbcos &lt;- NULL\nn &lt;- length(unique(wbc$patnr))\nfor (i in 1:n) {\n  wbci &lt;- wbc[wbc$patnr==i,]\n  ni &lt;- nrow(wbci)\n  wbci$Tstart &lt;- wbci$wbctime\n  wbci$Tstop &lt;- c(wbci$Tstart[-1],wbci$survtime[1])\n  wbci$status &lt;- c(rep(0,nrow(wbci)-1),wbci$d[1])\n  wbci$TEL &lt;- 0\n  wbci$TEL[ni] &lt;- wbci$Tstop[ni] - wbci$Tstart[ni]\n  wbcos &lt;- rbind(wbcos,wbci)\n}\n\n## Failure-free survival\nwbcffs &lt;- NULL\nn &lt;- length(unique(wbc$patnr))\nfor (i in 1:n) {\n  wbci &lt;- wbc[wbc$patnr==i,]\n  ni &lt;- nrow(wbci)\n  wbci$Tstart &lt;- wbci$wbctime\n  Stop &lt;- min(wbci$survtime[1],wbci$Tstart[ni]+0.25)\n  Status &lt;- ifelse(wbci$survtime[1]&lt;wbci$Tstart[ni]+0.25,wbci$d[1],2)\n  wbci$Tstop &lt;- c(wbci$Tstart[-1],Stop)\n  wbci$status &lt;- c(rep(0,nrow(wbci)-1),Status)\n  wbci$TEL &lt;- wbci$Tstop - wbci$Tstart\n  wbcffs &lt;- rbind(wbcffs,wbci)\n}\n\n###############################################################################\n###############################################################################\n### Table 8.2: Cross-tabulation of first event status and survival status\n###############################################################################\n###############################################################################\n\nwbcffslast &lt;- wbcffs[c(which(!duplicated(wbcffs$patnr))[-1]-1,nrow(wbcffs)),]\ntable(wbcffslast$status,wbcffslast$d)\n\n###############################################################################\n###############################################################################\n### Figure 8.2: Survival and censoring for failure-free survival in the\n### Benelux CML data\n###############################################################################\n###############################################################################\n\nCML.ffs &lt;- survfit(Surv(Tstop, status&gt;0) ~ 1, data = wbcffslast)\nCML.cens &lt;- survfit(Surv(Tstop, status==0) ~ 1, data = wbcffslast)\n\noldpar &lt;- par(no.readonly=TRUE) # save graphical parameters\nlayout(matrix(1:2, 1, 2),widths=c(10.25,9))\npar(mar= c(5, 4, 4, 0.1) + 0.1)\nplot(CML.ffs, mark.time=FALSE, conf.int=FALSE, lwd=2,\n  xlab = \"Time (years)\", ylab = \"Probability\")\ntitle(main=\"Failure-free survival\")\npar(mar= c(5, 0.1, 4, 1) + 0.1)\nplot(CML.cens, mark.time=FALSE, conf.int=FALSE, lwd=2,\n  xlab = \"Time (years)\", ylab = \" \", axes=FALSE)\naxis(1)\nbox()\ntitle(main=\"Censoring\")\npar(oldpar) # reset graphical parameters\n\n###############################################################################\n###############################################################################\n### Figure 8.4: Mean trajectories of LWBC in reverse time\n###############################################################################\n###############################################################################\n\n# Prepare data\nout &lt;- wbcffslast$patnr[wbcffslast$status==0]\ntmp &lt;- wbcffs[!(wbcffs$patnr %in% out),c(1,6,7)]\ntmp &lt;- merge(tmp,wbcffslast[,c(1,9)],by=\"patnr\",all.x=TRUE,all.y=FALSE)\nnames(tmp)[4] &lt;- \"ffstime\"\ntmp$revtime &lt;- tmp$ffstime - tmp$wbctime\ntmp$revtimecat &lt;- cut(tmp$revtime,c(seq(0,7.5,by=0.25),Inf))\ntmp$revtime2 &lt;- (as.numeric(tmp$revtimecat)-1)*0.25\n\nrequire(gplots)\nplotmeans(lwbc ~ revtime2, data=tmp, n.label=FALSE, sfrac=0.005,\n  xlab=\"Years until failure\", ylab=\"LWBC\")\n\n###############################################################################\n###############################################################################\n### Table 8.3: Time-dependent Cox regression for different endpoints\n###############################################################################\n###############################################################################\n\n# Death\ncoxph(Surv(Tstart,Tstop,status==1) ~ sokal+I(age/10)+lwbc, data=wbcffs, method=\"breslow\")\n# Off-study\ncoxph(Surv(Tstart,Tstop,status==2) ~ sokal+I(age/10)+lwbc, data=wbcffs, method=\"breslow\")\n# Any event\ncoxph(Surv(Tstart,Tstop,status&gt;0) ~ sokal+I(age/10)+lwbc, data=wbcffs, method=\"breslow\")\n\n###############################################################################\n###############################################################################\n### Table 8.4: Time-dependent Cox regression for overall survival\n###############################################################################\n###############################################################################\n\nwbcos$wbctime &lt;- wbcos$Tstart # make a copy of WBC measurement time\nwbcos$status01 &lt;- as.numeric(wbcos$status&gt;0) # make a copy of WBC measurement time\ntt &lt;- wbcos$Tstop[wbcos$status01==1]\nwbcos &lt;- survSplit(wbcos,cut=tt,end=\"Tstop\",start=\"Tstart\",event=\"status01\")\nwbcos &lt;- wbcos[order(wbcos$patnr,wbcos$Tstart),]\nwbcos$TEL &lt;- wbcos$Tstop - wbcos$wbctime\n# old status variables have been copied, only last one can really be different from 0\nwbcos$status[wbcos$status&gt;0 & wbcos$status01==0] &lt;- 0\n\ncoxph(Surv(Tstart,Tstop,status) ~ sokal+I(age/10)+lwbc, data=wbcos, method=\"breslow\")\ncoxph(Surv(Tstart,Tstop,status) ~ sokal+I(age/10)+lwbc*TEL, data=wbcos, method=\"breslow\")\n\n###############################################################################\n###############################################################################\n### Prediction by landmark models\n###############################################################################\n###############################################################################\n\nLMdata &lt;- NULL\nLMs &lt;- seq(0.5,3.5,by=0.1)\nfor (LM in LMs) {\n  LMdataLM &lt;- cutLM(data=wbc,outcome=list(time=\"survtime\",status=\"d\"),\n      LM=LM,horizon=LM+4,covs=list(fixed=c(\"sokal\",\"age\"),varying=\"lwbc\"),\n      format=\"long\",id=\"patnr\",rtime=\"wbctime\")\n  # retain only patients on study (TEL(t)&lt;=0.25)\n  LMdataLM &lt;- LMdataLM[LM - LMdataLM$wbctime &lt;= 0.25,] # of wbctime?\n  LMdataLM &lt;- LMdataLM[!is.na(LMdataLM$patnr),]\n  LMdata &lt;- rbind(LMdata,LMdataLM)\n}\n\n###############################################################################\n###############################################################################\n### Table 8.5 Results of landmark analyses for the WBC counts;\n### s runs from 0.5 to 3.5 with steps of 0.1; window width w=4\n###############################################################################\n###############################################################################\n\n## Simple (ipl)\nLMdata$Tstart &lt;- LMdata$LM\nLMsupercox0 &lt;- coxph(Surv(Tstart,survtime,d) ~ sokal+I(age/10)+lwbc + strata(LM) + cluster(patnr), data=LMdata, method=\"breslow\")\nLMsupercox0\n\n## Extended\ntt &lt;- sort(unique(LMdata$survtime[LMdata$d==1]))\ndim(LMdata)\nLMdata2 &lt;- survSplit(data=LMdata, cut=tt, end=\"survtime\", start=\"Tstart\", event=\"d\")\ndim(LMdata2)\n\nLMdata2$lwbctmins &lt;- LMdata2$lwbc*(LMdata2$survtime - LMdata2$LM)\nLMdata2$lwbctmins2 &lt;- LMdata2$lwbc*(LMdata2$survtime - LMdata2$LM)^2\n\n# ipl\nLMsupercox1 &lt;- coxph(Surv(Tstart,survtime,d) ~ sokal+I(age/10)+lwbc+lwbctmins+lwbctmins2 + strata(LM) + cluster(patnr), data=LMdata2, method=\"breslow\")\nLMsupercox1\n\n# ipl*\ng1 &lt;- function(t) (t/4)\ng2 &lt;- function(t) (t/4)^2\n\nLMdata2$LM1 &lt;- g1(LMdata2$LM)\nLMdata2$LM2 &lt;- g2(LMdata2$LM)\n\nLMsupercox2 &lt;- coxph(Surv(Tstart,survtime,d) ~ sokal+I(age/10)+lwbc+lwbctmins+lwbctmins2 + LM1 + LM2 + cluster(patnr), data=LMdata2, method=\"breslow\")\nLMsupercox2\n\n###############################################################################\n###############################################################################\n### Figure 8.5: Time-varying effect of LWBC for the ipl and the ipl*\n### models of Table 8.5\n###############################################################################\n###############################################################################\n\ntseq &lt;- seq(0,4,by=0.05)\nplot(tseq,coef(LMsupercox1)[[\"lwbc\"]]+coef(LMsupercox1)[[\"lwbctmins\"]]*tseq+coef(LMsupercox1)[[\"lwbctmins2\"]]*tseq^2,\n    type=\"l\",lwd=2,ylim=c(0,2.5),xlab=\"t-s\",ylab=\"Log hazard ratio\")\nlines(tseq,coef(LMsupercox2)[[\"lwbc\"]]+coef(LMsupercox2)[[\"lwbctmins\"]]*tseq+coef(LMsupercox2)[[\"lwbctmins2\"]]*tseq^2,\n    type=\"l\",lwd=2,lty=2)\nlines(c(0,4),rep(coef(LMsupercox0)[[\"lwbc\"]],2),type=\"l\",lty=3)\nlegend(\"topright\",lwd=c(2,2,1),lty=1:3,c(\"Extended ipl\",\"Extended ipl*\",\"Simple ipl\"),bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Figure 8.6 Baseline hazard and landmark effects in proportional\n### baselines landmark supermodel\n###############################################################################\n###############################################################################\n\nmeans &lt;- LMsupercox2$means\n\nndata &lt;- data.frame(sokal=means[1],age=10*means[2],lwbc=0,lwbctmins=0,lwbctmins2=0,LM1=0,LM2=0)\nsf2 &lt;- survfit(LMsupercox2, newdata=ndata)\nHaz0 &lt;- data.frame(time=sf2$time,surv=sf2$surv); Haz0$Haz &lt;- -log(Haz0$surv)\n\npar(mfrow=c(1,2))\npar(mar=c(5,4,4,1.6)+0.1)\nplot(Haz0$time, Haz0$Haz, type=\"s\", lwd=2, xlab=\"Time (years)\", ylab=\"Cumulative hazard\")\npar(mar=c(5,3.6,4,2)+0.1)\nplot(LMs, exp(LMsupercox2$coef[6]*g1(LMs) + LMsupercox2$coef[7]*g2(LMs)), type=\"l\", lwd=2, xlab=\"Landmark (s)\", ylab=\"exp(theta(s))\")\npar(oldpar) # reset graphical parameters\n\n###############################################################################\n###############################################################################\n### Figure 8.7: Dynamic predictions of death within w = 4 years in the\n### proportional baselines landmark supermodel for different trajectories\n### of LWBC; basic refers to dynamic predictions in a Cox model not\n### taking into account LWBC\n###############################################################################\n###############################################################################\n\nw &lt;- 4\ntt &lt;- wbc$survtime[wbc$d==1]\ntt &lt;- sort(unique(c(0,tt,tt-w)))\ntt &lt;- tt[tt&gt;=0]\nnt &lt;- length(tt)\n\n# Custom-made fuction\nFwpredict &lt;- function(bet, Haz0, xdata, tt)\n{\n    nt &lt;- length(tt)\n    Haz0$haz &lt;- diff(c(0,Haz0$Haz))\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz0 # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[3]*xdata[i] + bet[4]*xdata[i]*(sfi$time-tti) + bet[5]*xdata[i]*(sfi$time-tti)^2\n            + bet[6]*g1(tt[i]) + bet[7]*g2(tt[i]))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\n\n# First basic, not taking into account WBC measurements\ncbas &lt;- coxph(Surv(survtime,d) ~ sokal + I(age/10), data=wbcffslast, method=\"breslow\")\nsf &lt;- survfit(cbas)\nFwbas &lt;- Fwindow(sf,width=4)\nFwbas &lt;- subset(Fwbas,time&gt;=0.5)\nFwbas &lt;- subset(Fwbas,time&lt;3.5)\n\ntt &lt;- seq(0.5,3.5,by=0.005)\nnt &lt;- length(tt)\nxdata &lt;- rep(0,nt)\nFw0 &lt;- Fwpredict(LMsupercox2$coef, Haz0, xdata, tt)\nxdata &lt;- rep(0.5,nt)\nFw1 &lt;- Fwpredict(LMsupercox2$coef, Haz0, xdata, tt)\nxdata &lt;- tt/3.5\nFw2 &lt;- Fwpredict(LMsupercox2$coef, Haz0, xdata, tt)\n\nplot(tt,Fw0$Fw,type=\"l\",lwd=2,ylim=c(0,1),xlab=\"Landmark point\",ylab=\"Death probability\")\nlines(tt,Fw1$Fw,lwd=2,lty=3)\nlines(tt,Fw2$Fw,lwd=2,lty=2)\nlines(Fwbas$time,Fwbas$Fw,lwd=2,col=8)\nlegend(\"topleft\",c(\"x(s)=0\",\"x(s)=0.5\",\"x(s)=s/3.5\",\"Basic\"),lwd=2,lty=c(1,3,2,1),col=c(1,1,1,8),bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_09.html",
    "href": "chapters/chapter_09.html",
    "title": "9  Dynamic prediction in multi-state models",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 9 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\n###############################################################################\n###############################################################################\n### Section 9.3: Application (ALL data)\n###############################################################################\n###############################################################################\n\nrequire(dynpred)\nrequire(mstate)\ndata(ALL)\n\nyear &lt;- 365.25\nmonth &lt;- year/12\n\n###############################################################################\n###############################################################################\n### Table 9.1: Cox regression for death and/or relapse\n###############################################################################\n###############################################################################\n\n### To construct this table, a new data set needs to be constructed containing\n### the time-dependent covariates (recent) AGvHD and PR, in long format.\n### This can be done from scratch; here the mstate package is used, in\n### particular the function msprep(). For this to work we need to define\n### a multi-state model with AGvHD and PR + 30 days as new events\ntransListn &lt;- list(\n  \"Tx\" = c(2, 4, 10, 11),\n  \"A\" = c(3, 6, 10, 11),\n  \"A30\" = c(7, 10, 11),\n  \"R\" = c(5, 6, 10, 11),\n  \"R30\" = c(8, 10, 11),\n  \"AR\" = c(7, 8, 10, 11),\n  \"A30R\" = c(9, 10, 11),\n  \"AR30\" = c(9, 10, 11),\n  \"A30R30\" = c(10, 11),\n  \"Rel\" = c(),\n  \"Death\" = c())\ntmat &lt;- transMat(transListn)\ntmat\n\n# Define RFS (minimum of relapse and death)\nALL$rfs &lt;- pmin(ALL$rel,ALL$srv)\nALL$rfs.s &lt;- pmax(ALL$rel.s,ALL$srv.s)\n# Define \"new states\" as recovery and/or AE plus one month\nALL$r30 &lt;- ALL$rec + month\nALL$r30.s &lt;- ALL$rec.s\nALL$a30 &lt;- ALL$ae + month\nALL$a30.s &lt;- ALL$ae.s\nALL$ar &lt;- pmax(ALL$ae,ALL$rec) # already in data (as recae)\nALL$ar.s &lt;- pmin(ALL$ae.s,ALL$rec.s) # already in data (as recae.s)\nALL$a30r &lt;- pmax(ALL$a30,ALL$rec)\nALL$a30r.s &lt;- pmin(ALL$ae.s,ALL$rec.s)\nALL$ar30 &lt;- pmax(ALL$ae,ALL$r30)\nALL$ar30.s &lt;- pmin(ALL$ae.s,ALL$rec.s)\nALL$a30r30 &lt;- pmax(ALL$a30,ALL$r30)\nALL$a30r30.s &lt;- pmin(ALL$ae.s,ALL$rec.s)\n# These newly defined a30 etc should never go beyond end of follow-up\nwh &lt;- which(ALL$r30&gt;ALL$rfs)\nALL$r30.s[wh] &lt;- 0\nALL$r30[wh] &lt;- ALL$rfs[wh]\nwh &lt;- which(ALL$a30&gt;ALL$rfs)\nALL$a30.s[wh] &lt;- 0\nALL$a30[wh] &lt;- ALL$rfs[wh]\nwh &lt;- which(ALL$a30r&gt;ALL$rfs)\nALL$a30r.s[wh] &lt;- 0\nALL$a30r[wh] &lt;- ALL$rfs[wh]\nwh &lt;- which(ALL$ar30&gt;ALL$rfs)\nALL$ar30.s[wh] &lt;- 0\nALL$ar30[wh] &lt;- ALL$rfs[wh]\nwh &lt;- which(ALL$a30r30&gt;ALL$rfs)\nALL$a30r30.s[wh] &lt;- 0\nALL$a30r30[wh] &lt;- ALL$rfs[wh]\n# covariates\ncovs &lt;- c(\"year\",\"agecl\",\"proph\",\"match\")\n\nALL2 &lt;- msprep(\n  time=c(NA,\"ae\",\"a30\",\"rec\",\"r30\",\"ar\",\"a30r\",\"ar30\",\"a30r30\",\"rel\",\"srv\"),\n  status=c(NA,\"ae.s\",\"a30.s\",\"rec.s\",\"r30.s\",\"ar.s\",\"a30r.s\",\"ar30.s\",\"a30r30.s\",\"rel.s\",\"srv.s\"),\n  data=ALL, trans=tmat, keep=covs)\n\n# We are now going to add the values of the time-dependent covariates in the\n# ALL2 data\nALL2$A &lt;- ALL2$recA &lt;- ALL2$R &lt;- ALL2$recR &lt;- 0\nALL2$A[ALL2$from %in% c(2,3,6,7,8,9)] &lt;- 1\nALL2$recA[ALL2$from %in% c(2,6,8)] &lt;- 1\nALL2$R[ALL2$from %in% 4:9] &lt;- 1\nALL2$recR[ALL2$from %in% c(4,6,7)] &lt;- 1\n# For time-dependent Cox regression we are only interested in transitions\n# into either relapse or death\n### First relapse\nALL2Rel &lt;- ALL2[ALL2$to==10,]\nALL2Rel &lt;- ALL2Rel[!is.na(ALL2Rel$id),]\nc1Rel &lt;- coxph(\n  Surv(Tstart,Tstop,status) ~ match + proph + year + agecl + A + recA + R + recR,\n  data = ALL2Rel, method=\"breslow\")\nc1Rel\n### Then death\nALL2Death &lt;- ALL2[ALL2$to==11,]\nALL2Death &lt;- ALL2Death[!is.na(ALL2Death$id),]\nc1Death &lt;- coxph(\n  Surv(Tstart,Tstop,status) ~ match + proph + year + agecl + A + recA + R + recR,\n  data = ALL2Death, method=\"breslow\")\nc1Death\n### For RFS, we could either adapt ALL2, or (quicker) redefine ALL2\n### based on new transition matrix\ntransListn &lt;- list(\n  \"Tx\" = c(2, 4, 10),\n  \"A\" = c(3, 6, 10),\n  \"A30\" = c(7, 10),\n  \"R\" = c(5, 6, 10),\n  \"R30\" = c(8, 10),\n  \"AR\" = c(7, 8, 10),\n  \"A30R\" = c(9, 10),\n  \"AR30\" = c(9, 10),\n  \"A30R30\" = c(10),\n  \"RelDeath\" = c())\ntmat2 &lt;- transMat(transListn)\ntmat2\n\nALL2 &lt;- msprep(\n  time=c(NA,\"ae\",\"a30\",\"rec\",\"r30\",\"ar\",\"a30r\",\"ar30\",\"a30r30\",\"rfs\"),\n  status=c(NA,\"ae.s\",\"a30.s\",\"rec.s\",\"r30.s\",\"ar.s\",\"a30r.s\",\"ar30.s\",\"a30r30.s\",\"rfs.s\"),\n  data=ALL, trans=tmat2, keep=covs)\n# Again add values of the time-dependent covariates in ALL2\nALL2$A &lt;- ALL2$recA &lt;- ALL2$R &lt;- ALL2$recR &lt;- 0\nALL2$A[ALL2$from %in% c(2,3,6,7,8,9)] &lt;- 1\nALL2$recA[ALL2$from %in% c(2,6,8)] &lt;- 1\nALL2$R[ALL2$from %in% 4:9] &lt;- 1\nALL2$recR[ALL2$from %in% c(4,6,7)] &lt;- 1\nALL2RFS &lt;- ALL2[ALL2$to==10,]\nALL2RFS &lt;- ALL2RFS[!is.na(ALL2RFS$id),]\n\nc1 &lt;- coxph(\n  Surv(Tstart,Tstop,status) ~ match + proph + year + agecl + A + recA + R + recR,\n  data = ALL2RFS, method=\"breslow\")\nc1\n\n###############################################################################\n###############################################################################\n### Table 9.2: Cox regression for AGvHD and platelet recovery\n###############################################################################\n###############################################################################\n\n### Time-dependent Cox models for AGvHD and platelet recovery\n## AGvHD\ntransListn &lt;- list(\n  \"Tx\" = c(2, 4),\n  \"R\" = c(3, 4),\n  \"R30\" = c(4),\n  \"A\" = c()\n)\ntmat3 &lt;- transMat(transListn)\ntmat3\nALL3 &lt;- msprep(\n  time=c(NA,\"rec\",\"r30\",\"ae\"),\n  status=c(NA,\"rec.s\",\"r30.s\",\"ae.s\"),\n  data=ALL, trans=tmat3, keep=covs)\n# Again add values of the time-dependent covariates in ALL3\nALL3$R &lt;- ALL3$recR &lt;- 0\nALL3$R[ALL3$from %in% c(2,3)] &lt;- 1\nALL3$recR[ALL3$from==2] &lt;- 1\nALL3s &lt;- ALL3[ALL3$to==4,]\n# For some reason, two \"Inf\" values for Tstop and time (with status 0),\n# set to largest observed time\nALL3s$Tstop[is.infinite(ALL3s$Tstop)] &lt;- max(ALL3s$Tstop[!is.infinite(ALL3s$Tstop)])\nALL3s$time &lt;- ALL3s$Tstop - ALL3s$Tstart\nc2 &lt;- coxph(\n  Surv(Tstart,Tstop,status) ~ match + proph + year + agecl + R + recR,\n  data = ALL3s, method=\"breslow\")\nc2\n\n## Platelet recovery\ntransListn &lt;- list(\n  \"Tx\" = c(2, 4),\n  \"A\" = c(3, 4),\n  \"A30\" = c(4),\n  \"R\" = c()\n)\ntmat4 &lt;- transMat(transListn)\ntmat4\nALL4 &lt;- msprep(\n  time=c(NA,\"ae\",\"a30\",\"rec\"),\n  status=c(NA,\"ae.s\",\"a30.s\",\"rec.s\"),\n  data=ALL, trans=tmat3, keep=covs)\n# Again add values of the time-dependent covariates in ALL4\nALL4$A &lt;- ALL4$recA &lt;- 0\nALL4$A[ALL4$from %in% c(2,3)] &lt;- 1\nALL4$recA[ALL4$from==2] &lt;- 1\nALL4s &lt;- ALL4[ALL4$to==4,]\n\nc3 &lt;- coxph(\n  Surv(Tstart,Tstop,status) ~ match + proph + year + agecl + A + recA,\n  data = ALL4s, method=\"breslow\")\nc3\n\n###############################################################################\n###############################################################################\n### Figure 9.8: Cumulative baseline hazards for AGVHD, platelet recovery,\n### and for relapse and/or death\n###############################################################################\n###############################################################################\n\n### We have saved c1, c1Rel, c1Death, c2, c3, Cox models for RFS,\n### Relapse, Death, AE, and Rec, respectively\n### First fix a patient with reference values for the covariates\n### and 0 for all the time-dependent covariates; this will give the\n### baseline hazards\nndata &lt;- data.frame(match=1, proph=1, year=1, agecl=1, R=0, recR=0, A=0, recA=0)\nndata$match &lt;- factor(ndata$match, levels=1:2, labels=levels(ALL$match))\nndata$proph &lt;- factor(ndata$proph, levels=1:2, labels=levels(ALL$proph))\nndata$year &lt;- factor(ndata$year, levels=1:3, labels=levels(ALL$year))\nndata$agecl &lt;- factor(ndata$agecl, levels=1:3, labels=levels(ALL$agecl))\nndata\nsf1Rel &lt;- survfit(c1Rel, newdata=ndata, censor=FALSE)\nsf1Rel &lt;- data.frame(time=sf1Rel$time,surv=sf1Rel$surv,Haz=-log(sf1Rel$surv))\nsf1Death &lt;- survfit(c1Death, newdata=ndata, censor=FALSE)\nsf1Death &lt;- data.frame(time=sf1Death$time,surv=sf1Death$surv,\n  Haz=-log(sf1Death$surv))\nsf1 &lt;- survfit(c1, newdata=ndata, censor=FALSE)\nsf1 &lt;- data.frame(time=sf1$time,surv=sf1$surv,Haz=-log(sf1$surv))\nsf2 &lt;- survfit(c2, newdata=ndata, censor=FALSE)\nsf2 &lt;- data.frame(time=sf2$time,surv=sf2$surv,Haz=-log(sf2$surv))\n# extend sf2 a little bit\nn2 &lt;- nrow(sf2)\nsf2 &lt;- rbind(sf2,data.frame(time=500,surv=sf2$surv[n2],Haz=sf2$Haz[n2]))\nsf3 &lt;- survfit(c3, newdata=ndata, censor=FALSE)\nsf3 &lt;- data.frame(time=sf3$time,surv=sf3$surv,Haz=-log(sf3$surv))\n\n## Plot baseline cumulative hazards\n\nmaxHaz &lt;- max(c(sf1$Haz,sf2$Haz,sf3$Haz))\n\nplot(sf1$time/365.25,sf1$Haz,type=\"s\",lwd=2,\n  ylim=c(0,maxHaz),\n  xlab=\"Years since transplantation\",ylab=\"Cumulative hazard\")\nlines(sf1Rel$time/365.25,sf1Rel$Haz,type=\"s\",lwd=2,lty=2)\nlines(sf1Death$time/365.25,sf1Death$Haz,type=\"s\",lwd=2,lty=3)\nlines(sf2$time/365.25,sf2$Haz,type=\"s\",lwd=2,lty=4)\nlines(sf3$time/365.25,sf3$Haz,type=\"s\",lwd=2,lty=5)\nlegend(\"topright\",\n  c(\"Relapse or death\",\"Relapse\",\"Death\"),\n  lwd=2,lty=1:3,bty=\"n\")\nlegend(2,0.68,\n  c(\"AGvHD\",\"Platelet recovery\"),\n  lwd=2,lty=4:5,bty=\"n\")\n\n###################################################\n### Prediction by landmarking\n###################################################\n\nALL$time &lt;- pmin(ALL$rel,ALL$srv)\nALL$status &lt;- 0\nALL$status[((ALL$rel&lt;=ALL$srv) & (ALL$rel.s==1))] &lt;- 1\nALL$status[((ALL$srv&lt;=ALL$rel) & (ALL$srv.s==1))] &lt;- 2\ntable(ALL$rel.s,ALL$srv.s,ALL$status)\ntable(ALL$status)\n\nw &lt;- 5*year\ncovs &lt;- c(\"year\",\"agecl\",\"proph\",\"match\")\n\n### Construct landmark data\nLMs &lt;- seq(0,year,length=101)\nLMdata &lt;- NULL\nfor (i in seq(along=LMs)) {\n    LM &lt;- LMs[i]\n    ALLi &lt;- ALL[ALL$time&gt;LM,]\n    R &lt;- as.numeric(ALLi$rec&lt;=LM)\n    A &lt;- as.numeric(ALLi$ae&lt;=LM)\n    recR &lt;- as.numeric(ALLi$rec&lt;=LM & ALLi$rec&gt;LM-month)\n    recA &lt;- as.numeric(ALLi$ae&lt;=LM & ALLi$ae&lt;=LM-month)\n    ALLi$status[ALLi$time&gt;LM+w] &lt;- 0\n    ALLi$time[ALLi$time&gt;LM+w] &lt;- LM+w\n    ALLicovs &lt;- ALLi[,match(covs,names(ALLi))]\n    dfri &lt;- data.frame(id=ALLi$id,time=ALLi$time,status=ALLi$status,\n      LM=LM,R=R,recR=recR,A=A,recA=recA)\n    dfri &lt;- cbind(dfri,ALLicovs)\n    LMdata &lt;- rbind(LMdata,dfri)\n}\n\n# Summaries\ndim(LMdata)\ntable(table(LMdata$id))\n\n###############################################################################\n###############################################################################\n### Table 9.3: Landmark supermodel with proportional baseline hazards\n### for death and/or relapse, based on an equally spaced set of landmark\n### time-points from 0 to 1 with distance 0.01 and window width w = 5 years\n###############################################################################\n###############################################################################\n\n# For theta(s)\ng1 &lt;- function(t) t\ng2 &lt;- function(t) t^2\nLMdata$LM1 &lt;- g1(LMdata$LM/year)\nLMdata$LM2 &lt;- g2(LMdata$LM/year)\n\n### Landmark supermodels\n## First stratified (these are NOT included in the book)\n# Relapse\nLMcox1 &lt;- coxph(Surv(time,status==1) ~ match + proph + year + agecl +\n    A + recA + R + recR + strata(LM) + cluster(id), data=LMdata)\nLMcox1\n# Death before relapse\nLMcox2 &lt;- coxph(Surv(time,status==2) ~ match + proph + year + agecl +\n    A + recA + R + recR + strata(LM) + cluster(id), data=LMdata)\nLMcox2\n# RFS\nLMcox0 &lt;- coxph(Surv(time,status&gt;0) ~ match + proph + year + agecl +\n    A + recA + R + recR + strata(LM) + cluster(id), data=LMdata)\nLMcox0\n\n### Same thing, now with proportional baselines (ipl*)\n## Take three coffee breaks; this takes a while, because of the large stacked\n## landmark data set\n# Relapse\nLMcox1 &lt;- coxph(Surv(time,status==1) ~ match + proph + year + agecl +\n  A + recA + R + recR + LM1 + LM2 + cluster(id),\n  data=LMdata)\nLMcox1\n# Death before relapse\nLMcox2 &lt;- coxph(Surv(time,status==2) ~ match + proph + year + agecl +\n  A + recA + R + recR + LM1 + LM2 + cluster(id),\n  data=LMdata)\nLMcox2\n# RFS\nLMcox0 &lt;- coxph(Surv(time,status&gt;0) ~ match + proph + year + agecl +\n  A + recA + R + recR + LM1 + LM2 + cluster(id),\n  data=LMdata)\nLMcox0\n\n###############################################################################\n###############################################################################\n### Figure 9.9: Baseline hazard and landmark effects in the proportional\n### baselines landmark supermodel of Table 9.3\n###############################################################################\n###############################################################################\n\n# Baseline hazards (plot as in chapters 7 and 8)\nndata &lt;- data.frame(match=1, proph=1, year=1, agecl=1, R=0, recR=0, A=0, recA=0,\n  LM1=0, LM2=0)\nndata$match &lt;- factor(ndata$match, levels=1:2, labels=levels(ALL$match))\nndata$proph &lt;- factor(ndata$proph, levels=1:2, labels=levels(ALL$proph))\nndata$year &lt;- factor(ndata$year, levels=1:3, labels=levels(ALL$year))\nndata$agecl &lt;- factor(ndata$agecl, levels=1:3, labels=levels(ALL$agecl))\nndata\nsf20 &lt;- survfit(LMcox0, newdata=ndata, censor=FALSE)\nHaz20 &lt;- data.frame(time=sf20$time,surv=sf20$surv)\nHaz20$Haz &lt;- -log(Haz20$surv)\nsf20Rel &lt;- survfit(LMcox1, newdata=ndata, censor=FALSE)\nHaz20Rel &lt;- data.frame(time=sf20Rel$time,surv=sf20Rel$surv)\nHaz20Rel$Haz &lt;- -log(Haz20Rel$surv)\nsf20Death &lt;- survfit(LMcox2, newdata=ndata, censor=FALSE)\nHaz20Death &lt;- data.frame(time=sf20Death$time,surv=sf20Death$surv)\nHaz20Death$Haz &lt;- -log(Haz20Death$surv)\n\noldpar &lt;- par(no.readonly=TRUE) # save graphical parameters\npar(mfrow=c(1,2))\npar(mar=c(5,4,4,1.6)+0.1)\nplot(Haz20$time/year, Haz20$Haz, type=\"s\", lwd=2,\n  xlab=\"Time (years)\", ylab=\"Cumulative hazard\")\nlines(Haz20Rel$time/year, Haz20Rel$Haz, type=\"s\", lwd=2, lty=2)\nlines(Haz20Death$time/year, Haz20Death$Haz, type=\"s\", lwd=2, lty=3)\nlegend(\"topleft\",c(\"RFS\",\"Relapse\",\"Death\"),lwd=2,lty=1:3,bty=\"n\")\npar(mar=c(5,3.6,4,2)+0.1)\nplot(LMs/year, exp(LMcox0$coef[11]*g1(LMs/year) + LMcox0$coef[12]*g2(LMs/year)),\n  type=\"l\", lwd=2, ylim=c(0,1), xlab=\"Landmark (s)\", ylab=\"exp(theta(s))\")\nlines(LMs/year, exp(LMcox1$coef[11]*g1(LMs/year) + LMcox1$coef[12]*g2(LMs/year)),\n  type=\"l\", lwd=2, lty=2)\nlines(LMs/year, exp(LMcox2$coef[11]*g1(LMs/year) + LMcox2$coef[12]*g2(LMs/year)),\n  type=\"l\", lwd=2, lty=3)\nlegend(\"topright\",c(\"RFS\",\"Relapse\",\"Death\"),lwd=2,lty=1:3,bty=\"n\")\npar(oldpar) # reset graphical parameters\n\n###############################################################################\n###############################################################################\n### Figure 9.10 Landmark dynamic fixed width (w = 5) prediction probabilities\n### of relapse or death for all combinations of AGvHD and PR information\n###############################################################################\n###############################################################################\n\nw &lt;- 5*year\ntt &lt;- seq(0,year,length=101)\nnt &lt;- length(tt)\n\nFwpredict &lt;- function(bet, Haz, w, tt)\n{\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[11]*g1(tt[i]/year) + bet[12]*g2(tt[i]/year))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\n# &lt; 20\nHaz &lt;- Haz20\nHazrecP &lt;- HazP &lt;- Haz\nHazrecP$Haz &lt;- HazrecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazP$Haz &lt;- HazP$Haz*exp(LMcox0$coef[9])\nHazrecA &lt;- Haz\nHazrecA$Haz &lt;- HazrecA$Haz*exp(LMcox0$coef[7]+LMcox0$coef[8])\nHazrecArecP &lt;- HazrecAP &lt;- HazrecA\nHazrecArecP$Haz &lt;- HazrecArecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazrecAP$Haz &lt;- HazrecAP$Haz*exp(LMcox0$coef[9])\nHazA &lt;- Haz\nHazA$Haz &lt;- HazA$Haz*exp(LMcox0$coef[7])\nHazArecP &lt;- HazAP &lt;- HazrecA\nHazArecP$Haz &lt;- HazArecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazAP$Haz &lt;- HazAP$Haz*exp(LMcox0$coef[9])\nFw20 &lt;- Fwpredict(LMcox0$coef, Haz, w, tt)\nFw20recP &lt;- Fwpredict(LMcox0$coef, HazrecP, w, tt)\nFw20P &lt;- Fwpredict(LMcox0$coef, HazP, w, tt)\nFw20recA &lt;- Fwpredict(LMcox0$coef, HazrecA, w, tt)\nFw20recArecP &lt;- Fwpredict(LMcox0$coef, HazrecArecP, w, tt)\nFw20recAP &lt;- Fwpredict(LMcox0$coef, HazrecAP, w, tt)\nFw20A &lt;- Fwpredict(LMcox0$coef, HazA, w, tt)\nFw20ArecP &lt;- Fwpredict(LMcox0$coef, HazArecP, w, tt)\nFw20AP &lt;- Fwpredict(LMcox0$coef, HazAP, w, tt)\n# 20-40\nHaz &lt;- Haz20\nHaz$Haz &lt;- Haz$Haz*exp(LMcox0$coef[5])\nHazrecP &lt;- HazP &lt;- Haz\nHazrecP$Haz &lt;- HazrecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazP$Haz &lt;- HazP$Haz*exp(LMcox0$coef[9])\nHazrecA &lt;- Haz\nHazrecA$Haz &lt;- HazrecA$Haz*exp(LMcox0$coef[7]+LMcox0$coef[8])\nHazrecArecP &lt;- HazrecAP &lt;- HazrecA\nHazrecArecP$Haz &lt;- HazrecArecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazrecAP$Haz &lt;- HazrecAP$Haz*exp(LMcox0$coef[9])\nHazA &lt;- Haz\nHazA$Haz &lt;- HazA$Haz*exp(LMcox0$coef[7])\nHazArecP &lt;- HazAP &lt;- HazrecA\nHazArecP$Haz &lt;- HazArecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazAP$Haz &lt;- HazAP$Haz*exp(LMcox0$coef[9])\nFw2040 &lt;- Fwpredict(LMcox0$coef, Haz, w, tt)\nFw2040recP &lt;- Fwpredict(LMcox0$coef, HazrecP, w, tt)\nFw2040P &lt;- Fwpredict(LMcox0$coef, HazP, w, tt)\nFw2040recA &lt;- Fwpredict(LMcox0$coef, HazrecA, w, tt)\nFw2040recArecP &lt;- Fwpredict(LMcox0$coef, HazrecArecP, w, tt)\nFw2040recAP &lt;- Fwpredict(LMcox0$coef, HazrecAP, w, tt)\nFw2040A &lt;- Fwpredict(LMcox0$coef, HazA, w, tt)\nFw2040ArecP &lt;- Fwpredict(LMcox0$coef, HazArecP, w, tt)\nFw2040AP &lt;- Fwpredict(LMcox0$coef, HazAP, w, tt)\n# &gt;40\nHaz &lt;- Haz20\nHaz$Haz &lt;- Haz$Haz*exp(LMcox0$coef[6])\nHazrecP &lt;- HazP &lt;- Haz\nHazrecP$Haz &lt;- HazrecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazP$Haz &lt;- HazP$Haz*exp(LMcox0$coef[9])\nHazrecA &lt;- Haz\nHazrecA$Haz &lt;- HazrecA$Haz*exp(LMcox0$coef[7]+LMcox0$coef[8])\nHazrecArecP &lt;- HazrecAP &lt;- HazrecA\nHazrecArecP$Haz &lt;- HazrecArecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazrecAP$Haz &lt;- HazrecAP$Haz*exp(LMcox0$coef[9])\nHazA &lt;- Haz\nHazA$Haz &lt;- HazA$Haz*exp(LMcox0$coef[7])\nHazArecP &lt;- HazAP &lt;- HazrecA\nHazArecP$Haz &lt;- HazArecP$Haz*exp(LMcox0$coef[9]+LMcox0$coef[10])\nHazAP$Haz &lt;- HazAP$Haz*exp(LMcox0$coef[9])\nFw40 &lt;- Fwpredict(LMcox0$coef, Haz, w, tt)\nFw40recP &lt;- Fwpredict(LMcox0$coef, HazrecP, w, tt)\nFw40P &lt;- Fwpredict(LMcox0$coef, HazP, w, tt)\nFw40recA &lt;- Fwpredict(LMcox0$coef, HazrecA, w, tt)\nFw40recArecP &lt;- Fwpredict(LMcox0$coef, HazrecArecP, w, tt)\nFw40recAP &lt;- Fwpredict(LMcox0$coef, HazrecAP, w, tt)\nFw40A &lt;- Fwpredict(LMcox0$coef, HazA, w, tt)\nFw40ArecP &lt;- Fwpredict(LMcox0$coef, HazArecP, w, tt)\nFw40AP &lt;- Fwpredict(LMcox0$coef, HazAP, w, tt)\n\n# Prepare everything in single data set, to make nice (trellis) picture\nFwall &lt;- rbind(Fw20,Fw2040,Fw40,Fw20recP,Fw2040recP,Fw40recP,Fw20P,Fw2040P,Fw40P,\n  Fw20recA,Fw2040recA,Fw40recA,Fw20recArecP,Fw2040recArecP,Fw40recArecP,Fw20recAP,Fw2040recAP,Fw40recAP,\n  Fw20A,Fw2040A,Fw40A,Fw20ArecP,Fw2040ArecP,Fw40ArecP,Fw20AP,Fw2040AP,Fw40AP)\nFwall$time &lt;- Fwall$time/year\nFwall$age &lt;- rep(rep(1:3,rep(101,3)),9)\nFwall$A &lt;- rep(1:3,rep(101*9,3))\nFwall$P &lt;- rep(rep(1:3,rep(101*3,3)),3)\nFwall$AP &lt;- 3*(4-Fwall$A) + Fwall$P\nFwall$AP &lt;- factor(Fwall$AP,\n  labels=c(\"Past AGvHD, no PR\",\"Past AGvHD, recent PR\",\"Past AGvHD, past PR\",\n    \"Recent AGvHD, no PR\",\"Recent AGvHD, recent PR\",\"Recent AGvHD, past PR\",\n    \"No AGvHD, no PR\",\"No AGvHD, recent PR\",\"No AGvHD, past PR\"))\nFwall$age &lt;- factor(Fwall$age,labels=c(\"Age &lt;= 20\",\"Age 20-40\",\"Age &gt; 40\"))\n\nrequire(lattice)\nkey.age &lt;- list(text = list(levels(Fwall$age)),\n    lines = list(lwd = 2, lty = 1:3, col = \"black\"))\nxyplot(Fw ~ time | AP, data=Fwall, groups=age, ylim=c(0,1), lwd=2, type=\"l\", col=1, lty=1:3,\n  xlab=\"Prediction time (years)\",ylab=\"Probability of relapse or death\", key=key.age)\n\n###############################################################################\n###############################################################################\n### Figure 9.11: Landmark dynamic fixed width (w = 5) prediction probabilities\n### of relapse or death for a patient as intermediate clinical events occur\n###############################################################################\n###############################################################################\n\n# Example: patient $&gt;40$ years old; with platelet recovery after 30 days, AGvHD after 80 days\nplot(Fw40$time[1:9]/year,Fw40$Fw[1:9],type=\"l\",lwd=2,xlim=c(0,1),ylim=c(0,1),\n    xlab=\"Prediction time (years)\", ylab=\"Probability of relapse/death within 5 years\")\nlines(rep(Fw40$time[9]/year,2),c(Fw40$Fw[9],Fw40recP$Fw[9]),lty=2)\nlines(Fw40recP$time[9:17]/year,Fw40recP$Fw[9:17],type=\"l\",lwd=2)\nlines(rep(Fw40recP$time[17]/year,2),c(Fw40recP$Fw[17],Fw40P$Fw[17]),lty=2)\nlines(Fw40P$time[17:22]/year,Fw40P$Fw[17:22],type=\"l\",lwd=2)\nlines(rep(Fw40P$time[22]/year,2),c(Fw40P$Fw[22],Fw40recAP$Fw[22]),lty=2)\nlines(Fw40recAP$time[22:31]/year,Fw40recAP$Fw[22:31],type=\"l\",lwd=2)\nlines(rep(Fw40recAP$time[31]/year,2),c(Fw40recAP$Fw[31],Fw40AP$Fw[31]),lty=2)\nlines(Fw40AP$time[31:101]/year,Fw40AP$Fw[31:101],type=\"l\",lwd=2)\n\n### Simulation-based \"calculation\" of transition probabilities\n###\n### This is similar to mssample in mstate, but we cannot use that,\n### because of the distinction between recent-intermediate event\n### and intermediate event; functions are defined in\n### \"sample function definitions.r\", which needs to be placed in the\n### working directory.\n\nsource(\"sample function definitions.r\")\n\n### The code is given below, but the actual sampling command\n### (Events &lt;- Msample(sfM,M,tcond=0,c1,c2,c3)) is commented out.\n### The main reason for this is that it takes a very long time.\n### Unfortunately, I forgot to set a random seed when I started\n### the simulations for the book, so exact reproduction is impossible,\n### I'm afraid. The results of the original simulations were saved in\n### text files \"events20.txt\", \"events2040.txt\", and \"events40.txt\".\n### These are read in and used in the sequel. They also need to be\n### placed in the working directory.\n\n### Age &lt;= 20\nndata &lt;- data.frame(match=1, proph=1, year=1, agecl=1, R=0, recR=0, A=0, recA=0)\nndata$match &lt;- factor(ndata$match, levels=1:2, labels=levels(ALL$match))\nndata$proph &lt;- factor(ndata$proph, levels=1:2, labels=levels(ALL$proph))\nndata$year &lt;- factor(ndata$year, levels=1:3, labels=levels(ALL$year))\nndata$agecl &lt;- factor(ndata$agecl, levels=1:3, labels=levels(ALL$agecl))\nndata\nsf1 &lt;- survfit(c1, newdata=ndata, censor=FALSE)\nsf1 &lt;- data.frame(time=sf1$time,surv=sf1$surv,Haz=-log(sf1$surv))\nsf2 &lt;- survfit(c2, newdata=ndata, censor=FALSE)\nsf2 &lt;- data.frame(time=sf2$time,surv=sf2$surv,Haz=-log(sf2$surv))\nsf3 &lt;- survfit(c3, newdata=ndata, censor=FALSE)\nsf3 &lt;- data.frame(time=sf3$time,surv=sf3$surv,Haz=-log(sf3$surv))\n\n# Combine sf's into one\nsf1$trans &lt;- 1; sf2$trans &lt;- 2; sf3$trans &lt;- 3\nsfM &lt;- rbind(sf1,sf2,sf3)\n\n# M &lt;- 100000\n# Events &lt;- Msample(sfM,M,tcond=0,c1,c2,c3) # will not exactly reproduce book results\n# write.table(Events,\"events20.txt\",sep=\"\\t\",append=TRUE,row.names=FALSE,col.names=FALSE)\n\n### Age 20-40\nndata &lt;- data.frame(match=1, proph=1, year=1, agecl=2, R=0, recR=0, A=0, recA=0)\nndata$match &lt;- factor(ndata$match, levels=1:2, labels=levels(ALL$match))\nndata$proph &lt;- factor(ndata$proph, levels=1:2, labels=levels(ALL$proph))\nndata$year &lt;- factor(ndata$year, levels=1:3, labels=levels(ALL$year))\nndata$agecl &lt;- factor(ndata$agecl, levels=1:3, labels=levels(ALL$agecl))\nndata\nsf1 &lt;- survfit(c1, newdata=ndata, censor=FALSE)\nsf1 &lt;- data.frame(time=sf1$time,surv=sf1$surv,Haz=-log(sf1$surv))\nsf2 &lt;- survfit(c2, newdata=ndata, censor=FALSE)\nsf2 &lt;- data.frame(time=sf2$time,surv=sf2$surv,Haz=-log(sf2$surv))\nsf3 &lt;- survfit(c3, newdata=ndata, censor=FALSE)\nsf3 &lt;- data.frame(time=sf3$time,surv=sf3$surv,Haz=-log(sf3$surv))\n\n# Combine sf's into \nsf1$trans &lt;- 1; sf2$trans &lt;- 2; sf3$trans &lt;- 3\nsfM &lt;- rbind(sf1,sf2,sf3)\n\n# M &lt;- 100000\n# Events &lt;- Msample(sfM,M,tcond=0,c1,c2,c3) # will not exactly reproduce book results\n# write.table(Events,\"events2040.txt\",sep=\"\\t\",append=TRUE,row.names=FALSE,col.names=FALSE)\n\n### Age &gt; 40\nndata &lt;- data.frame(match=1, proph=1, year=1, agecl=3, R=0, recR=0, A=0, recA=0)\nndata$match &lt;- factor(ndata$match, levels=1:2, labels=levels(ALL$match))\nndata$proph &lt;- factor(ndata$proph, levels=1:2, labels=levels(ALL$proph))\nndata$year &lt;- factor(ndata$year, levels=1:3, labels=levels(ALL$year))\nndata$agecl &lt;- factor(ndata$agecl, levels=1:3, labels=levels(ALL$agecl))\nndata\nsf1 &lt;- survfit(c1, newdata=ndata, censor=FALSE)\nsf1 &lt;- data.frame(time=sf1$time,surv=sf1$surv,Haz=-log(sf1$surv))\nsf2 &lt;- survfit(c2, newdata=ndata, censor=FALSE)\nsf2 &lt;- data.frame(time=sf2$time,surv=sf2$surv,Haz=-log(sf2$surv))\nsf3 &lt;- survfit(c3, newdata=ndata, censor=FALSE)\nsf3 &lt;- data.frame(time=sf3$time,surv=sf3$surv,Haz=-log(sf3$surv))\n\n# Combine sf's into \nsf1$trans &lt;- 1; sf2$trans &lt;- 2; sf3$trans &lt;- 3\nsfM &lt;- rbind(sf1,sf2,sf3)\n\nM &lt;- 100000\n# Events &lt;- Msample(sfM,M,tcond=0,c1,c2,c3) # will not exactly reproduce book results\n# write.table(Events,\"events40.txt\",sep=\"\\t\",append=TRUE,row.names=FALSE,col.names=FALSE)\n\n### Read in the results of the simulation\nEv20 &lt;- read.table(\"events20.txt\",sep=\"\\t\")\nEv2040 &lt;- read.table(\"events2040.txt\",sep=\"\\t\")\nEv40 &lt;- read.table(\"events40.txt\",sep=\"\\t\")\n\nEv &lt;- Ev20\nr20 &lt;- matrix(NA,909,5)\nr20[,5] &lt;- 1\nsseq &lt;- seq(0,year,length=101)\nnseq &lt;- length(sseq)\n# This is to monitor progress\nm &lt;- floor(log10(nseq)) + 1\npre &lt;- rep(\"\\b\", 2 * m + 1)\nfor (i in 1:length(sseq)) {\n  cat(pre, i, \"/\", nseq, sep = \"\"); flush.console()\n  s &lt;- sseq[i]\n# deb(s, method=\"cat\")\n  wh &lt;- which(Ev[,1]&gt;s)\n  whrecP &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,2]==3 & Ev[,3]&gt;s)\n  whP &lt;- which(Ev[,1]&lt;=s-month & Ev[,2]==3 & Ev[,3]&gt;s)\n  whrecA &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,2]==2 & Ev[,3]&gt;s)\n  whrecArecP &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,3]&lt;=s & Ev[,3]&gt;s-month &\n    Ev[,2]&gt;1 & Ev[,4]&gt;1 & Ev[,5]&gt;s)\n  whrecAP &lt;- which(Ev[,3]&lt;=s & Ev[,3]&gt;s-month & Ev[,1]&lt;=s-month &\n    Ev[,2]==3 & Ev[,4]==2 & Ev[,5]&gt;s)\n  whA &lt;- which(Ev[,1]&lt;=s-month & Ev[,2]==2 & Ev[,3]&gt;s)\n  whArecP &lt;- which(Ev[,3]&lt;=s & Ev[,3]&gt;s-month & Ev[,1]&lt;=s-month &\n    Ev[,2]==2 & Ev[,4]==3 & Ev[,5]&gt;s)\n  whAP &lt;- which(Ev[,1]&lt;=s-month & Ev[,3]&lt;=s-month &\n    Ev[,2]&gt;1 & Ev[,4]&gt;1 & Ev[,5]&gt;s)\n  whout &lt;- which((Ev[,1]&lt;=s & Ev[,2]==1) | (Ev[,3]&lt;=s & Ev[,4]==1) | (Ev[,5]&lt;=s & Ev[,6]==1))\n  \n  Ev[,7] &lt;- NA\n  if (length(wh)&gt;0) Ev[wh,7] &lt;- 1\n  if (length(whrecP)&gt;0) Ev[whrecP,7] &lt;- 2\n  if (length(whP)&gt;0) Ev[whP,7] &lt;- 3\n  if (length(whrecA)&gt;0) Ev[whrecA,7] &lt;- 4\n  if (length(whrecArecP)&gt;0) Ev[whrecArecP,7] &lt;- 5\n  if (length(whrecAP)&gt;0) Ev[whrecAP,7] &lt;- 6\n  if (length(whA)&gt;0) Ev[whA,7] &lt;- 7\n  if (length(whArecP)&gt;0) Ev[whArecP,7] &lt;- 8\n  if (length(whAP)&gt;0) Ev[whAP,7] &lt;- 9\n  if (length(whout)&gt;0) Ev[whout,7] &lt;- 0\n# deb(table(Ev[,7],exclude=NULL))\n  r20[(i-1)*9+1,4] &lt;- length(wh)/M\n  r20[(i-1)*9+2,4] &lt;- length(whrecP)/M\n  r20[(i-1)*9+3,4] &lt;- length(whP)/M\n  r20[(i-1)*9+4,4] &lt;- length(whrecA)/M\n  r20[(i-1)*9+5,4] &lt;- length(whrecArecP)/M\n  r20[(i-1)*9+6,4] &lt;- length(whrecAP)/M\n  r20[(i-1)*9+7,4] &lt;- length(whA)/M\n  r20[(i-1)*9+8,4] &lt;- length(whArecP)/M\n  r20[(i-1)*9+9,4] &lt;- length(whAP)/M\n  \n  Fwv &lt;- rep(NA,9)\n  if (length(wh)&gt;0) Fwv[1] &lt;- extractRFS(as.matrix(Ev[wh,1:6]),5*year+s)\n  if (length(whrecP)&gt;0) Fwv[2] &lt;- extractRFS(as.matrix(Ev[whrecP,1:6]),5*year+s)\n  if (length(whP)&gt;0) Fwv[3] &lt;- extractRFS(as.matrix(Ev[whP,1:6]),5*year+s)\n  if (length(whrecA)&gt;0) Fwv[4] &lt;- extractRFS(as.matrix(Ev[whrecA,1:6]),5*year+s)\n  if (length(whrecArecP)&gt;0) Fwv[5] &lt;- extractRFS(as.matrix(Ev[whrecArecP,1:6]),5*year+s)\n  if (length(whrecAP)&gt;0) Fwv[6] &lt;- extractRFS(as.matrix(Ev[whrecAP,1:6]),5*year+s)\n  if (length(whA)&gt;0) Fwv[7] &lt;- extractRFS(as.matrix(Ev[whA,1:6]),5*year+s)\n  if (length(whArecP)&gt;0) Fwv[8] &lt;- extractRFS(as.matrix(Ev[whArecP,1:6]),5*year+s)\n  if (length(whAP)&gt;0) Fwv[9] &lt;- extractRFS(as.matrix(Ev[whAP,1:6]),5*year+s)\n# deb(Fwv)\n  r20[(i-1)*9+(1:9),1] &lt;- s\n  r20[(i-1)*9+(1:9),2] &lt;- 1:9\n  r20[(i-1)*9+(1:9),3] &lt;- Fwv\n}\n\nEv &lt;- Ev2040\nr2040 &lt;- matrix(NA,909,5)\nr2040[,5] &lt;- 2\nsseq &lt;- seq(0,year,length=101)\nnseq &lt;- length(sseq)\n# This is to monitor progress\nm &lt;- floor(log10(nseq)) + 1\npre &lt;- rep(\"\\b\", 2 * m + 1)\nfor (i in 1:length(sseq)) {\n  cat(pre, i, \"/\", nseq, sep = \"\"); flush.console()\n  s &lt;- sseq[i]\n# deb(s, method=\"cat\")\n  wh &lt;- which(Ev[,1]&gt;s)\n  whrecP &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,2]==3 & Ev[,3]&gt;s)\n  whP &lt;- which(Ev[,1]&lt;=s-month & Ev[,2]==3 & Ev[,3]&gt;s)\n  whrecA &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,2]==2 & Ev[,3]&gt;s)\n  whrecArecP &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,3]&lt;=s & Ev[,3]&gt;s-month &\n    Ev[,2]&gt;1 & Ev[,4]&gt;1 & Ev[,5]&gt;s)\n  whrecAP &lt;- which(Ev[,3]&lt;=s & Ev[,3]&gt;s-month & Ev[,1]&lt;=s-month &\n    Ev[,2]==3 & Ev[,4]==2 & Ev[,5]&gt;s)\n  whA &lt;- which(Ev[,1]&lt;=s-month & Ev[,2]==2 & Ev[,3]&gt;s)\n  whArecP &lt;- which(Ev[,3]&lt;=s & Ev[,3]&gt;s-month & Ev[,1]&lt;=s-month &\n    Ev[,2]==2 & Ev[,4]==3 & Ev[,5]&gt;s)\n  whAP &lt;- which(Ev[,1]&lt;=s-month & Ev[,3]&lt;=s-month &\n    Ev[,2]&gt;1 & Ev[,4]&gt;1 & Ev[,5]&gt;s)\n  whout &lt;- which((Ev[,1]&lt;=s & Ev[,2]==1) | (Ev[,3]&lt;=s & Ev[,4]==1) | (Ev[,5]&lt;=s & Ev[,6]==1))\n  \n  Ev[,7] &lt;- NA\n  if (length(wh)&gt;0) Ev[wh,7] &lt;- 1\n  if (length(whrecP)&gt;0) Ev[whrecP,7] &lt;- 2\n  if (length(whP)&gt;0) Ev[whP,7] &lt;- 3\n  if (length(whrecA)&gt;0) Ev[whrecA,7] &lt;- 4\n  if (length(whrecArecP)&gt;0) Ev[whrecArecP,7] &lt;- 5\n  if (length(whrecAP)&gt;0) Ev[whrecAP,7] &lt;- 6\n  if (length(whA)&gt;0) Ev[whA,7] &lt;- 7\n  if (length(whArecP)&gt;0) Ev[whArecP,7] &lt;- 8\n  if (length(whAP)&gt;0) Ev[whAP,7] &lt;- 9\n  if (length(whout)&gt;0) Ev[whout,7] &lt;- 0\n# deb(table(Ev[,7],exclude=NULL))\n  r2040[(i-1)*9+1,4] &lt;- length(wh)/M\n  r2040[(i-1)*9+2,4] &lt;- length(whrecP)/M\n  r2040[(i-1)*9+3,4] &lt;- length(whP)/M\n  r2040[(i-1)*9+4,4] &lt;- length(whrecA)/M\n  r2040[(i-1)*9+5,4] &lt;- length(whrecArecP)/M\n  r2040[(i-1)*9+6,4] &lt;- length(whrecAP)/M\n  r2040[(i-1)*9+7,4] &lt;- length(whA)/M\n  r2040[(i-1)*9+8,4] &lt;- length(whArecP)/M\n  r2040[(i-1)*9+9,4] &lt;- length(whAP)/M\n  \n  Fwv &lt;- rep(NA,9)\n  if (length(wh)&gt;0) Fwv[1] &lt;- extractRFS(as.matrix(Ev[wh,1:6]),5*year+s)\n  if (length(whrecP)&gt;0) Fwv[2] &lt;- extractRFS(as.matrix(Ev[whrecP,1:6]),5*year+s)\n  if (length(whP)&gt;0) Fwv[3] &lt;- extractRFS(as.matrix(Ev[whP,1:6]),5*year+s)\n  if (length(whrecA)&gt;0) Fwv[4] &lt;- extractRFS(as.matrix(Ev[whrecA,1:6]),5*year+s)\n  if (length(whrecArecP)&gt;0) Fwv[5] &lt;- extractRFS(as.matrix(Ev[whrecArecP,1:6]),5*year+s)\n  if (length(whrecAP)&gt;0) Fwv[6] &lt;- extractRFS(as.matrix(Ev[whrecAP,1:6]),5*year+s)\n  if (length(whA)&gt;0) Fwv[7] &lt;- extractRFS(as.matrix(Ev[whA,1:6]),5*year+s)\n  if (length(whArecP)&gt;0) Fwv[8] &lt;- extractRFS(as.matrix(Ev[whArecP,1:6]),5*year+s)\n  if (length(whAP)&gt;0) Fwv[9] &lt;- extractRFS(as.matrix(Ev[whAP,1:6]),5*year+s)\n# deb(Fwv)\n  r2040[(i-1)*9+(1:9),1] &lt;- s\n  r2040[(i-1)*9+(1:9),2] &lt;- 1:9\n  r2040[(i-1)*9+(1:9),3] &lt;- Fwv\n}\n\nEv &lt;- Ev40\nr40 &lt;- matrix(NA,909,5)\nr40[,5] &lt;- 3\nsseq &lt;- seq(0,year,length=101)\nnseq &lt;- length(sseq)\n# This is to monitor progress\nm &lt;- floor(log10(nseq)) + 1\npre &lt;- rep(\"\\b\", 2 * m + 1)\nfor (i in 1:length(sseq)) {\n  cat(pre, i, \"/\", nseq, sep = \"\"); flush.console()\n  s &lt;- sseq[i]\n# deb(s, method=\"cat\")\n  wh &lt;- which(Ev[,1]&gt;s)\n  whrecP &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,2]==3 & Ev[,3]&gt;s)\n  whP &lt;- which(Ev[,1]&lt;=s-month & Ev[,2]==3 & Ev[,3]&gt;s)\n  whrecA &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,2]==2 & Ev[,3]&gt;s)\n  whrecArecP &lt;- which(Ev[,1]&lt;=s & Ev[,1]&gt;s-month & Ev[,3]&lt;=s & Ev[,3]&gt;s-month &\n    Ev[,2]&gt;1 & Ev[,4]&gt;1 & Ev[,5]&gt;s)\n  whrecAP &lt;- which(Ev[,3]&lt;=s & Ev[,3]&gt;s-month & Ev[,1]&lt;=s-month &\n    Ev[,2]==3 & Ev[,4]==2 & Ev[,5]&gt;s)\n  whA &lt;- which(Ev[,1]&lt;=s-month & Ev[,2]==2 & Ev[,3]&gt;s)\n  whArecP &lt;- which(Ev[,3]&lt;=s & Ev[,3]&gt;s-month & Ev[,1]&lt;=s-month &\n    Ev[,2]==2 & Ev[,4]==3 & Ev[,5]&gt;s)\n  whAP &lt;- which(Ev[,1]&lt;=s-month & Ev[,3]&lt;=s-month &\n    Ev[,2]&gt;1 & Ev[,4]&gt;1 & Ev[,5]&gt;s)\n  whout &lt;- which((Ev[,1]&lt;=s & Ev[,2]==1) | (Ev[,3]&lt;=s & Ev[,4]==1) | (Ev[,5]&lt;=s & Ev[,6]==1))\n  \n  Ev[,7] &lt;- NA\n  if (length(wh)&gt;0) Ev[wh,7] &lt;- 1\n  if (length(whrecP)&gt;0) Ev[whrecP,7] &lt;- 2\n  if (length(whP)&gt;0) Ev[whP,7] &lt;- 3\n  if (length(whrecA)&gt;0) Ev[whrecA,7] &lt;- 4\n  if (length(whrecArecP)&gt;0) Ev[whrecArecP,7] &lt;- 5\n  if (length(whrecAP)&gt;0) Ev[whrecAP,7] &lt;- 6\n  if (length(whA)&gt;0) Ev[whA,7] &lt;- 7\n  if (length(whArecP)&gt;0) Ev[whArecP,7] &lt;- 8\n  if (length(whAP)&gt;0) Ev[whAP,7] &lt;- 9\n  if (length(whout)&gt;0) Ev[whout,7] &lt;- 0\n# deb(table(Ev[,7],exclude=NULL))\n  r40[(i-1)*9+1,4] &lt;- length(wh)/M\n  r40[(i-1)*9+2,4] &lt;- length(whrecP)/M\n  r40[(i-1)*9+3,4] &lt;- length(whP)/M\n  r40[(i-1)*9+4,4] &lt;- length(whrecA)/M\n  r40[(i-1)*9+5,4] &lt;- length(whrecArecP)/M\n  r40[(i-1)*9+6,4] &lt;- length(whrecAP)/M\n  r40[(i-1)*9+7,4] &lt;- length(whA)/M\n  r40[(i-1)*9+8,4] &lt;- length(whArecP)/M\n  r40[(i-1)*9+9,4] &lt;- length(whAP)/M\n  \n  Fwv &lt;- rep(NA,9)\n  if (length(wh)&gt;0) Fwv[1] &lt;- extractRFS(as.matrix(Ev[wh,1:6]),5*year+s)\n  if (length(whrecP)&gt;0) Fwv[2] &lt;- extractRFS(as.matrix(Ev[whrecP,1:6]),5*year+s)\n  if (length(whP)&gt;0) Fwv[3] &lt;- extractRFS(as.matrix(Ev[whP,1:6]),5*year+s)\n  if (length(whrecA)&gt;0) Fwv[4] &lt;- extractRFS(as.matrix(Ev[whrecA,1:6]),5*year+s)\n  if (length(whrecArecP)&gt;0) Fwv[5] &lt;- extractRFS(as.matrix(Ev[whrecArecP,1:6]),5*year+s)\n  if (length(whrecAP)&gt;0) Fwv[6] &lt;- extractRFS(as.matrix(Ev[whrecAP,1:6]),5*year+s)\n  if (length(whA)&gt;0) Fwv[7] &lt;- extractRFS(as.matrix(Ev[whA,1:6]),5*year+s)\n  if (length(whArecP)&gt;0) Fwv[8] &lt;- extractRFS(as.matrix(Ev[whArecP,1:6]),5*year+s)\n  if (length(whAP)&gt;0) Fwv[9] &lt;- extractRFS(as.matrix(Ev[whAP,1:6]),5*year+s)\n# deb(Fwv)\n  r40[(i-1)*9+(1:9),1] &lt;- s\n  r40[(i-1)*9+(1:9),2] &lt;- 1:9\n  r40[(i-1)*9+(1:9),3] &lt;- Fwv\n}\n\nr &lt;- rbind(r20,r2040,r40)\nr &lt;- as.data.frame(r)\nnames(r) &lt;- c(\"time\",\"group\",\"Fw\",\"freq\",\"age\")\n# This is to manipulate awkward plotting order of lattice plots\nr$A &lt;- 1\nr$A[r$group&gt;3] &lt;- 2\nr$A[r$group&gt;6] &lt;- 3\nr$P &lt;- 1\nr$P[r$group %in% c(2,5,8)] &lt;- 2\nr$P[r$group %in% c(3,6,9)] &lt;- 3\nr$AP &lt;- 3*(4-r$A) + r$P\nr$AP &lt;- factor(r$AP,\n  labels=c(\"Past AGvHD, no PR\",\"Past AGvHD, recent PR\",\"Past AGvHD, past PR\",\n    \"Recent AGvHD, no PR\",\"Recent AGvHD, recent PR\",\"Recent AGvHD, past PR\",\n    \"No AGvHD, no PR\",\"No AGvHD, recent PR\",\"No AGvHD, past PR\"))\nr$age &lt;- factor(r$age,labels=c(\"Age &lt;= 20\",\"Age 20-40\",\"Age &gt; 40\"))\nr$time &lt;- r$time/year\n\nrequire(lattice)\nkey.age &lt;- list(text = list(levels(r$age)),\n    lines = list(lwd = 2, lty = 1:3, col = \"black\"))\nxyplot(Fw ~ time | AP, data=r, groups=age, ylim=c(0,1), lwd=2, type=\"l\", col=1, lty=1:3,\n  xlab=\"Prediction time (years)\",ylab=\"Probability of relapse or death\", key=key.age)\n\nkey.age &lt;- list(text = list(levels(r$age)),\n    lines = list(lwd = 2, lty = 1:3, col = \"black\"))\nxyplot(freq ~ time | AP, data=r, groups=age, ylim=c(0,1), lwd=2, type=\"l\", col=1, lty=1:3,\n  xlab=\"Prediction time (years)\",ylab=\"Probability of relapse or death\", key=key.age)"
  },
  {
    "objectID": "chapters/chapter_10.html",
    "href": "chapters/chapter_10.html",
    "title": "10  Dynamic prediction in chronic disease",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 10 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\nrequire(dynpred)\nrequire(mstate)\n\n### Make sure that both \"bc syntax.R\" and \"bc.txt\" are in tour working directory\n### (or add the complete path (with double \\\\'s) to the files)\nsource(\"bc syntax.r\")\n# head(bc)\n\n###############################################################################\n###############################################################################\n### Figure 10.1: Survival after distant metastasis\n###############################################################################\n###############################################################################\n\n# Subset of data with DM\nbcdm &lt;- bc[bc$diststat==1,]\nbcdm$survdmyrs &lt;- bcdm$survyrs - bcdm$distyrs # survival after DM\nc0 &lt;- coxph(Surv(survdmyrs,survstat==1) ~ 1, data=bcdm)\nsf &lt;- survfit(c0, data=bcdm, censor=FALSE)\nsf &lt;- data.frame(time=sf$time, surv=sf$surv)\nsf &lt;- subset(sf, time&lt;8.5)\n\nplot(sf, type=\"s\", lwd=2, xlim=c(0,10), ylim=c(0,1),\n  xlab=\"Years since distant metastasis\", ylab=\"Survival\")\n\n###############################################################################\n###############################################################################\n### Table 10.1: Counts of the events in Figure 9.5\n###############################################################################\n###############################################################################\n\n### For this, we use the function events() from the mstate package\nbc$lrdmstat &lt;- 0 # simultaneous LR+DM\nbc$lrdmstat[bc$lrecstat==1 & bc$diststat==1 & bc$distyrs==bc$lrecyrs] &lt;- 1\ntable(bc$lrdmstat)\nbc$lrdmyrs &lt;- bc$survyrs\nbc$lrdmyrs[bc$lrdmstat==1] &lt;- bc$lrecyrs[bc$lrdmstat==1] # or bc$distyrs\nbc$lrdm2yrs &lt;- pmax(bc$lrecyrs,bc$distyrs)\n# non-simultaneous LR+DM (actually including simultaneous, but that's ok)\nbc$lrdm2stat &lt;- pmin(bc$lrecstat,bc$diststat)\n\n# Effect of time-dependent covariates LR(t), DM(t), and LRDM(t)\n# As in chapter 9, using msprep\ntransListn &lt;- list(\n  \"OK\" = c(2, 3, 4, 7),\n  \"LRDM\" = c(7),\n  \"LR\" = c(5, 7),\n  \"DM\" = c(6, 7),\n  \"LR1DM2\" = c(7),\n  \"DM1LR2\" = c(7),\n  \"Death\" = c())\ntmat &lt;- transMat(transListn)\ntmat\n\n# covariates\ncovs &lt;- c(\"surgery\",\"tusi\",\"nodal\",\"adjchem\",\"tam\",\"periop\",\"age50\",\"age\")\n\nbc2 &lt;- msprep(\n  time=c(NA,\"lrdmyrs\",\"lrecyrs\",\"distyrs\",\"lrdm2yrs\",\"lrdm2yrs\",\"survyrs\"),\n  status=c(NA,\"lrdmstat\",\"lrecstat\",\"diststat\",\"lrdm2stat\",\"lrdm2stat\",\"survstat\"),\n  data=bc, trans=tmat, keep=covs)\n\n# The event counts of Table 10.1\nevents(bc2)\n\n###############################################################################\n###############################################################################\n### Table 10.2: Effects of time-dependent covariates in a Cox model\n###############################################################################\n###############################################################################\n\n# Add time-dependent covariates\nbc2$LR &lt;- 0\nbc2$LR[bc2$trans %in% c(5,6,7,10,11)] &lt;- 1\nbc2$DM &lt;- 0\nbc2$DM[bc2$trans %in% c(5,8,9,10,11)] &lt;- 1\nbc2$LRDM &lt;- bc2$LR * bc2$DM\nbc2$LR[bc2$LR==1 & bc2$LRDM==1] &lt;- 0\nbc2$DM[bc2$DM==1 & bc2$LRDM==1] &lt;- 0\nbc2[1:22,c(1:8,17:19)]\n# Now keep only one line per \"from\" row from the same patient\n# This needs to be the last one, since that always contains the\n# transition to \"death\", which we want to retain for survival\n# We will use a trick for that, useful later as well\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans %in% c(4,5,7,9,10,11)] &lt;- 0 # transitions into death\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\n\n### Time-fixed effects of LR, D, and LRDM\ncoxph(Surv(Tstart,Tstop,status) ~ LR + DM + LRDM, data=bc3, method=\"breslow\")\n\n### Time-varying effects of LR, D, and LRDM\ntt &lt;- sort(unique(bc$survyrs[bc$survstat==1]))\ndim(bc3)\nbc4 &lt;- survSplit(data=bc3, cut=tt, end=\"Tstop\", start=\"Tstart\", event=\"status\")\ndim(bc4)\n\ncoxph(Surv(Tstart, Tstop, status) ~\n    LR + DM + LRDM + LR:Tstop + DM:Tstop + LRDM:Tstop, data = bc4, method=\"breslow\")\n\n### Effect of LR(t) on DM\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans %in% c(3,6)] &lt;- 0 # transitions into DM\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\n# Delete everything after DM\nbc3 &lt;- bc3[!(bc3$trans %in% c(5,8,9,10,11)),]\ncoxph(Surv(Tstart,Tstop,status) ~ LR, data=bc3, method=\"breslow\")\n\n### Effect of DM(t) on LR\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans %in% c(2,8)] &lt;- 0 # transitions into DM\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\nbc3[1:7,c(1:8,17:19)]\n# Delete everything after DM\nbc3 &lt;- bc3[!(bc3$trans %in% c(5,6,7,10,11)),]\ncoxph(Surv(Tstart,Tstop,status) ~ DM, data=bc3, method=\"breslow\")\n\n###############################################################################\n###############################################################################\n### Role of the fixed covariates\n###############################################################################\n###############################################################################\n\n###############################################################################\n###############################################################################\n### Figure 10.2: Histogram of age\n###############################################################################\n###############################################################################\nhist(bc$age, xlim=c(20,80), xlab=\"Age\", main=\"\")\n\n###############################################################################\n###############################################################################\n### Table 10.3 The Cox model for overall survival in the EORTC breast cancer\n### data (Data set 5)\n###############################################################################\n###############################################################################\n\n### Time-fixed\n# Back to the bc3 used for death\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans %in% c(4,5,7,9,10,11)] &lt;- 0 # transitions into death\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\n\ncoxph(Surv(Tstart,Tstop,status) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + I((age-50)/10) + I(((age-50)/10)^2), data=bc3, method=\"breslow\")\n\n### Time-varying\ntt &lt;- sort(unique(bc$survyrs[bc$survstat==1]))\ndim(bc3)\nbc4 &lt;- survSplit(data=bc3, cut=tt, end=\"Tstop\", start=\"Tstart\", event=\"status\")\ndim(bc4)\n\nbc4$lnt &lt;- log(bc4$Tstop+1)\ncs0 &lt;- coxph(Surv(Tstart,Tstop,status) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + I((age-50)/10) + I(((age-50)/10)^2) + tusi:lnt + nodal:lnt,\n  data=bc4, method=\"breslow\")\ncs0\n## Explicit codings of the interactions doesn't work somehow\n# bc4$tusi5lnt &lt;- as.numeric(bc4$tusi==\"&gt; 5 cm\")*bc4$lnt\n# bc4$tusi25lnt &lt;- as.numeric(bc4$tusi==\"2-5 cm\")*bc4$lnt\n# bc4$nodposlnt &lt;- as.numeric(bc4$nodal==\"node positive\")*bc4$lnt\n# cs0 &lt;- coxph(Surv(Tstart,Tstop,status) ~ surgery + tusi + nodal + adjchem + tam +\n#   periop + I((age-50)/10) + I(((age-50)/10)^2) + tusi25lnt + tusi5lnt + nodposlnt,\n#   data=bc4, method=\"breslow\")\n# cs0\n## So calculate time-varying effects of tumor size and nodal status differently,\n## using contrasts\nbet &lt;- cs0$coef[-13] # remove NA coef\nSig &lt;- cs0$var[-13,-13] # remove NA coef\nn0 &lt;- length(bet)\nmat &lt;- matrix(0,n0,3)\nmat[12,1] &lt;- 1; mat[11,1] &lt;- -1\nmat[11,2] &lt;- -1\nmat[13,3] &lt;- 1\nb2 &lt;- t(mat) %*% bet\nvar2 &lt;- t(mat) %*% Sig %*% mat\ndfr2 &lt;- data.frame(b=b2,se=sqrt(diag(var2)))\nprint(dfr2)\n\n###############################################################################\n###############################################################################\n### Table 10.4: The effects on the hazards for LR, DM and LR+DM, respectively\n###############################################################################\n###############################################################################\n\n### DM (including effect of LR(t))\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans %in% c(3,6)] &lt;- 0 # transitions into DM\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\nbc3[1:7,c(1:8,17:19)]\n# Delete everything after DM\nbc3 &lt;- bc3[!(bc3$trans %in% c(5,8,9,10,11)),]\ncs1 &lt;- coxph(Surv(Tstart,Tstop,status) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + I((age-50)/10) + I(((age-50)/10)^2) + LR, data=bc3, method=\"breslow\")\ncs1\n### LR (including effect of DM(t))\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans %in% c(2,8)] &lt;- 0 # transitions into LR\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\n# Delete everything after LR\nbc3 &lt;- bc3[!(bc3$trans %in% c(5,6,7,10,11)),]\ncs2 &lt;- coxph(Surv(Tstart,Tstop,status) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + I((age-50)/10) + I(((age-50)/10)^2) + DM, data=bc3, method=\"breslow\")\ncs2\n### LRDM\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans==1] &lt;- 0 # transitions into DM\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\nbc3[1:7,c(1:8,17:19)]\n# Delete everything after LRDM\nbc3 &lt;- bc2[bc2$trans==1,]\ncs3 &lt;- coxph(Surv(Tstart,Tstop,status) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + I((age-50)/10) + I(((age-50)/10)^2), data=bc3, method=\"breslow\")\ncs3\n\n###############################################################################\n###############################################################################\n### Figure 10.3: Left: Effect of age on the hazards for LR, DM and LR+DM.\n### Right: Effect of age on the hazard for death in the model without stage\n### (right hand side of Table 10.3) and in the different stages\n###############################################################################\n###############################################################################\n\nageseq &lt;- seq(30, 70, by=0.25)\nage1 &lt;- (ageseq-50)/10\nage2 &lt;- age1^2\nbb &lt;- cs1$coef[9:10]\nagedm &lt;- bb[1]*age1+bb[2]*age2\nbb &lt;- cs2$coef[9:10]\nagelr &lt;- bb[1]*age1+bb[2]*age2\nbb &lt;- cs3$coef[9:10]\nagelrdm &lt;- bb[1]*age1+bb[2]*age2\n\nplot(ageseq,agelr,type=\"l\",lwd=2,ylim=range(c(agedm,agelr,agelrdm)),\n  xlab=\"Age\",ylab=\"Log hazard ratio\")\nlines(ageseq,agedm,type=\"l\",lwd=2,lty=2)\nlines(ageseq,agelrdm,type=\"l\",lwd=2,lty=3)\nlegend(\"topright\",c(\"LR\",\"DM\",\"LRDM\"),lwd=2,lty=1:3,bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Table 10.5: The effects of the covariates in a Cox model for survival\n### when taking LM and DR into account\n###############################################################################\n###############################################################################\n\n### Analysis with stages\nbc2$stage &lt;- 1\nbc2$stage[bc2$trans %in% c(6,7)] &lt;- 2\nbc2$stage[bc2$trans %in% c(5,8,9,10,11)] &lt;- 3\nbc2$stage &lt;- factor(bc2$stage)\n# Again look only at survival\nbc2$tmp &lt;- 1\nbc2$tmp[bc2$trans %in% c(4,5,7,9,10,11)] &lt;- 0 # transitions into death\nbc2 &lt;- bc2[order(bc2$id,bc2$from,bc2$tmp),]\nbc3 &lt;- bc2[!duplicated(10*bc2$id+bc2$from),] # perhaps later we will rename to bc2\n\ncs4 &lt;- coxph(Surv(Tstart,Tstop,status) ~ surgery + nodal + adjchem + tam +\n  periop + tusi + I((age-50)/10) + I(((age-50)/10)^2) + \n  stage + tusi:stage + I((age-50)/10):stage + I(((age-50)/10)^2):stage,\n  data=bc3, method=\"breslow\")\ncs4\n# Effects of tumor size and age for stage 2\nbet &lt;- cs4$coef\nSig &lt;- cs4$var\nn4 &lt;- length(cs4$coef)\nmat &lt;- matrix(0,n4,4)\nmat[c(7,13),1] &lt;- mat[c(8,14),2] &lt;- mat[c(9,17),3] &lt;- mat[c(10,19),4] &lt;- 1\nb2 &lt;- t(mat) %*% cs4$coef\nvar2 &lt;- t(mat) %*% Sig %*% mat\ndfr2 &lt;- data.frame(b=b2,se=sqrt(diag(var2)))\nprint(dfr2)\n# Effects of tumor size and age for stage 3\nmat &lt;- matrix(0,n4,4)\nmat[c(7,15),1] &lt;- mat[c(8,16),2] &lt;- mat[c(9,18),3] &lt;- mat[c(10,20),4] &lt;- 1\nb3 &lt;- t(mat) %*% cs4$coef\nvar3 &lt;- t(mat) %*% Sig %*% mat\ndfr3 &lt;- data.frame(b=b3,se=sqrt(diag(var3)))\nprint(dfr3)\n\n# Illustration of the age effects\nageseq &lt;- seq(30, 70, by=0.25)\nage1 &lt;- (ageseq-50)/10\nage2 &lt;- age1^2\nbb &lt;- cs0$coef[9:10]\nagesurv &lt;- bb[1]*age1+bb[2]*age2\nbb &lt;- cs4$coef[9:10]\nages1 &lt;- bb[1]*age1+bb[2]*age2\nbb &lt;- dfr2$b[3:4]\nages2 &lt;- bb[1]*age1+bb[2]*age2\nbb &lt;- dfr3$b[3:4]\nages3 &lt;- bb[1]*age1+bb[2]*age2\n\nplot(ageseq,agesurv,type=\"l\",lwd=2,ylim=range(c(agesurv,ages1,ages2,ages3)),\n  col=8,xlab=\"Age\",ylab=\"Log hazard ratio\")\nlines(ageseq,ages1,type=\"l\",lwd=2,lty=1)\nlines(ageseq,ages2,type=\"l\",lwd=2,lty=2)\nlines(ageseq,ages3,type=\"l\",lwd=2,lty=3)\nlegend(\"topleft\",c(\"Total population\",\"Stage 1\",\"Stage 2\",\"Stage 3\"),lwd=2,\n  col=c(8,1,1,1),lty=c(1,1:3),bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Lanmarking\n###############################################################################\n###############################################################################\n\n# help function for later\nwald &lt;- function(b,var,idx)\n{  \n    wald &lt;- t(b[idx]) %*% solve(var[idx,idx]) %*% b[idx]\n    pval &lt;- 1-pchisq(wald,df=length(idx))\n    return(data.frame(wald=wald,df=length(idx),pval=pval))\n}\n\n# Landmark time points from 0 to eight years, by one month\nLMs &lt;- seq(0,8,by=1/12)\nw &lt;- 5\n\n### Overall survival from stage 1\n\nLMdata &lt;- NULL\nfor (i in seq(along=LMs)) {\n    LM &lt;- LMs[i]\n    bci &lt;- bc[bc$survyrs&gt;LM & bc$lrecyrs&gt;LM & bc$distyrs&gt;LM,]\n    bci$survstat[bci$survyrs&gt;LM+w] &lt;- 0\n    bci$survyrs[bci$survyrs&gt;LM+w] &lt;- LM+w\n    bcicovs &lt;- bci[,match(covs,names(bci))]\n    dfri &lt;- data.frame(patid=bci$patid,survyrs=bci$survyrs,survstat=bci$survstat,LM=LM)\n    dfri &lt;- cbind(dfri,bcicovs)\n    LMdata &lt;- rbind(LMdata,dfri)\n}\n\n## Dimension of LMdata\n\ndim(LMdata)\ntable(table(LMdata$patid))\n\ng1 &lt;- function(t) t/8\ng2 &lt;- function(t) (t/8)^2\nLMdata$LM1 &lt;- g1(LMdata$LM)\nLMdata$LM2 &lt;- g2(LMdata$LM)\n\nLMdata$age1 &lt;- (LMdata$age-50)/10\nLMdata$age2 &lt;- ((LMdata$age-50)/10)^2\nLMdata$age1LM &lt;- LMdata$age1*LMdata$LM\nLMdata$age2LM &lt;- LMdata$age2*LMdata$LM\n\nLMdataos1 &lt;- LMdata\n\n## Cox models\n\ncoxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + age1 + age2 + strata(LM) + cluster(patid),\n  data=LMdataos1, method=\"breslow\")\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  strata(LM) + cluster(patid),\n  data=LMdataos1, method=\"breslow\")\nLMcox\n\n## Is interaction age by landmark significant?\nwald(LMcox$coef,LMcox$var,c(8,9))\n## Are other interactions of covariates with LM significant?\n# Type of surgery\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  surgery:LM + strata(LM) + cluster(patid),\n  data=LMdataos1, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(10,11))\n# Tumor size\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  tusi:LM + strata(LM) + cluster(patid),\n  data=LMdataos1, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(10,11))\n# Nodal status\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  nodal:LM + strata(LM) + cluster(patid),\n  data=LMdataos1, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,10)\nLMcox\n\nLMdataos1$nodeposLM &lt;- as.numeric(LMdataos1$nodal==\"node positive\")*LMdataos1$LM\n\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  nodeposLM + strata(LM) + cluster(patid),\n  data=LMdataos1, method=\"breslow\")\nLMcox\n\n## Now ipl* model\n\nLMcoxos1 &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  nodeposLM + LM1 + LM2 + cluster(patid),\n  data=LMdataos1, method=\"breslow\")\nLMcoxos1\n\n### Overall survival from stage 2\n\nLMdata &lt;- NULL\nfor (i in 6:length(LMs)) {\n    LM &lt;- LMs[i]\n    bci &lt;- bc[bc$survyrs&gt;LM & bc$lrecyrs&lt;=LM & bc$lrecstat==1 & bc$distyrs&gt;LM,]\n    bci$survstat[bci$survyrs&gt;LM+w] &lt;- 0\n    bci$survyrs[bci$survyrs&gt;LM+w] &lt;- LM+w\n    bcicovs &lt;- bci[,match(covs,names(bci))]\n    dfri &lt;- data.frame(patid=bci$patid,survyrs=bci$survyrs,survstat=bci$survstat,LM=LM)\n    dfri &lt;- cbind(dfri,bcicovs)\n    LMdata &lt;- rbind(LMdata,dfri)\n}\n\n## Dimension of LMdata\ndim(LMdata)\ntable(table(LMdata$patid))\n\nLMdata$LM1 &lt;- g1(LMdata$LM)\nLMdata$LM2 &lt;- g2(LMdata$LM)\n\nLMdata$age1 &lt;- (LMdata$age-50)/10\nLMdata$age2 &lt;- ((LMdata$age-50)/10)^2\nLMdata$age1LM &lt;- LMdata$age1*LMdata$LM\nLMdata$age2LM &lt;- LMdata$age2*LMdata$LM\n\nLMdataos2 &lt;- LMdata\n\n## Cox models\ncoxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + age1 + age2 + strata(LM) + cluster(patid),\n  data=LMdataos2, method=\"breslow\")\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  strata(LM) + cluster(patid),\n  data=LMdataos2, method=\"breslow\")\nLMcox\n\n## Is interaction age by landmark significant?\nwald(LMcox$coef,LMcox$var,c(8,9))\n## Are other interactions of covariates with LM significant?\n# Type of surgery\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  surgery:LM + strata(LM) + cluster(patid),\n  data=LMdataos2, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(10,11))\n# Tumor size\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  tusi:LM + strata(LM) + cluster(patid),\n  data=LMdataos2, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(10,11))\n# Nodal status\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  nodal:LM + strata(LM) + cluster(patid),\n  data=LMdataos2, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,10)\n\n## Now ipl* model\n\nLMcoxos2 &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  LM1 + LM2 + cluster(patid),\n  data=LMdataos2, method=\"breslow\")\nLMcoxos2\n\n\n### Overall survival from stage 3\n\nLMdata &lt;- NULL\nfor (i in 2:length(LMs)) {\n    LM &lt;- LMs[i]\n    bci &lt;- bc[bc$survyrs&gt;LM & bc$distyrs&lt;=LM & bc$diststat==1,]\n    bci$survstat[bci$survyrs&gt;LM+w] &lt;- 0\n    bci$survyrs[bci$survyrs&gt;LM+w] &lt;- LM+w\n    bcicovs &lt;- bci[,match(covs,names(bci))]\n    dfri &lt;- data.frame(patid=bci$patid,survyrs=bci$survyrs,survstat=bci$survstat,LM=LM)\n    dfri &lt;- cbind(dfri,bcicovs)\n    LMdata &lt;- rbind(LMdata,dfri)\n}\n\n## Dimension of LMdata\ndim(LMdata)\ntable(table(LMdata$patid))\n\nLMdata$LM1 &lt;- g1(LMdata$LM)\nLMdata$LM2 &lt;- g2(LMdata$LM)\n\nLMdata$age1 &lt;- (LMdata$age-50)/10\nLMdata$age2 &lt;- ((LMdata$age-50)/10)^2\nLMdata$age1LM &lt;- LMdata$age1*LMdata$LM\nLMdata$age2LM &lt;- LMdata$age2*LMdata$LM\n\nLMdataos3 &lt;- LMdata\n\n## Cox models\ncoxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + age1 + age2 + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nLMcox\n\n## Is interaction age by landmark significant?\nwald(LMcox$coef,LMcox$var,c(8,9))\n## Are other interactions of covariates with LM significant?\n## Note: no age by landmark interaction in these models\n# Type of surgery\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  surgery:LM + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(8,9))\n# Tumor size\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  tusi:LM + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(8,9))\n# Nodal status\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  nodal:LM + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,8)\n\n## Are other interactions of covariates with LM significant?\n## In addition to tumor size by landmark interaction?\n# Type of surgery\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  tusi:LM + surgery:LM + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(11,12))\n# Age\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  tusi:LM + age1LM + age2LM + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(8,9))\n# Nodal status\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  tusi:LM + nodal:LM + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,11)\n\n## No more significant\n\n# Explicitly code tumor size by LM interaction\nLMdataos3$tusi25LM &lt;- as.numeric(LMdataos3$tusi==\"2-5 cm\")*LMdataos3$LM\nLMdataos3$tusi5LM &lt;- as.numeric(LMdataos3$tusi==\"&gt;5 cm\")*LMdataos3$LM\nLMcox &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  tusi25LM + tusi5LM + strata(LM) + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nLMcox\n\n## Finally the ipl* model\n\nLMcoxos3 &lt;- coxph(Surv(survyrs,survstat) ~ surgery + tusi + nodal +\n  age1 + age2 +\n  tusi25LM + tusi5LM + LM1 + LM2 + cluster(patid),\n  data=LMdataos3, method=\"breslow\")\nLMcoxos3\n\n### Disease-free survival, starting from stage 1\n\nbc$dfsyrs = pmin(bc$lrecyrs,bc$distyrs,bc$survyrs)\nbc$dfsstat = pmax(bc$lrecstat,bc$diststat,bc$survstat)\n\nLMdata &lt;- NULL\nfor (i in seq(along=LMs)) {\n    LM &lt;- LMs[i]\n    bci &lt;- bc[bc$dfsyrs&gt;LM,]\n    bci$dfsstat[bci$dfsyrs&gt;LM+w] &lt;- 0\n    bci$dfsyrs[bci$dfsyrs&gt;LM+w] &lt;- LM+w\n    bcicovs &lt;- bci[,match(covs,names(bci))]\n    dfri &lt;- data.frame(patid=bci$patid,dfsyrs=bci$dfsyrs,dfsstat=bci$dfsstat,LM=LM)\n    dfri &lt;- cbind(dfri,bcicovs)\n    LMdata &lt;- rbind(LMdata,dfri)\n}\n\n## Dimension of LMdata\n\ndim(LMdata)\ntable(table(LMdata$patid))\n\ng1 &lt;- function(t) t/8\ng2 &lt;- function(t) (t/8)^2\nLMdata$LM1 &lt;- g1(LMdata$LM)\nLMdata$LM2 &lt;- g2(LMdata$LM)\n\nLMdata$age1 &lt;- (LMdata$age-50)/10\nLMdata$age2 &lt;- ((LMdata$age-50)/10)^2\nLMdata$age1LM &lt;- LMdata$age1*LMdata$LM\nLMdata$age2LM &lt;- LMdata$age2*LMdata$LM\n\nLMdatadfs1 &lt;- LMdata\n\n## Cox models\n\ncoxph(Surv(dfsyrs,dfsstat) ~ surgery + tusi + nodal + adjchem + tam +\n  periop + age1 + age2 + strata(LM) + cluster(patid),\n  data=LMdatadfs1, method=\"breslow\")\nLMcox &lt;- coxph(Surv(dfsyrs,dfsstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  strata(LM) + cluster(patid),\n  data=LMdatadfs1, method=\"breslow\")\nLMcox\n\n## Is interaction age by landmark significant?\nwald(LMcox$coef,LMcox$var,c(8,9))\n## Are other interactions of covariates with LM significant?\n# Type of surgery\nLMcox &lt;- coxph(Surv(dfsyrs,dfsstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  surgery:LM + strata(LM) + cluster(patid),\n  data=LMdatadfs1, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(10,11))\n# Tumor size\nLMcox &lt;- coxph(Surv(dfsyrs,dfsstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  tusi:LM + strata(LM) + cluster(patid),\n  data=LMdatadfs1, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,c(10,11))\n# Nodal status\nLMcox &lt;- coxph(Surv(dfsyrs,dfsstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  nodal:LM + strata(LM) + cluster(patid),\n  data=LMdatadfs1, method=\"breslow\")\nwald(LMcox$coef,LMcox$var,10)\nLMcox\n\n# Explicitly code node by LM interaction\nLMdatadfs1$nodeposLM &lt;- as.numeric(LMdatadfs1$nodal==\"node positive\")*LMdatadfs1$LM\n\nLMcox &lt;- coxph(Surv(dfsyrs,dfsstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  nodeposLM + strata(LM) + cluster(patid),\n  data=LMdatadfs1, method=\"breslow\")\nLMcox\n\n## Finally ipl* model\n\nLMcoxdfs1 &lt;- coxph(Surv(dfsyrs,dfsstat) ~ surgery + tusi + nodal +\n  age1 + age2 + age1LM + age2LM +\n  nodeposLM + LM1 + LM2 + cluster(patid),\n  data=LMdatadfs1, method=\"breslow\")\nLMcoxdfs1\n\n##############################\n### Summary\n##############################\n\n### Overall survival from stage 1\n# data: LMdataos1\nLMcoxos1\n### Overall survival from stage 2\n# data: LMdataos2\nLMcoxos2\n### Overall survival from stage 3\n# data: LMdataos3\nLMcoxos3\n### Disease-free survival from stage 1\n# data: LMdatadfs1\nLMcoxdfs1\n\n##############################\n### Prediction\n##############################\n\nw &lt;- 5\ntt &lt;- seq(0,8,length=801)\nnt &lt;- length(tt)\n\n###\n### First \"good\" patient\n###\n\n### OS stage 1\nndata &lt;- data.frame(surgery=1,tusi=1,nodal=1,age1=0,age2=0,\n  age1LM=0,age2LM=0,nodeposLM=0,tusi25LM=0,tusi5LM=0,LM1=0,LM2=0)\nndata$surgery &lt;- factor(ndata$surgery,levels=1:3,labels=levels(LMdataos1$surgery))\nndata$tusi &lt;- factor(ndata$tusi,levels=1:3,labels=levels(LMdataos1$tusi))\nndata$nodal &lt;- factor(ndata$nodal,levels=1:2,labels=levels(LMdataos1$nodal))\n\nHazos1 &lt;- survfit(LMcoxos1,newdata=ndata)\nHazos1 &lt;- data.frame(time=Hazos1$time,Haz=-log(Hazos1$surv))\n\nFwpredos1 &lt;- function(bet, Haz, w, tt, age)\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[8]*age1*tti + bet[9]*age2*tti +\n              bet[11]*g1(tti) + bet[12]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwos1age30 &lt;- Fwpredos1(LMcoxos1$coef, Hazos1, w, tt, age=30)\nFwos1age50 &lt;- Fwpredos1(LMcoxos1$coef, Hazos1, w, tt, age=50)\nFwos1age70 &lt;- Fwpredos1(LMcoxos1$coef, Hazos1, w, tt, age=70)\nFwos1age30$age &lt;- 30\nFwos1age50$age &lt;- 50\nFwos1age70$age &lt;- 70\nFwos1age30$stage &lt;- 4\nFwos1age50$stage &lt;- 4\nFwos1age70$stage &lt;- 4\n\n#plot(Fwos1age30$time,Fwos1age30$Fw,type=\"l\",lwd=2)\n#lines(Fwos1age50$time,Fwos1age50$Fw,type=\"l\",lwd=2,lty=2)\n#lines(Fwos1age70$time,Fwos1age70$Fw,type=\"l\",lwd=2,lty=3)\n\n### OS stage 2\n# no need to redefine ndata\nHazos2 &lt;- survfit(LMcoxos2,newdata=ndata)\nHazos2 &lt;- data.frame(time=Hazos2$time,Haz=-log(Hazos2$surv))\n\nFwpredos2 &lt;- function(bet, Haz, w, tt, age)\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[8]*age1*tti + bet[9]*age2*tti +\n              bet[10]*g1(tti) + bet[11]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwos2age30 &lt;- Fwpredos2(LMcoxos2$coef, Hazos2, w, tt, age=30)\nFwos2age50 &lt;- Fwpredos2(LMcoxos2$coef, Hazos2, w, tt, age=50)\nFwos2age70 &lt;- Fwpredos2(LMcoxos2$coef, Hazos2, w, tt, age=70)\nFwos2age30$age &lt;- 30\nFwos2age50$age &lt;- 50\nFwos2age70$age &lt;- 70\nFwos2age30$stage &lt;- 1\nFwos2age50$stage &lt;- 1\nFwos2age70$stage &lt;- 1\n\n#plot(Fwos2age30$time,Fwos2age30$Fw,type=\"l\",lwd=2)\n#lines(Fwos2age50$time,Fwos2age50$Fw,type=\"l\",lwd=2,lty=2)\n#lines(Fwos2age70$time,Fwos2age70$Fw,type=\"l\",lwd=2,lty=3)\n\n### OS stage 3\n# no need to redefine ndata\nHazos3 &lt;- survfit(LMcoxos3,newdata=ndata)\nHazos3 &lt;- data.frame(time=Hazos3$time,Haz=-log(Hazos3$surv))\n\nFwpredos3 &lt;- function(bet, Haz, w, tt, age)\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[10]*g1(tti) + bet[11]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwos3age30 &lt;- Fwpredos3(LMcoxos3$coef, Hazos3, w, tt, age=30)\nFwos3age50 &lt;- Fwpredos3(LMcoxos3$coef, Hazos3, w, tt, age=50)\nFwos3age70 &lt;- Fwpredos3(LMcoxos3$coef, Hazos3, w, tt, age=70)\nFwos3age30$age &lt;- 30\nFwos3age50$age &lt;- 50\nFwos3age70$age &lt;- 70\nFwos3age30$stage &lt;- 2\nFwos3age50$stage &lt;- 2\nFwos3age70$stage &lt;- 2\n\n#plot(Fwos3age30$time,Fwos3age30$Fw,type=\"l\",lwd=2)\n#lines(Fwos3age50$time,Fwos3age50$Fw,type=\"l\",lwd=2,lty=2)\n#lines(Fwos3age70$time,Fwos3age70$Fw,type=\"l\",lwd=2,lty=3)\n\n### DFS stage 1\nHazdfs1 &lt;- survfit(LMcoxdfs1,newdata=ndata)\nHazdfs1 &lt;- data.frame(time=Hazdfs1$time,Haz=-log(Hazdfs1$surv))\n\nFwpreddfs1 &lt;- function(bet, Haz, w, tt, age)\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[8]*age1*tti + bet[9]*age2*tti +\n              bet[11]*g1(tti) + bet[12]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwdfs1age30 &lt;- Fwpreddfs1(LMcoxdfs1$coef, Hazdfs1, w, tt, age=30)\nFwdfs1age50 &lt;- Fwpreddfs1(LMcoxdfs1$coef, Hazdfs1, w, tt, age=50)\nFwdfs1age70 &lt;- Fwpreddfs1(LMcoxdfs1$coef, Hazdfs1, w, tt, age=70)\nFwdfs1age30$age &lt;- 30\nFwdfs1age50$age &lt;- 50\nFwdfs1age70$age &lt;- 70\nFwdfs1age30$stage &lt;- 3\nFwdfs1age50$stage &lt;- 3\nFwdfs1age70$stage &lt;- 3\n\n\n### First plot of the baseline hazards (and ipl* landmark effects)\nHazos1p &lt;- Hazos1; Hazos1p &lt;- Hazos1p[Hazos1p$time&lt;=10,]\nHazos2p &lt;- Hazos2; Hazos2p &lt;- Hazos2p[Hazos2p$time&lt;=10,]\nHazos3p &lt;- Hazos3; Hazos3p &lt;- Hazos3p[Hazos3p$time&lt;=10,]\nHazdfs1p &lt;- Hazdfs1; Hazdfs1p &lt;- Hazdfs1p[Hazdfs1p$time&lt;=10,]\nLMcoxos1$coef[[\"LM1\"]]\n\noldpar &lt;- par(no.readonly=TRUE) # save graphical parameters\npar(mfrow=c(1,2))\npar(mar=c(5,4,4,1.6)+0.1)\nplot(c(0,Hazos3p$time), c(0,Hazos3p$Haz), type=\"s\", lwd=2, lty=3,\n  xlab=\"Time (years)\", ylab=\"Cumulative hazard\")\nlines(c(0,Hazos1p$time), c(0,Hazos1p$Haz), type=\"s\", lwd=2)\nlines(c(0,Hazos2p$time), c(0,Hazos2p$Haz), type=\"s\", lwd=2, lty=2)\nlines(c(0,Hazdfs1p$time), c(0,Hazdfs1p$Haz), type=\"s\", lwd=2, col=8)\nlegend(\"topleft\",c(\"OS stage 1\",\"OS stage 2\",\"OS stage 3\",\"DFS stage 1\"),lwd=2,lty=c(1:3,1),col=c(1,1,1,8),bty=\"n\")\npar(mar=c(5,3.6,4,2)+0.1)\nplot(LMs, exp(LMcoxos1$coef[[\"LM1\"]]*g1(LMs) + LMcoxos1$coef[[\"LM2\"]]*g2(LMs)),\n  type=\"l\", lwd=2, ylim=c(0,1), xlab=\"Landmark (s)\", ylab=\"exp(theta(s))\")\nlines(LMs, exp(LMcoxos2$coef[[\"LM1\"]]*g1(LMs) + LMcoxos2$coef[[\"LM2\"]]*g2(LMs)),\n  type=\"l\", lwd=2, lty=2)\nlines(LMs, exp(LMcoxos3$coef[[\"LM1\"]]*g1(LMs) + LMcoxos3$coef[[\"LM2\"]]*g2(LMs)),\n  type=\"l\", lwd=2, lty=3)\nlines(LMs, exp(LMcoxdfs1$coef[[\"LM1\"]]*g1(LMs) + LMcoxdfs1$coef[[\"LM2\"]]*g2(LMs)),\n  type=\"l\", lwd=2, col=8)\nlegend(\"topright\",c(\"OS stage 1\",\"OS stage 2\",\"OS stage 3\",\"DFS stage 1\"),lwd=2,lty=c(1:3,1),col=c(1,1,1,8),bty=\"n\")\npar(oldpar) # reset graphical parameters\n\nFwall &lt;- rbind(Fwos1age30,Fwos1age50,Fwos1age70,\n  Fwos2age30,Fwos2age50,Fwos2age70,\n  Fwos3age30,Fwos3age50,Fwos3age70,\n  Fwdfs1age30,Fwdfs1age50,Fwdfs1age70)\nFwall$stage &lt;- factor(Fwall$stage,\n  labels=c(\"OS, stage 2\",\"OS, stage 3\",\"DFS, stage 1\",\"OS, stage 1\"))\nFwall$age &lt;- factor(Fwall$age,labels=c(\"Age = 30\",\"Age = 50\",\"Age = 70\"))\n\nrequire(lattice)\nkey.age &lt;- list(text = list(levels(Fwall$age)),\n    lines = list(lwd = 2, lty = 1:3, col = \"black\"))\nxyplot(Fw ~ time | stage, data=Fwall, groups=age, ylim=c(-0.02,1.02), lwd=2, type=\"l\", col=1, lty=1:3,\n  xlab=\"Prediction time (years)\",ylab=\"Fixed width probability\", key=key.age)\n\n### Zoom in DFS and OS from stage 1 and plot again\nFwall2 &lt;- Fwall[as.numeric(Fwall$stage)&gt;2,]\nkey.age &lt;- list(text = list(levels(Fwall$age)),\n    lines = list(lwd = 2, lty = 1:3, col = \"black\"))\nxyplot(Fw ~ time | stage, data=Fwall2, groups=age, ylim=c(-0.01,0.32), lwd=2, type=\"l\", col=1, lty=1:3,\n  xlab=\"Prediction time (years)\",ylab=\"Fixed width probability\", key=key.age)\n\n###\n### Now \"bad\" patient\n###\n\n### OS stage 1\nndata &lt;- data.frame(surgery=2,tusi=3,nodal=2,age1=0,age2=0,\n  age1LM=0,age2LM=0,nodeposLM=0,tusi25LM=0,tusi5LM=0,LM1=0,LM2=0)\nndata$surgery &lt;- factor(ndata$surgery,levels=1:3,labels=levels(LMdataos1$surgery))\nndata$tusi &lt;- factor(ndata$tusi,levels=1:3,labels=levels(LMdataos1$tusi))\nndata$nodal &lt;- factor(ndata$nodal,levels=1:2,labels=levels(LMdataos1$nodal))\n\nHazos1 &lt;- survfit(LMcoxos1,newdata=ndata)\nHazos1 &lt;- data.frame(time=Hazos1$time,Haz=-log(Hazos1$surv))\n\nFwpredos1 &lt;- function(bet, Haz, w, tt, age) #!!! overwrites previous def\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[8]*age1*tti + bet[9]*age2*tti +\n              bet[10]*tti + bet[11]*g1(tti) + bet[12]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwos1age30 &lt;- Fwpredos1(LMcoxos1$coef, Hazos1, w, tt, age=30)\nFwos1age50 &lt;- Fwpredos1(LMcoxos1$coef, Hazos1, w, tt, age=50)\nFwos1age70 &lt;- Fwpredos1(LMcoxos1$coef, Hazos1, w, tt, age=70)\nFwos1age30$age &lt;- 30\nFwos1age50$age &lt;- 50\nFwos1age70$age &lt;- 70\nFwos1age30$stage &lt;- 4\nFwos1age50$stage &lt;- 4\nFwos1age70$stage &lt;- 4\n\n#plot(Fwos1age30$time,Fwos1age30$Fw,type=\"l\",lwd=2)\n#lines(Fwos1age50$time,Fwos1age50$Fw,type=\"l\",lwd=2,lty=2)\n#lines(Fwos1age70$time,Fwos1age70$Fw,type=\"l\",lwd=2,lty=3)\n\n### OS stage 2\n# no need to redefine ndata\nHazos2 &lt;- survfit(LMcoxos2,newdata=ndata)\nHazos2 &lt;- data.frame(time=Hazos2$time,Haz=-log(Hazos2$surv))\n\nFwpredos2 &lt;- function(bet, Haz, w, tt, age) #!!! overwrites previous def\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[8]*age1*tti + bet[9]*age2*tti +\n              bet[10]*g1(tti) + bet[11]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwos2age30 &lt;- Fwpredos2(LMcoxos2$coef, Hazos2, w, tt, age=30)\nFwos2age50 &lt;- Fwpredos2(LMcoxos2$coef, Hazos2, w, tt, age=50)\nFwos2age70 &lt;- Fwpredos2(LMcoxos2$coef, Hazos2, w, tt, age=70)\nFwos2age30$age &lt;- 30\nFwos2age50$age &lt;- 50\nFwos2age70$age &lt;- 70\nFwos2age30$stage &lt;- 1\nFwos2age50$stage &lt;- 1\nFwos2age70$stage &lt;- 1\n\n#plot(Fwos2age30$time,Fwos2age30$Fw,type=\"l\",lwd=2)\n#lines(Fwos2age50$time,Fwos2age50$Fw,type=\"l\",lwd=2,lty=2)\n#lines(Fwos2age70$time,Fwos2age70$Fw,type=\"l\",lwd=2,lty=3)\n\n### OS stage 3\n# no need to redefine ndata\nHazos3 &lt;- survfit(LMcoxos3,newdata=ndata)\nHazos3 &lt;- data.frame(time=Hazos3$time,Haz=-log(Hazos3$surv))\n\nFwpredos3 &lt;- function(bet, Haz, w, tt, age) #!!! overwrites previous def\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[9]*tti + bet[10]*g1(tti) + bet[11]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwos3age30 &lt;- Fwpredos3(LMcoxos3$coef, Hazos3, w, tt, age=30)\nFwos3age50 &lt;- Fwpredos3(LMcoxos3$coef, Hazos3, w, tt, age=50)\nFwos3age70 &lt;- Fwpredos3(LMcoxos3$coef, Hazos3, w, tt, age=70)\nFwos3age30$age &lt;- 30\nFwos3age50$age &lt;- 50\nFwos3age70$age &lt;- 70\nFwos3age30$stage &lt;- 2\nFwos3age50$stage &lt;- 2\nFwos3age70$stage &lt;- 2\n\n#plot(Fwos3age30$time,Fwos3age30$Fw,type=\"l\",lwd=2)\n#lines(Fwos3age50$time,Fwos3age50$Fw,type=\"l\",lwd=2,lty=2)\n#lines(Fwos3age70$time,Fwos3age70$Fw,type=\"l\",lwd=2,lty=3)\n\n### DFS stage 1\nHazdfs1 &lt;- survfit(LMcoxdfs1,newdata=ndata)\nHazdfs1 &lt;- data.frame(time=Hazdfs1$time,Haz=-log(Hazdfs1$surv))\n\nFwpreddfs1 &lt;- function(bet, Haz, w, tt, age) #!!! overwrites previous def\n{\n# Haz is cumulative hazard for age=50\n    age1 &lt;- (age-50)/10\n    age2 &lt;- age1^2\n    nt &lt;- length(tt)\n    Haz$haz &lt;- diff(c(0,Haz$Haz))\n    Haz$haz &lt;- Haz$haz*exp(bet[6]*age1 + bet[7]*age2)\n    Fw &lt;- data.frame(time=tt,Fw=NA)\n    for (i in 1:nt) {\n        sfi &lt;- Haz # local copy\n        tti &lt;- tt[i]\n        sfi$haz &lt;- sfi$haz *\n          exp(bet[8]*age1*tti + bet[9]*age2*tti +\n              bet[10]*tti + bet[11]*g1(tti) + bet[12]*g2(tti))\n        sfi$Haz &lt;- cumsum(sfi$haz)\n        tmp &lt;- evalstep(sfi$time,sfi$Haz,c(tti,tti+w),subst=0)\n        Fw$Fw[i] &lt;- 1-exp(-(tmp[2]-tmp[1]))\n    }\n    return(Fw)\n}\nFwdfs1age30 &lt;- Fwpreddfs1(LMcoxdfs1$coef, Hazdfs1, w, tt, age=30)\nFwdfs1age50 &lt;- Fwpreddfs1(LMcoxdfs1$coef, Hazdfs1, w, tt, age=50)\nFwdfs1age70 &lt;- Fwpreddfs1(LMcoxdfs1$coef, Hazdfs1, w, tt, age=70)\nFwdfs1age30$age &lt;- 30\nFwdfs1age50$age &lt;- 50\nFwdfs1age70$age &lt;- 70\nFwdfs1age30$stage &lt;- 3\nFwdfs1age50$stage &lt;- 3\nFwdfs1age70$stage &lt;- 3\n\n#plot(Fwdfs1age30$time,Fwdfs1age30$Fw,type=\"l\",lwd=2)\n#lines(Fwdfs1age50$time,Fwdfs1age50$Fw,type=\"l\",lwd=2,lty=2)\n#lines(Fwdfs1age70$time,Fwdfs1age70$Fw,type=\"l\",lwd=2,lty=3)\n\nFwall &lt;- rbind(Fwos1age30,Fwos1age50,Fwos1age70,\n  Fwos2age30,Fwos2age50,Fwos2age70,\n  Fwos3age30,Fwos3age50,Fwos3age70,\n  Fwdfs1age30,Fwdfs1age50,Fwdfs1age70)\nFwall$stage &lt;- factor(Fwall$stage,\n  labels=c(\"OS, stage 2\",\"OS, stage 3\",\"DFS, stage 1\",\"OS, stage 1\"))\nFwall$age &lt;- factor(Fwall$age,labels=c(\"Age = 30\",\"Age = 50\",\"Age = 70\"))\n\nrequire(lattice)\nkey.age &lt;- list(text = list(levels(Fwall$age)),\n    lines = list(lwd = 2, lty = 1:3, col = \"black\"))\nxyplot(Fw ~ time | stage, data=Fwall, groups=age, ylim=c(-0.02,1.02), lwd=2, type=\"l\", col=1, lty=1:3,\n  xlab=\"Prediction time (years)\",ylab=\"Fixed width probability\", key=key.age)"
  },
  {
    "objectID": "chapters/chapter_11.html",
    "href": "chapters/chapter_11.html",
    "title": "11  Penalized Cox models",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 11 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\nlibrary(dynpred)\nlibrary(penalized)\n# The following is to install and load Biobase from Bioconductor. Biobase\n# contains standardized data structures to represent genomic data.\n# If you have not already installed Biobase, please uncomment\n# source(\"http://bioconductor.org/biocLite.R\")\n# biocLite(\"Biobase\")\nlibrary(Biobase)\n\n# The van de Vijver data, not part of dynpred, should be placed in the\n# working directory\nload(\"VanDeVijver.Rdata\")\n\nunivar &lt;- apply(t(exprs(VanDeVijver)), 2,\n  function(x) {\n    c1 &lt;- coxph(Surv(survival.death.,event_death) ~ x,\n      data=pData(VanDeVijver));\n    return(c(c1$coef,c1$var))})\nunivar &lt;- t(univar)\nunivar &lt;- as.data.frame(univar)\nnames(univar) &lt;- c(\"coef\",\"var\")\nunivar$z &lt;- univar$coef/sqrt(univar$var)\nmean(abs(univar$z)&gt;2)\n\n# Plot\nunivar$info &lt;- 1/univar$var\nplot(univar$info,univar$coef,pch=20,cex=0.5,ylim=c(-5,5),\n  xlab=\"Information\",ylab=\"Regression coefficient\")\ninfo &lt;- seq(0.08,max(univar$info),length=500)\nlines(info,2*sqrt(1/info),type=\"l\",lwd=2)\nlines(info,-2*sqrt(1/info),type=\"l\",lwd=2)\n\n### Lasso\n# Note, this is time-consuming, so instead of running this part, the\n# second part, now commented out, could be run instead. \noptlam1 &lt;- optL1(Surv(survival.death.,event_death), t(exprs(VanDeVijver)),\n  data=pData(VanDeVijver))\nlamlass &lt;- optlam1$lambda # optimal lambda\nlasso &lt;- cvl(Surv(survival.death.,event_death), t(exprs(VanDeVijver)),\n  lambda1=lamlass, data=pData(VanDeVijver))\nSurv.lasso &lt;- as.matrix(lasso$predictions)\ncolnames(Surv.lasso) &lt;- paste(\"time=\", colnames(Surv.lasso), sep=\"\")\nPI.lasso &lt;-  linear.predictors(lasso$ful)\n# Write result to tab-delimited text file (uncomment next line)\n# write.table(cbind(PI.lasso, Surv.lasso), file=\"cvlassopred.txt\", sep=\"\\t\", col.names=NA, quote=FALSE)\n\n# Uncomment this if the above part was not (completely) run.\n# Please make sure that the file \"cvlassopred.txt\", available from\n# the book website, is placed in the working directory\n\n# cvlasso &lt;- read.table(\"cvlassopred.txt\",header=TRUE,sep=\"\\t\")\n# PI.lasso &lt;- cvlasso$PI.lasso\n# Surv.lasso &lt;- cvlasso[,-(1:2)]\n\n### Ridge\n# Note, this is very time-consuming, so instead of running this part, the\n# second part, now commented out, could be run instead. Please make\n# sure that the file \"cvlassopred.txt\", available from the book website\n# is placed in the working directory\noptlam2 &lt;- optL2(Surv(survival.death.,event_death), t(exprs(VanDeVijver)),\n  data=pData(VanDeVijver))\nlamridg &lt;- optlam2$lambda # optimal lambda\nridg &lt;- cvl(Surv(survival.death.,event_death), t(exprs(VanDeVijver)),\n  lambda2=lamridg, data=pData(VanDeVijver))\nSurv.ridge &lt;- as.matrix(ridg$predictions)\ncolnames(Surv.ridge) &lt;- paste(\"time=\", colnames(Surv.ridge), sep=\"\")\nPI.ridge &lt;- linear.predictors(ridg$ful)\n# Write result to tab-delimited text file (uncomment next line)\n# write.table(data.frame(PI.ridge, Surv.ridge), file=\"cvridgepred.txt\", sep=\"\\t\", col.names=NA, quote=FALSE)\n\n# Uncomment this if the above part was not (completely) run.\n# Please make sure that the file \"cvridgepred.txt\", available from\n# the book website, is placed in the working directory\n\n# cvridge &lt;- read.table(\"cvridgepred.txt\",header=TRUE,sep=\"\\t\")\n# PI.ridge &lt;- cvridge$PI.ridge\n# Surv.ridge &lt;- cvridge[,-(1:2)]\n\n###############################################################################\n###############################################################################\n### Figure 11.1: CVPL for ridge (left) and lasso (right); below is the\n### number of non-zero coefficients of the lasso\n###############################################################################\n###############################################################################\n\n### !!! NOTE, this takes a very long time to run !!!\nfit1 &lt;- profL1(Surv(survival.death.,event_death), t(exprs(VanDeVijver)),\n  minlambda1=2, maxlambda1=28, data=pData(VanDeVijver), steps=250)\nfit2 &lt;- profL2(Surv(survival.death.,event_death), t(exprs(VanDeVijver)),\n  minlambda2=10^1.5, maxlambda2=10^6.5, data=pData(VanDeVijver), steps=100)\n\nplot(fit1$lambda,fit1$cvl,type=\"l\",\n  xlab=\"lambda\", ylab=\"Cross-validated partial log-likelihood\")\n\nnnonzero &lt;- unlist(lapply(fit1$fullfit,function(x) length(coef(x))))\nplot(fit1$lambda,nnonzero,type=\"s\",xlab=\"lambda\",ylab=\"Number of non-zero coefficients\")\n\nplot(fit2$lambda,fit2$cvl,type=\"l\",log=\"x\",xlim=c(min(fit2$lambda),100000),\n  xlab=\"lambda\",ylab=\"Cross-validated partial log-likelihood\",axes=FALSE)\naxis(1,at=c(100,1000,10000,100000),\n    labels=as.character(c(100,1000,10000,100000)))\naxis(2)\nbox()\n\n###############################################################################\n###############################################################################\n### Figure 11.2: Scatterplot of the prognostic indices for ridge and lasso\n###############################################################################\n###############################################################################\n\noldpar &lt;- par(no.readonly=TRUE) # save graphical parameters\nlayout(matrix(c(2,0,1,3),2,2,byrow=TRUE), widths=c(2,1), heights=c(1,2))\n# Scatterplot\npar(mar=c(5,5,1,1))\nplot(PI.ridge,PI.lasso,xlim=c(-2.5,2.5),ylim=c(-2.5,2.5),xlab=\"\",ylab=\"\")\nmtext(\"Ridge\",side=1,line=3,cex=1.5,font=2)\nmtext(\"Lasso\",side=2,line=3,cex=1.5,font=2)\n# Histogram of ridge\npar(mar=c(0,5,2,1))\nyhist &lt;- hist(PI.ridge, breaks=seq(-2.5,2.5,0.5), plot=FALSE)\ntop &lt;- max(yhist$counts)\nbarplot(yhist$counts, axes=TRUE, ylim=c(0, top), space=0, horiz=FALSE)\nleg &lt;- legend(\"topright\",\"\",bty=\"n\")$text\ntext(leg$x,leg$y,\n  paste(\"Mean =\",format(round(mean(PI.ridge),2),nsmall=2),\"\\nSD =\",round(sd(PI.ridge),2)),\n  adj=c(1,1))\npar(mar=c(5,0,1,2))\nyhist &lt;- hist(PI.lasso, breaks=seq(-2.5,2.5,0.5), plot=FALSE)\ntop &lt;- max(yhist$counts)\nbarplot(yhist$counts, axes=TRUE, xlim=c(0, top), space=0, horiz=TRUE)\nleg &lt;- legend(\"topright\",\"\",bty=\"n\")$text\ntext(leg$x,leg$y,\n  paste(\"Mean =\",format(round(mean(PI.lasso),2),nsmall=2),\"\\nSD =\",round(sd(PI.lasso),2)),\n  adj=c(1,1))\npar(oldpar) # reset graphical parameters\n\n### For future reference (Chapter 12), save the follow-up data\n### of VanDeVijver in separate data set, rename time and status\n### variables\n\nvdv &lt;- pData(VanDeVijver)\nvdv$time &lt;- vdv$survival.death.\nvdv$status &lt;- vdv$event_death\n\n###############################################################################\n###############################################################################\n### Figure 11.3: Survival curves for ridge (left) and lasso (right)\n###############################################################################\n###############################################################################\n\n### Survival curves for these selected percentiles\n\nqs &lt;- c(0.125,0.375,0.5,0.625,0.875)\n\n## Ridge\nn &lt;- nrow(Surv.ridge)\nnc &lt;- ncol(Surv.ridge)\n\nrequire(mstate)\nSurv.ridge &lt;- t(apply(Surv.ridge,1,mstate:::NAfix))\nord.ridge &lt;- order(-Surv.ridge[,nc])\nSurv.ridge.ord &lt;- Surv.ridge[ord.ridge,]\nidxs &lt;- round(qs*(n-1)+1)\n\n# Extract time points from the Surv.ridge object\n# These are stored as character strings, strip off first character,\n# except for 0\ntt &lt;- as.numeric(substr(dimnames(Surv.ridge)[[2]],start=6,stop=100))\n\nplot(tt,Surv.ridge.ord[idxs[1],],type=\"s\",lwd=2,ylim=c(0,1),\n  xlab=\"Time (years)\",ylab=\"Survival\")\nfor (i in 2:length(idxs))\n    lines(tt,Surv.ridge.ord[idxs[i],],type=\"s\",lwd=2,lty=i)\nlegend(\"bottomleft\",paste(100*qs,\"% percentile\"),lwd=2,lty=1:5,bty=\"n\")\n\n## Lasso\nn &lt;- nrow(Surv.lasso)\nnc &lt;- ncol(Surv.lasso)\n\nSurv.lasso &lt;- t(apply(Surv.lasso,1,mstate:::NAfix))\nord.lasso &lt;- order(-Surv.lasso[,nc])\nSurv.lasso.ord &lt;- Surv.lasso[ord.lasso,]\nidxs &lt;- round(qs*(n-1)+1)\n\n# Extract time points from the Surv.ridge object\ntt &lt;- as.numeric(substr(dimnames(Surv.lasso)[[2]],start=6,stop=100))\n\nplot(tt,Surv.lasso.ord[idxs[1],],type=\"s\",lwd=2,ylim=c(0,1),\n  xlab=\"Time (years)\",ylab=\"Survival\")\nfor (i in 2:length(idxs))\n    lines(tt,Surv.lasso.ord[idxs[i],],type=\"s\",lwd=2,lty=i)\nlegend(\"bottomleft\",paste(100*qs,\"% percentile\"),lwd=2,lty=1:5,bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Figure 11.4: Cross-validated Kaplan-Meier curves for ridge (left)\n### and lasso (right)\n###############################################################################\n###############################################################################\n\n# New cross-validated PI's, append them to vdv data\nt0 &lt;- 5\nidxt0 &lt;- max(which(tt&lt;=t0))\nCVPI.lasso &lt;- log(-log(Surv.lasso[,idxt0]))\nCVPI.lasso &lt;- CVPI.lasso - mean(CVPI.lasso)\nCVPI.ridge &lt;- log(-log(Surv.ridge[,idxt0]))\nCVPI.ridge &lt;- CVPI.ridge - mean(CVPI.ridge)\nvdv$group.lasso &lt;- as.numeric(cut(CVPI.lasso,c(-Inf,quantile(CVPI.lasso)[2:4],Inf)))\nvdv$group.ridge &lt;- as.numeric(cut(CVPI.ridge,c(-Inf,quantile(CVPI.ridge)[2:4],Inf)))\n\n## Ridge\nplot(survfit(Surv(time,status)~group.ridge,data=vdv),mark.time=FALSE,\n  lwd=2,lty=1:4,xlab=\"Time (years)\",ylab=\"Survival\")\nlines(survfit(Surv(time,status)~1,data=vdv),mark.time=FALSE,lwd=2,lty=1,col=8)\nlegend(\"bottomleft\",\n  c(\"All tumours\",\"Percentile 0-25\",\"Percentile 25-50\",\"Percentile 50-75\",\"Percentile 75-100\"),\n  lwd=2,col=c(8,1,1,1,1),lty=c(1,1,2,3,4),bty=\"n\")\n\n# Lasso\nplot(survfit(Surv(time,status)~group.lasso,data=vdv),mark.time=FALSE,\n  lwd=2,lty=1:4,xlab=\"Time (years)\",ylab=\"Survival\")\nlines(survfit(Surv(time,status)~1,data=vdv),mark.time=FALSE,lwd=2,lty=1,col=8)\nlegend(\"bottomleft\",\n  c(\"All tumours\",\"Percentile 0-25\",\"Percentile 25-50\",\"Percentile 50-75\",\"Percentile 75-100\"),\n  lwd=2,col=c(8,1,1,1,1),lty=c(1,1,2,3,4),bty=\"n\")\n\ntable(vdv$group.lasso,vdv$group.ridge)\n\nc1 &lt;- coxph(Surv(time,status)~CVPI.lasso,data=vdv,method=\"breslow\")\nc1\n2*diff(c1$loglik)\nc2 &lt;- coxph(Surv(time,status)~CVPI.ridge,data=vdv,method=\"breslow\")\nc2\n2*diff(c2$loglik)\nc3 &lt;- coxph(Surv(time,status)~CVPI.lasso+CVPI.ridge,data=vdv,method=\"breslow\")\nc3\n2*diff(c3$loglik)\n\n###############################################################################\n###############################################################################\n### Section 11.4: Adding clinical predictors\n###############################################################################\n###############################################################################\n\nlibrary(dynpred)\ndata(nki)\n\n### Crude Cox model with the clinical covariates\ncoxph(Surv(tyears,d) ~ chemotherapy + hormonaltherapy + typesurgery +\n  histolgrade + vasc.invasion + diameter + posnodes + age + mlratio,\n  data = nki, method = \"breslow\")\n\n### Cross-validated prognostic indices\nCVPI.clin &lt;- rep(NA,n)\nfor (i in 1:n) {\n  # leave i out\n  ci &lt;- coxph(Surv(tyears,d) ~ chemotherapy + hormonaltherapy + typesurgery +\n    histolgrade + vasc.invasion + diameter + posnodes + age + mlratio,\n    data=nki[-i,], method=\"breslow\")\n  sfi &lt;- survfit(ci, newdata=nki[i,])\n  summi &lt;- summary(sfi, times=5)\n  CVPI.clin[i] &lt;- log(-log(summi$surv))\n}\nmean(CVPI.clin)\nCVPI.clin &lt;- CVPI.clin-mean(CVPI.clin)\nmean(CVPI.clin)\nsd(CVPI.clin)\n\nnki$CVPI.clin &lt;- CVPI.clin\nplot(CVPI.clin,CVPI.ridge)\ncor(CVPI.clin,CVPI.ridge)\n\n###############################################################################\n###############################################################################\n### Table 11.3: Super model Cox regression\n###############################################################################\n###############################################################################\n\nc1 &lt;- coxph(Surv(time,status)~CVPI.clin,data=vdv,method=\"breslow\")\nc1\n2*diff(c1$loglik)\nc2 &lt;- coxph(Surv(time,status)~CVPI.ridge,data=vdv,method=\"breslow\")\nc2\n2*diff(c2$loglik)\nc3 &lt;- coxph(Surv(time,status)~CVPI.clin+CVPI.ridge,data=vdv,method=\"breslow\")\nc3\n2*diff(c3$loglik)\n\n###############################################################################\n###############################################################################\n### Figure 11.5 Kullback-Leibler prediction error curves (left) and \n### prediction error reduction curves (right) for the null model (Kaplan-Meier)\n### and for the three models of Table 11.3.\n###############################################################################\n###############################################################################\n\nKL0 &lt;- pecox(Surv(time,status)~1,Surv(time,status==0)~1,data=vdv)\nKL0$Err[is.na(KL0$Err)] &lt;- 0\nKL1 &lt;- pecox(Surv(time,status)~CVPI.clin,Surv(time,status==0)~1,data=vdv)\nKL1$Err[is.na(KL1$Err)] &lt;- 0\nKL2 &lt;- pecox(Surv(time,status)~CVPI.ridge,Surv(time,status==0)~1,data=vdv)\nKL2$Err[is.na(KL2$Err)] &lt;- 0\nKL3 &lt;- pecox(Surv(time,status)~CVPI.clin+CVPI.ridge,Surv(time,status==0)~1,data=vdv)\nKL3$Err[is.na(KL3$Err)] &lt;- 0\n\n### Prediction error curves\nplot(KL0$time,KL0$Err,type=\"s\",lwd=2,lty=2,col=\"#646060\",xlim=c(0,12.5),\n  xlab=\"Time (years)\",ylab=\"Prediction error\")\nlines(KL1$time,KL1$Err,type=\"s\",lwd=2,lty=2)\nlines(KL2$time,KL2$Err,type=\"s\",lwd=2,col=\"#646060\")\nlines(KL3$time,KL3$Err,type=\"s\",lwd=2)\nlegend(\"topleft\",\n  c(\"Null model\",\"Clinical only\",\"Genomic only\",\"Clinical + genomic\"),\n  lwd=2,lty=c(2,2,1,1),col=c(\"#646060\",1,\"#646060\",1),bty=\"n\")\n\nKL &lt;- data.frame(time=KL0$time,Err0=KL0$Err,Err1=KL1$Err,Err2=KL2$Err,Err3=KL3$Err)\nKL$ErrRed1 &lt;- (KL$Err0-KL$Err1)/KL$Err0\nKL$ErrRed2 &lt;- (KL$Err0-KL$Err2)/KL$Err0\nKL$ErrRed3 &lt;- (KL$Err0-KL$Err3)/KL$Err0\n\n### Prediction error reduction curves\nplot(KL$time,KL$ErrRed3,type=\"s\",lwd=2,xlim=c(0,12.5),ylim=c(0,0.25),\n  xlab=\"Time (years)\",ylab=\"Prediction error reduction\")\nlines(KL$time,KL$ErrRed2,type=\"s\",lwd=2,col=\"#646060\")\nlines(KL$time,KL$ErrRed1,type=\"s\",lwd=2,lty=2)\nlegend(\"topright\",c(\"Clinical only\",\"Genomic only\",\"Clinical + genomic\"),\n  lwd=2,lty=c(2,1,1),col=c(1,\"#646060\",1),bty=\"n\")"
  },
  {
    "objectID": "chapters/chapter_12.html",
    "href": "chapters/chapter_12.html",
    "title": "12  Dynamic prediction based on genomic data",
    "section": "",
    "text": "This file contains R code for the analyses in Chapter 12 of the book Dynamic Prediction in Clinical Survival Analysis (CRC Chapman & Hall) by Hans C. van Houwelingen and Hein Putter\nR code written by Hein Putter (H.Putter@lumc.nl for comments/questions) The dynpred package is available from CRAN\nConsistency with the book has been checked with - R version 2.14.0 - survival version 2.36-10 - dynpred version 0.1.1\n\n\nCode\nlibrary(penalized) # version 0.9-37\nlibrary(Biobase) # see chap11.r for download\nlibrary(dynpred)\ndata(nki)\n\n### This chapter continues from chapter 11\n### If chapter 11 is still in memory there is no need to run the following and\n### you can continue where it says --- Continue here ---\n# The van de Vijver data, not part of dynpred, available from the book website,\n# chapter11, should be placed in the working directory\nload(\"VanDeVijver.Rdata\")\n# Please make sure that the files \"cvlassopred.txt\" and \"cvridgepred.txt\",\n# available from the book website is placed in the working directory\ncvlasso &lt;- read.table(\"cvlassopred.txt\",header=TRUE,sep=\"\\t\")\nPI.lasso &lt;- cvlasso$PI.lasso\nSurv.lasso &lt;- cvlasso[,-(1:2)]\ncvridge &lt;- read.table(\"cvridgepred.txt\",header=TRUE,sep=\"\\t\")\nPI.ridge &lt;- cvridge$PI.ridge\nSurv.ridge &lt;- cvridge[,-(1:2)]\n# Save the follow-up data of VanDeVijver in separate data set,\n# rename time and status variables\nvdv &lt;- pData(VanDeVijver)\nvdv$time &lt;- vdv$survival.death.\nvdv$status &lt;- vdv$event_death\n# Extract n and time points from the Surv.lasso object\nn &lt;- nrow(Surv.lasso)\ntt &lt;- as.numeric(substr(dimnames(Surv.lasso)[[2]],start=6,stop=100))\n# New cross-validated PI's, append them to vdv data\nt0 &lt;- 5\nidxt0 &lt;- max(which(tt&lt;=t0))\nCVPI.lasso &lt;- log(-log(Surv.lasso[,idxt0]))\nCVPI.lasso &lt;- CVPI.lasso - mean(CVPI.lasso)\nCVPI.ridge &lt;- log(-log(Surv.ridge[,idxt0]))\nCVPI.ridge &lt;- CVPI.ridge - mean(CVPI.ridge)\nvdv$group.lasso &lt;- as.numeric(cut(CVPI.lasso,c(-Inf,quantile(CVPI.lasso)[2:4],Inf)))\nvdv$group.ridge &lt;- as.numeric(cut(CVPI.ridge,c(-Inf,quantile(CVPI.ridge)[2:4],Inf)))\n### Cross-validated clinical prognostic indices\nCVPI.clin &lt;- rep(NA,n)\nfor (i in 1:n) {\n  # leave i out\n  ci &lt;- coxph(Surv(tyears,d) ~ chemotherapy + hormonaltherapy + typesurgery +\n    histolgrade + vasc.invasion + diameter + posnodes + age + mlratio, data=nki[-i,], method=\"breslow\")\n  sfi &lt;- survfit(ci, newdata=nki[i,])\n  summi &lt;- summary(sfi, times=5)\n  CVPI.clin[i] &lt;- log(-log(summi$surv))\n}\nCVPI.clin &lt;- CVPI.clin-mean(CVPI.clin)\n\n### --- Continue here ---\nvdv$CVPI.clin &lt;- CVPI.clin\nvdv$CVPI.gen &lt;- CVPI.ridge\n# keep only smaller part\nvdv &lt;- vdv[,c(1,30:35)]\n\n###############################################################################\n###############################################################################\n### Table 12.1: Regression coefficients (standard errors) in the two-stage\n### Cox regression approach\n###############################################################################\n###############################################################################\n\ntt &lt;- sort(unique(vdv$time[vdv$status==1]))\nvdv2 &lt;- survSplit(data=vdv, cut=tt, end=\"time\", start=\"Tstart\", event=\"status\")\nvdv2$lnt &lt;- log(vdv2$time+1)\n\n## Clinical cross-validated PI\n# Time fixed only\nclinfixed &lt;- coxph(Surv(time, status) ~ CVPI.clin, data = vdv, method=\"breslow\")\nclinfixed\n# Same model in longer data\nclinfixed &lt;- coxph(Surv(Tstart, time, status) ~ CVPI.clin, data = vdv2, method=\"breslow\")\nclinfixed\ndata.frame(loglik0=clinfixed$loglik[1],loglik1=clinfixed$loglik[1],chisq=2*diff(clinfixed$loglik))\n# Time varying\nclintime &lt;- coxph(Surv(Tstart, time, status) ~ CVPI.clin + CVPI.clin:lnt, data = vdv2, method=\"breslow\")\nclintime\ndata.frame(loglik0=clintime$loglik[1],loglik1=clintime$loglik[1],chisq=2*diff(clintime$loglik))\nanova(clinfixed,clintime)\n\n## Genetic cross-validated PI\n# Time fixed only, directly in longer data\ngenfixed &lt;- coxph(Surv(Tstart, time, status) ~ CVPI.gen, data = vdv2, method=\"breslow\")\ngenfixed\ndata.frame(loglik0=genfixed$loglik[1],loglik1=genfixed$loglik[1],chisq=2*diff(genfixed$loglik))\n# Time varying\ngentime &lt;- coxph(Surv(Tstart, time, status) ~ CVPI.gen + CVPI.gen:lnt, data = vdv2, method=\"breslow\")\ngentime\ndata.frame(loglik0=gentime$loglik[1],loglik1=gentime$loglik[1],chisq=2*diff(gentime$loglik))\nanova(genfixed,gentime)\n\n## Super learner\nc3 &lt;- coxph(Surv(time,status)~CVPI.clin+CVPI.gen,data=vdv,method=\"breslow\") # from end Chapter 11\nvdv$CVPI.comb &lt;- c3$coef[1]*vdv$CVPI.clin + c3$coef[2]*vdv$CVPI.gen\nvdv2$CVPI.comb &lt;- c3$coef[1]*vdv2$CVPI.clin + c3$coef[2]*vdv2$CVPI.gen\n\n# Time fixed only\ncombfixed &lt;- coxph(Surv(Tstart, time, status) ~ CVPI.comb, data = vdv2, method=\"breslow\")\ncombfixed\ndata.frame(loglik0=combfixed$loglik[1],loglik1=combfixed$loglik[1],chisq=2*diff(combfixed$loglik))\n# Time varying\ncombtime &lt;- coxph(Surv(Tstart, time, status) ~ CVPI.comb + CVPI.comb:lnt, data = vdv2, method=\"breslow\")\ncombtime\ndata.frame(loglik0=combtime$loglik[1],loglik1=combtime$loglik[1],chisq=2*diff(combtime$loglik))\nanova(combfixed,combtime)\n\n\n###############################################################################\n###############################################################################\n### Table 12.2: Univariate and multivariate Cox regression on clinical and\n### genomic cross-validated prognostic indices in different landmark data sets\n###############################################################################\n###############################################################################\n\n# Landmark data sets\nLMs &lt;- seq(0,5,by=1)\nw &lt;- 5\nfor (i in 1:length(LMs)) {\n    LM &lt;- LMs[i]\n    cat(\"\\n\\nLandmark time point:\",LM,\"\\n\\n\")\n    LMdata &lt;- cutLM(data=vdv,outcome=list(time=\"time\",status=\"status\"),\n        LM=LM,horizon=LM+w,covs=list(fixed=c(\"CVPI.clin\",\"CVPI.gen\",\"CVPI.comb\"),timedep=NULL))\n    cox.clin &lt;- coxph(Surv(LM,time,status)~CVPI.clin, data=LMdata, method=\"breslow\")\n    print(data.frame(B=round(cox.clin$coef,3),chisq=round(2*diff(cox.clin$loglik),3)))\n    cox.gen &lt;- coxph(Surv(LM,time,status)~CVPI.gen, data=LMdata, method=\"breslow\")\n    print(data.frame(B=round(cox.gen$coef,3),chisq=round(2*diff(cox.gen$loglik),3)))\n    cox.comb &lt;- coxph(Surv(LM,time,status)~CVPI.comb, data=LMdata, method=\"breslow\")\n    print(data.frame(B=round(cox.comb$coef,3),chisq=round(2*diff(cox.comb$loglik),3)))\n}\n\n###############################################################################\n###############################################################################\n### Table 12.3: Estimated regression coefficients (standard errors) for the\n### proportional baselines (ipl*) landmark super models without and with\n### (landmark-dependent) linear landmark interactions\n###############################################################################\n###############################################################################\n\n# Stacked landmark data set based on a finer grid\nLMs &lt;- seq(0,7,by=0.1)\nw &lt;- 5\nLMdata &lt;- cutLM(data=vdv,outcome=list(time=\"time\",status=\"status\"),\n    LM=0,horizon=w,covs=list(fixed=c(\"CVPI.clin\",\"CVPI.gen\",\"CVPI.comb\"),timedep=NULL))\nfor (i in 2:length(LMs)) {\n    LM &lt;- LMs[i]\n    LMdata &lt;- rbind(LMdata,cutLM(data=vdv,outcome=list(time=\"time\",status=\"status\"),\n        LM=LM,horizon=LM+w,covs=list(fixed=c(\"CVPI.clin\",\"CVPI.gen\",\"CVPI.comb\"),timedep=NULL)))\n}\n\nf1 &lt;- function(t) 1\nf2 &lt;- function(t) (t/7)\n\n# Explicitly code interactions of treatment with LM\nLMdata$clin1 &lt;- LMdata$CVPI.clin*f1(LMdata$LM)\nLMdata$clin2 &lt;- LMdata$CVPI.clin*f2(LMdata$LM)\nLMdata$gen1 &lt;- LMdata$CVPI.gen*f1(LMdata$LM)\nLMdata$gen2 &lt;- LMdata$CVPI.gen*f2(LMdata$LM)\nLMdata$comb1 &lt;- LMdata$CVPI.comb*f1(LMdata$LM)\nLMdata$comb2 &lt;- LMdata$CVPI.comb*f2(LMdata$LM)\n# ipl model\niplstrat &lt;- coxph(Surv(LM,time,status) ~ clin1 + clin2 + gen1 + gen2 + strata(LM) + cluster(ID), data=LMdata, method=\"breslow\")\niplstrat\n# ipl* model\ng1 &lt;- function(t) (t/7)\ng2 &lt;- function(t) (t/7)^2\nLMdata$LM1 &lt;- g1(LMdata$LM)\nLMdata$LM2 &lt;- g2(LMdata$LM)\niplcov &lt;- coxph(Surv(LM,time,status) ~ clin1 + clin2 + gen1 + gen2 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplcov\n\n# ipl* models, separate and combined, with and without interactions\niplclin1 &lt;- coxph(Surv(LM,time,status) ~ clin1 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplclin1\niplclin2 &lt;- coxph(Surv(LM,time,status) ~ clin1 + clin2 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplclin2\niplgen1 &lt;- coxph(Surv(LM,time,status) ~ gen1 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplgen1\niplgen2 &lt;- coxph(Surv(LM,time,status) ~ gen1 + gen2 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplgen2\niplcomb1 &lt;- coxph(Surv(LM,time,status) ~ comb1 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplcomb1\niplcomb2 &lt;- coxph(Surv(LM,time,status) ~ comb1 + comb2 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplcomb2\niplcov1 &lt;- coxph(Surv(LM,time,status) ~ clin1 + gen1 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplcov1\niplcov2 &lt;- coxph(Surv(LM,time,status) ~ clin1 + clin2 + gen1 + gen2 + LM1 + LM2 + cluster(ID), data=LMdata, method=\"breslow\")\niplcov2\n\n###############################################################################\n###############################################################################\n### Figure 12.1: Dynamic fixed width predictions for without and with landmark\n### interactions\n###############################################################################\n###############################################################################\n\nbhclin1 &lt;- basehaz(iplclin1,centered=FALSE)\nbhclin2 &lt;- basehaz(iplclin2,centered=FALSE)\nbhgen1 &lt;- basehaz(iplgen1,centered=FALSE)\nbhgen2 &lt;- basehaz(iplgen2,centered=FALSE)\nbhcomb1 &lt;- basehaz(iplcomb1,centered=FALSE)\nbhcomb2 &lt;- basehaz(iplcomb2,centered=FALSE)\nbhcov1 &lt;- basehaz(iplcov1,centered=FALSE)\nbhcov2 &lt;- basehaz(iplcov2,centered=FALSE)\n\n### Prediction plot, uses 25 and 75% quantiles\nclin.qs &lt;- quantile(vdv$CVPI.clin,probs=c(0.25,0.75))\nclin.qs\ngen.qs &lt;- quantile(vdv$CVPI.gen,probs=c(0.25,0.75))\ngen.qs\n# The corresponding quantiles of the super learner in the data\n# for these four individuals\nouter(0.495*clin.qs, 0.582*gen.qs, \"+\")\nFn &lt;- ecdf(vdv$CVPI.comb)\nFn(outer(0.495*clin.qs, 0.582*gen.qs, \"+\"))\n\n## Dynamic predictions for clinical landmark-fixed\nsfclin1 &lt;- survfit(iplclin1,newdata=data.frame(clin1=clin.qs,LM1=0,LM2=0),censor=FALSE)\nsfclin11 &lt;- data.frame(time=sfclin1[1]$time,surv=sfclin1[1]$surv)\nsfclin11$Haz &lt;- -log(sfclin11$surv)\nsfclin11$haz &lt;- diff(c(0,sfclin11$Haz))\nsfclin12 &lt;- data.frame(time=sfclin1[2]$time,surv=sfclin1[2]$surv)\nsfclin12$Haz &lt;- -log(sfclin12$surv)\nsfclin12$haz &lt;- diff(c(0,sfclin12$Haz))\n\ntpred &lt;- c(sfclin11$time,sfclin11$time-w)\ntpred &lt;- c(0,sort(tpred[tpred&gt;0 & tpred&lt;=7]))\nnpred &lt;- length(tpred)\nFwclin11 &lt;- Fwclin12 &lt;- rep(NA,npred)\nfor (i in 1:npred) {\n  tp &lt;- tpred[i]\n  sfi1 &lt;- sfclin11\n  sfi1$haz &lt;- sfi1$haz*exp(iplclin1$coef[\"LM1\"]*g1(tp)+iplclin1$coef[\"LM2\"]*g2(tp))\n  sfi1$Haz &lt;- cumsum(sfi1$haz)\n  tmp &lt;- approx(sfclin11$time, sfi1$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi1$Haz))$y\n  Fwclin11[i] &lt;- 1-exp(-diff(tmp))\n  sfi2 &lt;- sfclin12\n  sfi2$haz &lt;- sfi2$haz*exp(iplclin1$coef[\"LM1\"]*g1(tp)+iplclin1$coef[\"LM2\"]*g2(tp))\n  sfi2$Haz &lt;- cumsum(sfi2$haz)\n  tmp &lt;- approx(sfclin12$time, sfi2$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi2$Haz))$y\n  Fwclin12[i] &lt;- 1-exp(-diff(tmp))\n}\n\n## Dynamic predictions for genomic landmark-fixed\nsfgen1 &lt;- survfit(iplgen1,newdata=data.frame(gen1=gen.qs,LM1=0,LM2=0),censor=FALSE)\nsfgen11 &lt;- data.frame(time=sfgen1[1]$time,surv=sfgen1[1]$surv)\nsfgen11$Haz &lt;- -log(sfgen11$surv)\nsfgen11$haz &lt;- diff(c(0,sfgen11$Haz))\nsfgen12 &lt;- data.frame(time=sfgen1[2]$time,surv=sfgen1[2]$surv)\nsfgen12$Haz &lt;- -log(sfgen12$surv)\nsfgen12$haz &lt;- diff(c(0,sfgen12$Haz))\n\ntpred &lt;- c(sfgen11$time,sfgen11$time-w)\ntpred &lt;- c(0,sort(tpred[tpred&gt;0 & tpred&lt;=7]))\nnpred &lt;- length(tpred)\nFwgen11 &lt;- Fwgen12 &lt;- rep(NA,npred)\nfor (i in 1:npred) {\n  tp &lt;- tpred[i]\n  sfi1 &lt;- sfgen11\n  sfi1$haz &lt;- sfi1$haz*exp(iplgen1$coef[\"LM1\"]*g1(tp)+iplgen1$coef[\"LM2\"]*g2(tp))\n  sfi1$Haz &lt;- cumsum(sfi1$haz)\n  tmp &lt;- approx(sfgen11$time, sfi1$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi1$Haz))$y\n  Fwgen11[i] &lt;- 1-exp(-diff(tmp))\n  sfi2 &lt;- sfgen12\n  sfi2$haz &lt;- sfi2$haz*exp(iplgen1$coef[\"LM1\"]*g1(tp)+iplgen1$coef[\"LM2\"]*g2(tp))\n  sfi2$Haz &lt;- cumsum(sfi2$haz)\n  tmp &lt;- approx(sfgen12$time, sfi2$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi2$Haz))$y\n  Fwgen12[i] &lt;- 1-exp(-diff(tmp))\n}\n\n## Dynamic predictions for super learner landmark-fixed\n# This will have 4 different predictions\nsfcomb1 &lt;- survfit(iplcomb1,newdata=data.frame(comb1=as.vector(outer(0.495*clin.qs, 0.582*gen.qs, \"+\")),LM1=0,LM2=0),censor=FALSE)\nsfcomb11 &lt;- data.frame(time=sfcomb1[1]$time,surv=sfcomb1[1]$surv)\nsfcomb11$Haz &lt;- -log(sfcomb11$surv)\nsfcomb11$haz &lt;- diff(c(0,sfcomb11$Haz))\nsfcomb12 &lt;- data.frame(time=sfcomb1[2]$time,surv=sfcomb1[2]$surv)\nsfcomb12$Haz &lt;- -log(sfcomb12$surv)\nsfcomb12$haz &lt;- diff(c(0,sfcomb12$Haz))\nsfcomb13 &lt;- data.frame(time=sfcomb1[3]$time,surv=sfcomb1[3]$surv)\nsfcomb13$Haz &lt;- -log(sfcomb13$surv)\nsfcomb13$haz &lt;- diff(c(0,sfcomb13$Haz))\nsfcomb14 &lt;- data.frame(time=sfcomb1[4]$time,surv=sfcomb1[4]$surv)\nsfcomb14$Haz &lt;- -log(sfcomb14$surv)\nsfcomb14$haz &lt;- diff(c(0,sfcomb14$Haz))\n\ntpred &lt;- c(sfcomb11$time,sfcomb11$time-w)\ntpred &lt;- c(0,sort(tpred[tpred&gt;0 & tpred&lt;=7]))\nnpred &lt;- length(tpred)\nFwcomb11 &lt;- Fwcomb12 &lt;- Fwcomb13 &lt;- Fwcomb14 &lt;-rep(NA,npred)\nfor (i in 1:npred) {\n  tp &lt;- tpred[i]\n  sfi1 &lt;- sfcomb11\n  sfi1$haz &lt;- sfi1$haz*exp(iplcomb1$coef[\"LM1\"]*g1(tp)+iplcomb1$coef[\"LM2\"]*g2(tp))\n  sfi1$Haz &lt;- cumsum(sfi1$haz)\n  tmp &lt;- approx(sfcomb11$time, sfi1$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi1$Haz))$y\n  Fwcomb11[i] &lt;- 1-exp(-diff(tmp))\n  sfi2 &lt;- sfcomb12\n  sfi2$haz &lt;- sfi2$haz*exp(iplcomb1$coef[\"LM1\"]*g1(tp)+iplcomb1$coef[\"LM2\"]*g2(tp))\n  sfi2$Haz &lt;- cumsum(sfi2$haz)\n  tmp &lt;- approx(sfcomb12$time, sfi2$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi2$Haz))$y\n  Fwcomb12[i] &lt;- 1-exp(-diff(tmp))\n  sfi3 &lt;- sfcomb13\n  sfi3$haz &lt;- sfi3$haz*exp(iplcomb1$coef[\"LM1\"]*g1(tp)+iplcomb1$coef[\"LM2\"]*g2(tp))\n  sfi3$Haz &lt;- cumsum(sfi3$haz)\n  tmp &lt;- approx(sfcomb13$time, sfi3$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi3$Haz))$y\n  Fwcomb13[i] &lt;- 1-exp(-diff(tmp))\n  sfi4 &lt;- sfcomb14\n  sfi4$haz &lt;- sfi4$haz*exp(iplcomb1$coef[\"LM1\"]*g1(tp)+iplcomb1$coef[\"LM2\"]*g2(tp))\n  sfi4$Haz &lt;- cumsum(sfi4$haz)\n  tmp &lt;- approx(sfcomb14$time, sfi4$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi4$Haz))$y\n  Fwcomb14[i] &lt;- 1-exp(-diff(tmp))\n}\n\n## Dynamic predictions for clinical landmark-dependent\nsfclin2 &lt;- survfit(iplclin2,newdata=data.frame(clin1=clin.qs,clin2=0,LM1=0,LM2=0),censor=FALSE)\nsfclin21 &lt;- data.frame(time=sfclin2[1]$time,surv=sfclin2[1]$surv)\nsfclin21$Haz &lt;- -log(sfclin21$surv)\nsfclin21$haz &lt;- diff(c(0,sfclin21$Haz))\nsfclin22 &lt;- data.frame(time=sfclin2[2]$time,surv=sfclin2[2]$surv)\nsfclin22$Haz &lt;- -log(sfclin22$surv)\nsfclin22$haz &lt;- diff(c(0,sfclin22$Haz))\n\ntpred &lt;- c(sfclin21$time,sfclin21$time-w)\ntpred &lt;- c(0,sort(tpred[tpred&gt;0 & tpred&lt;=7]))\nnpred &lt;- length(tpred)\nFwclin21 &lt;- Fwclin22 &lt;- rep(NA,npred)\nfor (i in 1:npred) {\n  tp &lt;- tpred[i]\n  sfi1 &lt;- sfclin21\n  sfi1$haz &lt;- sfi1$haz*exp(iplclin2$coef[\"clin2\"]*clin.qs[1]*f2(tp)+iplclin2$coef[\"LM1\"]*g1(tp)+iplclin2$coef[\"LM2\"]*g2(tp))\n  sfi1$Haz &lt;- cumsum(sfi1$haz)\n  tmp &lt;- approx(sfclin21$time, sfi1$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi1$Haz))$y\n  Fwclin21[i] &lt;- 1-exp(-diff(tmp))\n  sfi2 &lt;- sfclin22\n  sfi2$haz &lt;- sfi2$haz*exp(iplclin2$coef[\"clin2\"]*clin.qs[2]*f2(tp)+iplclin2$coef[\"LM1\"]*g1(tp)+iplclin2$coef[\"LM2\"]*g2(tp))\n  sfi2$Haz &lt;- cumsum(sfi2$haz)\n  tmp &lt;- approx(sfclin22$time, sfi2$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi2$Haz))$y\n  Fwclin22[i] &lt;- 1-exp(-diff(tmp))\n}\n\n## Dynamic predictions for genomic landmark-dependent\nsfgen2 &lt;- survfit(iplgen2,newdata=data.frame(gen1=gen.qs,gen2=0,LM1=0,LM2=0),censor=FALSE)\nsfgen21 &lt;- data.frame(time=sfgen2[1]$time,surv=sfgen2[1]$surv)\nsfgen21$Haz &lt;- -log(sfgen21$surv)\nsfgen21$haz &lt;- diff(c(0,sfgen21$Haz))\nsfgen22 &lt;- data.frame(time=sfgen2[2]$time,surv=sfgen2[2]$surv)\nsfgen22$Haz &lt;- -log(sfgen22$surv)\nsfgen22$haz &lt;- diff(c(0,sfgen22$Haz))\n\ntpred &lt;- c(sfgen21$time,sfgen21$time-w)\ntpred &lt;- c(0,sort(tpred[tpred&gt;0 & tpred&lt;=7]))\nnpred &lt;- length(tpred)\nFwgen21 &lt;- Fwgen22 &lt;- rep(NA,npred)\nfor (i in 1:npred) {\n  tp &lt;- tpred[i]\n  sfi1 &lt;- sfgen21\n  sfi1$haz &lt;- sfi1$haz*exp(iplgen2$coef[\"gen2\"]*gen.qs[1]*f2(tp)+iplgen2$coef[\"LM1\"]*g1(tp)+iplgen2$coef[\"LM2\"]*g2(tp))\n  sfi1$Haz &lt;- cumsum(sfi1$haz)\n  tmp &lt;- approx(sfgen21$time, sfi1$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi1$Haz))$y\n  Fwgen21[i] &lt;- 1-exp(-diff(tmp))\n  sfi2 &lt;- sfgen22\n  sfi2$haz &lt;- sfi2$haz*exp(iplgen2$coef[\"gen2\"]*gen.qs[2]*f2(tp)+iplgen2$coef[\"LM1\"]*g1(tp)+iplgen2$coef[\"LM2\"]*g2(tp))\n  sfi2$Haz &lt;- cumsum(sfi2$haz)\n  tmp &lt;- approx(sfgen22$time, sfi2$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi2$Haz))$y\n  Fwgen22[i] &lt;- 1-exp(-diff(tmp))\n}\n\n## Dynamic predictions for super learner landmark-dependent\n# This will have 4 different predictions\ncombs &lt;- as.vector(outer(0.495*clin.qs, 0.582*gen.qs, \"+\"))\nsfcomb2 &lt;- survfit(iplcomb2,newdata=data.frame(comb1=combs,comb2=0,LM1=0,LM2=0),censor=FALSE)\nsfcomb21 &lt;- data.frame(time=sfcomb2[1]$time,surv=sfcomb2[1]$surv)\nsfcomb21$Haz &lt;- -log(sfcomb21$surv)\nsfcomb21$haz &lt;- diff(c(0,sfcomb21$Haz))\nsfcomb22 &lt;- data.frame(time=sfcomb2[2]$time,surv=sfcomb2[2]$surv)\nsfcomb22$Haz &lt;- -log(sfcomb22$surv)\nsfcomb22$haz &lt;- diff(c(0,sfcomb22$Haz))\nsfcomb23 &lt;- data.frame(time=sfcomb2[3]$time,surv=sfcomb2[3]$surv)\nsfcomb23$Haz &lt;- -log(sfcomb23$surv)\nsfcomb23$haz &lt;- diff(c(0,sfcomb23$Haz))\nsfcomb24 &lt;- data.frame(time=sfcomb2[4]$time,surv=sfcomb2[4]$surv)\nsfcomb24$Haz &lt;- -log(sfcomb24$surv)\nsfcomb24$haz &lt;- diff(c(0,sfcomb24$Haz))\n\ntpred &lt;- c(sfcomb21$time,sfcomb21$time-w)\ntpred &lt;- c(0,sort(tpred[tpred&gt;0 & tpred&lt;=7]))\nnpred &lt;- length(tpred)\nFwcomb21 &lt;- Fwcomb22 &lt;- Fwcomb23 &lt;- Fwcomb24 &lt;-rep(NA,npred)\nfor (i in 1:npred) {\n  tp &lt;- tpred[i]\n  sfi1 &lt;- sfcomb21\n  sfi1$haz &lt;- sfi1$haz*exp(iplcomb2$coef[\"comb2\"]*combs[1]*f2(tp)+iplcomb2$coef[\"LM1\"]*g1(tp)+iplcomb2$coef[\"LM2\"]*g2(tp))\n  sfi1$Haz &lt;- cumsum(sfi1$haz)\n  tmp &lt;- approx(sfcomb21$time, sfi1$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi1$Haz))$y\n  Fwcomb21[i] &lt;- 1-exp(-diff(tmp))\n  sfi2 &lt;- sfcomb22\n  sfi2$haz &lt;- sfi2$haz*exp(iplcomb2$coef[\"comb2\"]*combs[2]*f2(tp)+iplcomb2$coef[\"LM1\"]*g1(tp)+iplcomb2$coef[\"LM2\"]*g2(tp))\n  sfi2$Haz &lt;- cumsum(sfi2$haz)\n  tmp &lt;- approx(sfcomb22$time, sfi2$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi2$Haz))$y\n  Fwcomb22[i] &lt;- 1-exp(-diff(tmp))\n  sfi3 &lt;- sfcomb23\n  sfi3$haz &lt;- sfi3$haz*exp(iplcomb2$coef[\"comb2\"]*combs[3]*f2(tp)+iplcomb2$coef[\"LM1\"]*g1(tp)+iplcomb2$coef[\"LM2\"]*g2(tp))\n  sfi3$Haz &lt;- cumsum(sfi3$haz)\n  tmp &lt;- approx(sfcomb23$time, sfi3$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi3$Haz))$y\n  Fwcomb23[i] &lt;- 1-exp(-diff(tmp))\n  sfi4 &lt;- sfcomb24\n  sfi4$haz &lt;- sfi4$haz*exp(iplcomb2$coef[\"comb2\"]*combs[4]*f2(tp)+iplcomb2$coef[\"LM1\"]*g1(tp)+iplcomb2$coef[\"LM2\"]*g2(tp))\n  sfi4$Haz &lt;- cumsum(sfi4$haz)\n  tmp &lt;- approx(sfcomb24$time, sfi4$Haz, c(tp,tp+w), method=\"constant\",\n          yleft=0, yright=max(sfi4$Haz))$y\n  Fwcomb24[i] &lt;- 1-exp(-diff(tmp))\n}\n\nplot(tpred,Fwclin11,type=\"s\",lwd=2,ylim=c(0,0.5),\n  xlab=\"Prediction time (years)\",ylab=\"Probability\")\nlines(tpred,Fwclin12,type=\"s\",lwd=2,lty=2)\nlines(tpred,Fwclin21,type=\"s\",lwd=2,col=\"#646060\")\nlines(tpred,Fwclin22,type=\"s\",lwd=2,col=\"#646060\",lty=2)\nlegend(\"topright\",\n  c(\"High risk, landmark fixed\",\"High risk, landmark dependent\",\n  \"Low risk, landmark fixed\",\"Low risk, landmark dependent\"),\n  lwd=2,lty=c(2,2,1,1),\n  col=c(1,\"#646060\",1,\"#646060\"),bty=\"n\")\ntitle(main=\"Clinical\")\n\nplot(tpred,Fwgen11,type=\"s\",lwd=2,ylim=c(0,0.5),\n  xlab=\"Prediction time (years)\",ylab=\"Probability\")\nlines(tpred,Fwgen12,type=\"s\",lwd=2,lty=2)\nlines(tpred,Fwgen21,type=\"s\",lwd=2,col=\"#646060\")\nlines(tpred,Fwgen22,type=\"s\",lwd=2,col=\"#646060\",lty=2)\nlegend(\"topright\",\n  c(\"High risk, landmark fixed\",\"High risk, landmark dependent\",\n  \"Low risk, landmark fixed\",\"Low risk, landmark dependent\"),\n  lwd=2,lty=c(2,2,1,1),\n  col=c(1,\"#646060\",1,\"#646060\"),bty=\"n\")\ntitle(main=\"Genomic\")\n\nplot(tpred,Fwcomb11,type=\"s\",lwd=2,ylim=c(0,0.5),\n  xlab=\"Prediction time (years)\",ylab=\"Probability\")\nlines(tpred,Fwcomb12,type=\"s\",lwd=2,lty=2)\nlines(tpred,Fwcomb13,type=\"s\",lwd=2,lty=3)\nlines(tpred,Fwcomb14,type=\"s\",lwd=2,lty=4)\nlines(tpred,Fwcomb21,type=\"s\",lwd=2,col=\"#646060\")\nlines(tpred,Fwcomb22,type=\"s\",lwd=2,col=\"#646060\",lty=2)\nlines(tpred,Fwcomb23,type=\"s\",lwd=2,col=\"#646060\",lty=3)\nlines(tpred,Fwcomb24,type=\"s\",lwd=2,col=\"#646060\",lty=4)\nlegend(\"topright\",\n  c(\"High risk clinical, high risk genomic\",\n    \"High risk clinical, low risk genomic\",\n    \"Low risk clinical, high risk genomic\",\n    \"Low risk clinical, Low risk genomic\"),\n  lwd=2,lty=c(4,2,3,1),bty=\"n\")\nlegend(\"bottomleft\",c(\"Landmark fixed\",\"Landmark dependent\"),\n  lwd=2,col=c(1,\"#646060\"),bty=\"n\")\ntitle(main=\"Super learner\")\n\n###############################################################################\n###############################################################################\n### Figure 12.2: Kullback-Leibler dynamic (fixed width w = 5) prediction error\n### curves for the landmark supermodels without and with landmark interactions\n###############################################################################\n###############################################################################\n\n### Kullback-Leibler dynamic prediction error curves\n# Have to call pe for each landmark time point for each of the models\nLMs &lt;- seq(0,7,by=0.025)\nw &lt;- 5\npes &lt;- matrix(NA,length(LMs),9)\npes[,1] &lt;- LMs\nfor (j in 1:length(LMs)) {\n    LM &lt;- LMs[j]\n# deb(LM, method=\"cat\")\n    ## Make predictions\n\n    # Use landmark data set for estimating conditional censoring distr\n    LMdataj &lt;- cutLM(data=vdv,outcome=list(time=\"time\",status=\"status\"),\n        LM=LM,horizon=LM+w,covs=list(fixed=c(\"CVPI.clin\",\"CVPI.gen\",\"CVPI.comb\"),timedep=NULL))\n    # Explicitly code interactions of treatment with LM and put in LMdataj\n    LMdataj$clin1 &lt;- LMdataj$CVPI.clin*f1(LMdataj$LM)\n    LMdataj$clin2 &lt;- LMdataj$CVPI.clin*f2(LMdataj$LM)\n    LMdataj$gen1 &lt;- LMdataj$CVPI.gen*f1(LMdataj$LM)\n    LMdataj$gen2 &lt;- LMdataj$CVPI.gen*f2(LMdataj$LM)\n    LMdataj$comb1 &lt;- LMdataj$CVPI.comb*f1(LMdataj$LM)\n    LMdataj$comb2 &lt;- LMdataj$CVPI.comb*f2(LMdataj$LM)\n    LMdataj$LM1 &lt;- g1(LMdataj$LM)\n    LMdataj$LM2 &lt;- g2(LMdataj$LM)\n\n    ni &lt;- nrow(LMdataj)\n# deb(ni, method=\"cat\")\n    sfcens &lt;- survfit(Surv(time,status==0)~1,data=LMdataj)\n    tcens &lt;- sfcens$time\n    censmat &lt;- matrix(sfcens$surv,length(sfcens$surv),ni)\n    # clin1\n    H0 &lt;- diff(evalstep(time=bhclin1$time,stepf=bhclin1$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplclin1$coef\n    HR &lt;- exp(B[\"clin1\"] * LMdataj$clin1 + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,2] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n    # clin2\n    H0 &lt;- diff(evalstep(time=bhclin2$time,stepf=bhclin2$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplclin2$coef\n    HR &lt;- exp(B[\"clin1\"]*LMdataj$clin1 + B[\"clin2\"]*LMdataj$clin2*f2(LM) + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,3] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n    # gen1\n    H0 &lt;- diff(evalstep(time=bhgen1$time,stepf=bhgen1$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplgen1$coef\n    HR &lt;- exp(B[\"gen1\"] * LMdataj$gen1 + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,4] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n    # gen2\n    H0 &lt;- diff(evalstep(time=bhgen2$time,stepf=bhgen2$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplgen2$coef\n    HR &lt;- exp(B[\"gen1\"]*LMdataj$gen1 + B[\"gen2\"]*LMdataj$gen2*f2(LM) + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,5] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n    # comb1\n    H0 &lt;- diff(evalstep(time=bhcomb1$time,stepf=bhcomb1$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplcomb1$coef\n    HR &lt;- exp(B[\"comb1\"] * LMdataj$comb1 + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,6] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n    # comb2\n    H0 &lt;- diff(evalstep(time=bhcomb2$time,stepf=bhcomb2$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplcomb2$coef\n    HR &lt;- exp(B[\"comb1\"]*LMdataj$comb1 + B[\"comb2\"]*LMdataj$comb2*f2(LM) + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,7] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n    # cov1\n    H0 &lt;- diff(evalstep(time=bhcov1$time,stepf=bhcov1$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplcov1$coef\n    HR &lt;- exp(B[\"clin1\"]*LMdataj$clin1 + B[\"gen1\"]*LMdataj$gen1 + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,8] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n    # cov2\n    H0 &lt;- diff(evalstep(time=bhcov2$time,stepf=bhcov2$hazard,newtime=c(LM,LM+w),subst=0))\n    B &lt;- iplcov2$coef\n    HR &lt;- exp(B[\"clin1\"]*LMdataj$clin1 + B[\"clin2\"]*LMdataj$clin2*f2(LM) +\n                + B[\"gen1\"]*LMdataj$gen1 + B[\"gen2\"]*LMdataj$gen2*f2(LM) + B[\"LM1\"]*g1(LM) + B[\"LM2\"]*g2(LM))\n    pes[j,9] &lt;- pe(time=LMdataj$time, status=LMdataj$status,\n        tsurv=LM+w, survmat=matrix(exp(-HR*H0),1,ni),\n        tcens=tcens, censmat=censmat, tout=LM+w-0.00001)$Err\n}\npes &lt;- as.data.frame(pes)\nnames(pes) &lt;- c(\"time\",\"clin1\",\"clin2\",\"gen1\",\"gen2\",\"comb1\",\"comb2\",\"cov1\",\"cov2\")\n\n# The null model is easier, just a call to pewcox\nKLw0 &lt;- pewcox(Surv(time,status)~1, Surv(time,status==0)~1, width=w,\n  data=vdv)\npes$null &lt;- evalstep(time=KLw0$time,stepf=KLw0$Err,newtime=LMs,subst=0)\n\n## Without landmark interactions\nplot(pes$time,pes$null,type=\"s\",lwd=2,lty=2,col=\"#646060\",ylim=c(0.3,0.52),xlab=\"Time (years)\",ylab=\"Prediction error\")\nlines(pes$time,pes$clin1,type=\"s\",lwd=2,lty=2,col=1)\nlines(pes$time,pes$gen1,type=\"s\",lwd=2,lty=1,col=\"#646060\")\nlines(pes$time,pes$comb1,type=\"s\",lwd=2,lty=1,col=1)\nlegend(\"topright\",c(\"Null model\",\"Clinical only\",\"Genomic only\",\"Super learner\"),\n  lwd=2,lty=c(2,2,1,1),col=c(\"#646060\",1,\"#646060\",1),bty=\"n\")\n\n## With landmark interactions\nplot(pes$time,pes$null,type=\"s\",lwd=2,lty=2,col=\"#646060\",ylim=c(0.3,0.52),xlab=\"Time (years)\",ylab=\"Prediction error\")\nlines(pes$time,pes$clin2,type=\"s\",lwd=2,lty=2,col=1)\nlines(pes$time,pes$gen2,type=\"s\",lwd=2,lty=1,col=\"#646060\")\nlines(pes$time,pes$comb2,type=\"s\",lwd=2,lty=1,col=1)\nlegend(\"topright\",c(\"Null model\",\"Clinical only\",\"Genomic only\",\"Super learner\"),\n  lwd=2,lty=c(2,2,1,1),col=c(\"#646060\",1,\"#646060\",1),bty=\"n\")\n\n###############################################################################\n###############################################################################\n### Figure 12.3: Kullback-Leibler dynamic (fixed width w = 5) prediction error\n### reduction curves for the landmark supermodels without and with landmark\n### interactions\n###############################################################################\n###############################################################################\n\npesr &lt;- pes\npesr[,2:9] &lt;- (pesr[,10]-pesr[,2:9])/pesr[,10]\n\n## Without landmark interactions\nplot(pesr$time,pesr$clin1,type=\"s\",lwd=2,lty=2,col=1,ylim=c(0,0.2),xlab=\"Time (years)\",ylab=\"Prediction error reduction\")\nlines(pesr$time,pesr$gen1,type=\"s\",lwd=2,lty=1,col=\"#646060\")\nlines(pesr$time,pesr$comb1,type=\"s\",lwd=2,lty=1,col=1)\nlegend(\"topright\",c(\"Clinical only\",\"Genomic only\",\"Super learner\"),\n  lwd=2,lty=c(2,1,1),col=c(1,\"#646060\",1),bty=\"n\")\n\n## With landmark interactions\nplot(pesr$time,pesr$clin2,type=\"s\",lwd=2,lty=2,col=1,ylim=c(0,0.2),xlab=\"Time (years)\",ylab=\"Prediction error reduction\")\nlines(pesr$time,pesr$gen2,type=\"s\",lwd=2,lty=1,col=\"#646060\")\nlines(pesr$time,pesr$comb2,type=\"s\",lwd=2,lty=1,col=1)\nlegend(\"topright\",c(\"Clinical only\",\"Genomic only\",\"Super learner\"),\n  lwd=2,lty=c(2,1,1),col=c(1,\"#646060\",1),bty=\"n\")\n\n\n###############################################################################\n###############################################################################\n### Ridge regression for a set of landmark time points, 0, ..., 5\n###############################################################################\n###############################################################################\n\n# Note, this is very time-consuming, so instead of running this part, the\n# second part, now commented out, could be run instead. Please make\n# sure that the file \"cvlassopred.txt\", available from the book website\n# is placed in the working directory\n\n### Run ridge regression on landmark data sets, calculate cross-validated\n### prognostic index for each individual in the landmark data set,\n### and append that to vdv data\nLMs &lt;- seq(0,5,by=1)\nw &lt;- 5\nvdvplus &lt;- vdv[,1:3]\nvdvplus &lt;- cbind(vdvplus,t(exprs(VanDeVijver)))\n\nfor (i in 1:length(LMs)) {\n    LM &lt;- LMs[i]\ncat(\"\\n\\nLandmark time point:\",LM,\"\\n\\n\")\n    LMdata &lt;- cutLM(data=vdvplus,outcome=list(time=\"time\",status=\"status\"),\n        LM=LM,horizon=LM+w,covs=list(fixed=names(vdvplus)[-(1:3)],timedep=NULL))\ndeb(dim(LMdata), method=\"cat\")\n    print(LMdata[1:6,1:8])\n    optlam2.LM &lt;- optL2(Surv(LM,time,status), LMdata[,4:4922], data=LMdata)\n    lamridg.LM &lt;- optlam2.LM$lambda # optimal lambda\n    ridg.LM &lt;- cvl(Surv(time,status), LMdata[,4:4922], lambda2=lamridg.LM, data=LMdata)\n    Surv.ridge.LM &lt;- as.matrix(ridg.LM$predictions)\n    PI.ridge.LM &lt;-  linear.predictors(ridg.LM$ful)\n    tt.LM &lt;- as.numeric(substr(dimnames(Surv.ridge.LM)[[2]],start=1,stop=100))\n    idxLMw &lt;- max(which(tt.LM&lt;=LM+w))\n    CVPI.ridge.LM &lt;- log(-log(Surv.ridge.LM[,idxLMw]))\n    CVPI.ridge.LM &lt;- CVPI.ridge.LM - mean(CVPI.ridge.LM)\n    nm &lt;- paste(\"CVPI.LM\",LM,sep=\"\")\n    add &lt;- rep(NA,n)\n    add[match(LMdata$ID,vdv$ID)] &lt;- CVPI.ridge.LM\n    vdv &lt;- cbind(vdv,add)\n    names(vdv)[ncol(vdv)] &lt;- nm\n}\n\n# Write result to tab-delimited text file (uncomment next line)\n# write.table(vdv,file=\"vdv.txt\",sep=\"\\t\",row.names=FALSE,col.names=TRUE)\n\n# vdv &lt;- read.table(\"vdv.txt\",header=TRUE,sep=\"\\t\")\n\n# This did not make it in the book, was replaced by table with correlations\npairs(vdv[,c(7,9:14)],pch=20,cex=0.5)\n\n###############################################################################\n###############################################################################\n### Table 12.4: Standard deviations and correlations of cross-validated\n### landmark specific genomic ridge predictors\n###############################################################################\n###############################################################################\n\nround(apply(vdv[,c(7,9:14)],2,sd,na.rm=TRUE),2)\nround(cor(vdv[,c(7,9:14)],use=\"pairwise.complete.obs\"),3)\n\n###############################################################################\n###############################################################################\n### Table 12.5: Comparison of model chi^2 for different approaches,\n### using the genomic data\n###############################################################################\n###############################################################################\n\n# Cox models on the landmark data sets\nLMs &lt;- seq(0,5,by=1)\nw &lt;- 5\n\nfor (i in 1:length(LMs)) {\n    LM &lt;- LMs[i]\ncat(\"\\n\\nLandmark time point:\",LM,\"\\n\\n\")\n    LMdata &lt;- cutLM(data=vdv,outcome=list(time=\"time\",status=\"status\"),\n        LM=LM,horizon=LM+w,\n        covs=list(fixed=paste(\"CVPI\",c(\"gen\",paste(\"LM\",0:5,sep=\"\")),sep=\".\"),timedep=NULL))\ndeb(dim(LMdata))\n    cgen &lt;- coxph(Surv(LM,time,status)~CVPI.gen, data=LMdata, method=\"breslow\")\nprint(data.frame(chisq=round(2*diff(cgen$loglik),3)))\n    form &lt;- as.formula(paste(\"Surv(LM,time,status)\",paste(\"CVPI.LM\",LM,sep=\"\"),sep=\"~\"))\n    cLM &lt;- coxph(form, data=LMdata, method=\"breslow\")\nprint(data.frame(chisq=round(2*diff(cLM$loglik),3)))\n}\n\n# For last landmark data set, use CVPI.LM4\ncLM &lt;- coxph(Surv(LM,time,status)~CVPI.LM4, data=LMdata, method=\"breslow\")\ndata.frame(chisq=round(2*diff(cLM$loglik),3))\n\n###############################################################################\n###############################################################################\n### Table 12.6: Comparison of model chi^2 for different approaches,\n### using the clinical data\n###############################################################################\n###############################################################################\n\n### First calculate the cross-validated prognostic indices for each LM data set\nLMs &lt;- seq(0,5,by=1)\nw &lt;- 5\n\nfor (i in 1:length(LMs)) {\n    LM &lt;- LMs[i]\ncat(\"\\n\\nLandmark time point:\",LM,\"\\n\\n\")\n    LMdata &lt;- cutLM(data=nki,outcome=list(time=\"tyears\",status=\"d\"),\n        LM=LM,horizon=LM+w,\n        covs=list(fixed=c(\"chemotherapy\",\"hormonaltherapy\",\"typesurgery\",\"histolgrade\",\"vasc.invasion\",\"diameter\",\"posnodes\",\"age\",\"mlratio\"),timedep=NULL))\ndeb(dim(LMdata))\n    print(LMdata[1:6,1:8])\n    ni &lt;- nrow(LMdata)\n    CVPI.clin.LM &lt;- rep(NA,ni)\n\n    for (j in 1:ni) {\n      # leave i out\n      ci &lt;- coxph(Surv(tyears,d) ~ chemotherapy + hormonaltherapy + typesurgery +\n        histolgrade + vasc.invasion + diameter + posnodes + age + mlratio, data=LMdata[-j,], method=\"breslow\")\n      sfi &lt;- survfit(ci, newdata=LMdata[j,])\n      # need to evaluate S at LM+w, which is always the last time point (due to administrative censoring),\n      # hence has the lowest survival\n      CVPI.clin.LM[j] &lt;- log(-log(min(sfi$surv)))\n    }\n    CVPI.clin.LM &lt;- CVPI.clin.LM-mean(CVPI.clin.LM)\n\n    add &lt;- rep(NA,n)\n    nm &lt;- paste(\"CVPIclin.LM\",LM,sep=\"\")\n    add[match(LMdata$patnr,nki$patnr)] &lt;- CVPI.clin.LM\n    vdv &lt;- cbind(vdv,add)\n    names(vdv)[ncol(vdv)] &lt;- nm\n}\n\n### Cox models on the landmark data sets\nLMs &lt;- seq(0,5,by=1)\nw &lt;- 5\n\nfor (i in 1:length(LMs)) {\n    LM &lt;- LMs[i]\ncat(\"\\n\\nLandmark time point:\",LM,\"\\n\\n\")\n    LMdata &lt;- cutLM(data=vdv,outcome=list(time=\"time\",status=\"status\"),\n        LM=LM,horizon=LM+w,\n        covs=list(fixed=c(\"CVPI.clin\",paste(\"CVPIclin\",paste(\"LM\",0:5,sep=\"\"),sep=\".\")),timedep=NULL))\ndeb(dim(LMdata))\n    cclin &lt;- coxph(Surv(LM,time,status)~CVPI.clin, data=LMdata, method=\"breslow\")\nprint(data.frame(chisq=round(2*diff(cclin$loglik),3)))\n    form &lt;- as.formula(paste(\"Surv(LM,time,status)\",paste(\"CVPIclin.LM\",LM,sep=\"\"),sep=\"~\"))\n    cclinLM &lt;- coxph(form, data=LMdata, method=\"breslow\")\nprint(data.frame(chisq=round(2*diff(cclinLM$loglik),3)))\n}\n\n### Clinical and genomic information combined\n# Cox models on the landmark data sets\nLMs &lt;- seq(0,5,by=1)\nw &lt;- 5\n\nfor (i in 1:length(LMs)) {\n    LM &lt;- LMs[i]\ncat(\"\\n\\nLandmark time point:\",LM,\"\\n\\n\")\n    LMdata &lt;- cutLM(data=vdv,outcome=list(time=\"time\",status=\"status\"),\n        LM=LM,horizon=LM+w,\n        covs=list(fixed=c(\"CVPI.clin\",paste(\"CVPIclin\",paste(\"LM\",0:5,sep=\"\"),sep=\".\"),\n                        paste(\"CVPI\",c(\"gen\",paste(\"LM\",0:5,sep=\"\")),sep=\".\")),timedep=NULL))\ndeb(dim(LMdata))\n    cboth &lt;- coxph(Surv(LM,time,status)~CVPI.clin+CVPI.gen, data=LMdata, method=\"breslow\")\nprint(data.frame(chisq=round(2*diff(cboth$loglik),3)))\n    form &lt;- as.formula(paste(\"Surv(LM,time,status)\",paste(\"CVPI.clin\",paste(\"CVPI.LM\",LM,sep=\"\"),sep=\"+\"),sep=\"~\"))\n    cbothLM &lt;- coxph(form, data=LMdata, method=\"breslow\")\nprint(data.frame(chisq=round(2*diff(cbothLM$loglik),3)))\n}"
  },
  {
    "objectID": "errata.html#chapter-2",
    "href": "errata.html#chapter-2",
    "title": "Errata",
    "section": "Chapter 2",
    "text": "Chapter 2\n\n(If any)"
  },
  {
    "objectID": "errata.html#chapter-3",
    "href": "errata.html#chapter-3",
    "title": "Errata",
    "section": "Chapter 3",
    "text": "Chapter 3\n\netc."
  }
]